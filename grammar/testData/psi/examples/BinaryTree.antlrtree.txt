File: BinaryTree.kt - f309cd48e1f6a58e0965aa19affe1946
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("BinaryTree")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        COLON(":")
        delegationSpecifiers
          annotatedDelegationSpecifier
            delegationSpecifier
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("IMutableSet")
                  typeArguments
                    LANGLE("<")
                    typeProjection
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("T")
                    RANGLE(">")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            visibilityModifier
              PRIVATE("private")
        CLASS("class")
        simpleIdentifier
          Identifier("TreeNode")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              VAR("var")
              simpleIdentifier
                Identifier("value")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("T")
            COMMA(",")
            classParameter
              VAR("var")
              simpleIdentifier
                Identifier("parent")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("TreeNode")
            RPAREN(")")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAR("var")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("left")
                    COLON(":")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("TreeNode")
                  NL("\n")
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAR("var")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("right")
                    COLON(":")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("TreeNode")
                  NL("\n")
                  NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            visibilityModifier
              PRIVATE("private")
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("compare")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("MatchableComparison")
                  typeArguments
                    LANGLE("<")
                    typeProjection
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("T")
                    RANGLE(">")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            visibilityModifier
              PRIVATE("private")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("root")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("TreeNode")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            visibilityModifier
              PRIVATE("private")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("version")
        ASSIGNMENT("=")
        expression
          literalConstant
            IntegerLiteral("0")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
      NL("\n")
  CONSTRUCTOR("constructor")
  LPAREN("(")
  Identifier("compare")
  COLON(":")
  Identifier("Comparison")
  LANGLE("<")
  Identifier("T")
  RANGLE(">")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  THIS("this")
  DOT(".")
  Identifier("compare")
  ASSIGNMENT("=")
  Identifier("asMatchableComparison")
  LPAREN("(")
  Identifier("comparison")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  CONSTRUCTOR("constructor")
  LPAREN("(")
  RPAREN(")")
  COLON(":")
  THIS("this")
  LPAREN("(")
  Identifier("naturalOrder")
  LANGLE("<")
  Identifier("T")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            visibilityModifier
              PRIVATE("private")
          annotation
            multiAnnotation
              AT_PRE_WS(" @")
              LSQUARE("[")
              unescapedAnnotation
                userType
                  simpleUserType
                    simpleIdentifier
                      OPERATOR("operator")
              RSQUARE("]")
        FUN("fun")
        receiverType
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("T")
        DOT(".")
        simpleIdentifier
          Identifier("compareTo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("other")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("T")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          ASSIGNMENT("=")
          expression
            expression
              simpleIdentifier
                Identifier("compare")
            unarySuffix
              callSuffix
                valueArguments
                  LPAREN("(")
                  valueArgument
                    expression
                      simpleIdentifier
                        Identifier("this")
                  COMMA(",")
                  valueArgument
                    expression
                      simpleIdentifier
                        Identifier("other")
                  RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            memberModifier
              OVERRIDE("override")
        FUN("fun")
        simpleIdentifier
          Identifier("contains")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("item")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("T")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Boolean")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("contains")
                      unarySuffix
                        callSuffix
                          valueArguments
                            LPAREN("(")
                            valueArgument
                              expression
                                simpleIdentifier
                                  Identifier("root")
                            COMMA(",")
                            valueArgument
                              expression
                                simpleIdentifier
                                  Identifier("item")
                            RPAREN(")")
              semis
                NL("\n")
                NL("\n")
              statement
                declaration
                  functionDeclaration
                    FUN("fun")
                    simpleIdentifier
                      Identifier("contains")
                    functionValueParameters
                      LPAREN("(")
                      functionValueParameter
                        parameter
                          simpleIdentifier
                            Identifier("node")
                          COLON(":")
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("TreeNode")
                      COMMA(",")
                      functionValueParameter
                        parameter
                          simpleIdentifier
                            Identifier("item")
                          COLON(":")
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("T")
                      RPAREN(")")
                    COLON(":")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Boolean")
                    functionBody
                      block
                        LCURL("{")
                        NL("\n")
                        statements
                          statement
                            expression
                              ifExpression
                                IF("if")
                                LPAREN("(")
                                expression
                                  expression
                                    simpleIdentifier
                                      Identifier("node")
                                  equalityOperator
                                    EQEQ("==")
                                  expression
                                    literalConstant
                                      NullLiteral("null")
                                RPAREN(")")
                                controlStructureBody
                                  statement
                                    expression
                                      jumpExpression
                                        RETURN("return")
                                        expression
                                          literalConstant
                                            BooleanLiteral("false")
                          semis
                            NL("\n")
                          statement
                            expression
                              whenExpression
                                WHEN("when")
                                whenSubject
                                  LPAREN("(")
                                  expression
                                    expression
                                      simpleIdentifier
                                        Identifier("compare")
                                    unarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          valueArgument
                                            expression
                                              simpleIdentifier
                                                Identifier("item")
                                          COMMA(",")
                                          valueArgument
                                            expression
                                              expression
                                                simpleIdentifier
                                                  Identifier("node")
                                              unarySuffix
                                                navigationSuffix
                                                  memberAccessOperator
                                                    DOT(".")
                                                  simpleIdentifier
                                                    Identifier("value")
                                          RPAREN(")")
                                  RPAREN(")")
                                LCURL("{")
                                NL("\n")
                                whenEntry
                                  whenCondition
                                    expression
                                      simpleIdentifier
                                        Identifier("EQ")
                                  ARROW("->")
                                  controlStructureBody
                                    statement
                                      expression
                                        literalConstant
                                          BooleanLiteral("true")
                                  semi
                                    NL("\n")
                                whenEntry
                                  whenCondition
                                    expression
                                      simpleIdentifier
                                        Identifier("LS")
                                  ARROW("->")
                                  controlStructureBody
                                    statement
                                      expression
                                        expression
                                          simpleIdentifier
                                            Identifier("contains")
                                        unarySuffix
                                          callSuffix
                                            valueArguments
                                              LPAREN("(")
                                              valueArgument
                                                expression
                                                  expression
                                                    simpleIdentifier
                                                      Identifier("node")
                                                  unarySuffix
                                                    navigationSuffix
                                                      memberAccessOperator
                                                        DOT(".")
                                                      simpleIdentifier
                                                        Identifier("left")
                                              COMMA(",")
                                              valueArgument
                                                expression
                                                  simpleIdentifier
                                                    Identifier("item")
                                              RPAREN(")")
                                  semi
                                    NL("\n")
                                whenEntry
                                  whenCondition
                                    expression
                                      simpleIdentifier
                                        Identifier("GT")
                                  ARROW("->")
                                  controlStructureBody
                                    statement
                                      expression
                                        expression
                                          simpleIdentifier
                                            Identifier("contains")
                                        unarySuffix
                                          callSuffix
                                            valueArguments
                                              LPAREN("(")
                                              valueArgument
                                                expression
                                                  expression
                                                    simpleIdentifier
                                                      Identifier("node")
                                                  unarySuffix
                                                    navigationSuffix
                                                      memberAccessOperator
                                                        DOT(".")
                                                      simpleIdentifier
                                                        Identifier("right")
                                              COMMA(",")
                                              valueArgument
                                                expression
                                                  simpleIdentifier
                                                    Identifier("item")
                                              RPAREN(")")
                                  semi
                                    NL("\n")
                                RCURL("}")
                          semis
                            NL("\n")
                        RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            memberModifier
              OVERRIDE("override")
        FUN("fun")
        simpleIdentifier
          Identifier("add")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("item")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("T")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Boolean")
  LCURL("{")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("add")
  LPAREN("(")
  Identifier("Ref")
  LPAREN("(")
  Identifier("root")
  RPAREN(")")
  COMMA(",")
  NullLiteral("null")
  RPAREN(")")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("size")
  INCR("++")
  NL("\n")
  Identifier("version")
  INCR("++")
  NL("\n")
  RETURN("return")
  BooleanLiteral("true")
  NL("\n")
  RCURL("}")
  NL("\n")
  RETURN("return")
  BooleanLiteral("false")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("add")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("node")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Ref")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            nullableType
                              typeReference
                                userType
                                  simpleUserType
                                    simpleIdentifier
                                      Identifier("TreeNode")
                              quest
                                QUEST_NO_WS("?")
                        RANGLE(">")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("parent")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("TreeNode")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Boolean")
  LCURL("{")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("node")
  DOT(".")
  Identifier("value")
  EQEQ("==")
  NullLiteral("null")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("node")
  DOT(".")
  Identifier("value")
  ASSIGNMENT("=")
  Identifier("TreeNode")
  LPAREN("(")
  Identifier("item")
  COMMA(",")
  Identifier("parent")
  RPAREN(")")
  NL("\n")
  RETURN("return")
  BooleanLiteral("true")
  NL("\n")
  RCURL("}")
  NL("\n")
  WHEN("when")
  LPAREN("(")
  Identifier("compare")
  LPAREN("(")
  Identifier("item")
  COMMA(",")
  Identifier("node")
  DOT(".")
  Identifier("value")
  DOT(".")
  Identifier("value")
  RPAREN(")")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("EQ")
  ARROW("->")
  BooleanLiteral("false")
  NL("\n")
  Identifier("LS")
  ARROW("->")
  Identifier("add")
  LPAREN("(")
  Identifier("ref")
  Identifier("node")
  DOT(".")
  Identifier("value")
  DOT(".")
  Identifier("left")
  COMMA(",")
  Identifier("node")
  RPAREN(")")
  NL("\n")
  Identifier("GT")
  ARROW("->")
  Identifier("add")
  LPAREN("(")
  Identifier("ref")
  Identifier("node")
  DOT(".")
  Identifier("value")
  DOT(".")
  Identifier("right")
  COMMA(",")
  Identifier("node")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("addNoRef")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("node")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("TreeNode")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Boolean")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  ifExpression
                    IF("if")
                    LPAREN("(")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("node")
                      equalityOperator
                        EQEQ("==")
                      expression
                        literalConstant
                          NullLiteral("null")
                    RPAREN(")")
                    controlStructureBody
                      block
                        LCURL("{")
                        NL("\n")
                        statements
                          statement
                            assignment
                              directlyAssignableExpression
                                simpleIdentifier
                                  Identifier("root")
                              ASSIGNMENT("=")
                              expression
                                expression
                                  simpleIdentifier
                                    Identifier("TreeNode")
                                unarySuffix
                                  callSuffix
                                    valueArguments
                                      LPAREN("(")
                                      valueArgument
                                        expression
                                          simpleIdentifier
                                            Identifier("item")
                                      COMMA(",")
                                      valueArgument
                                        expression
                                          literalConstant
                                            NullLiteral("null")
                                      RPAREN(")")
                          semis
                            NL("\n")
                          statement
                            expression
                              jumpExpression
                                RETURN("return")
                                expression
                                  literalConstant
                                    BooleanLiteral("true")
                          semis
                            NL("\n")
                        RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  whenExpression
                    WHEN("when")
                    whenSubject
                      LPAREN("(")
                      expression
                        expression
                          simpleIdentifier
                            Identifier("compare")
                        unarySuffix
                          callSuffix
                            valueArguments
                              LPAREN("(")
                              valueArgument
                                expression
                                  simpleIdentifier
                                    Identifier("item")
                              COMMA(",")
                              valueArgument
                                expression
                                  expression
                                    simpleIdentifier
                                      Identifier("node")
                                  unarySuffix
                                    navigationSuffix
                                      memberAccessOperator
                                        DOT(".")
                                      simpleIdentifier
                                        Identifier("value")
                              RPAREN(")")
                      RPAREN(")")
                    LCURL("{")
                    NL("\n")
                    whenEntry
                      whenCondition
                        expression
                          simpleIdentifier
                            Identifier("EQ")
                      ARROW("->")
                      controlStructureBody
                        statement
                          expression
                            jumpExpression
                              RETURN("return")
                              expression
                                literalConstant
                                  BooleanLiteral("false")
                      semi
                        NL("\n")
                    whenEntry
                      whenCondition
                        expression
                          simpleIdentifier
                            Identifier("LS")
                      ARROW("->")
                      NL("\n")
                      controlStructureBody
                        statement
                          expression
                            ifExpression
                              IF("if")
                              LPAREN("(")
                              expression
                                expression
                                  expression
                                    simpleIdentifier
                                      Identifier("node")
                                  unarySuffix
                                    navigationSuffix
                                      memberAccessOperator
                                        DOT(".")
                                      simpleIdentifier
                                        Identifier("left")
                                equalityOperator
                                  EQEQ("==")
                                expression
                                  literalConstant
                                    NullLiteral("null")
                              RPAREN(")")
                              controlStructureBody
                                block
                                  LCURL("{")
                                  NL("\n")
                                  statements
                                    statement
                                      assignment
                                        directlyAssignableExpression
                                          assignableExpression
                                            simpleIdentifier
                                              Identifier("node")
                                          assignableSuffix
                                            navigationSuffix
                                              memberAccessOperator
                                                DOT(".")
                                              simpleIdentifier
                                                Identifier("left")
                                        ASSIGNMENT("=")
                                        expression
                                          expression
                                            simpleIdentifier
                                              Identifier("TreeNode")
                                          unarySuffix
                                            callSuffix
                                              valueArguments
                                                LPAREN("(")
                                                valueArgument
                                                  expression
                                                    simpleIdentifier
                                                      Identifier("item")
                                                COMMA(",")
                                                valueArgument
                                                  expression
                                                    simpleIdentifier
                                                      Identifier("node")
                                                RPAREN(")")
                                    semis
                                      NL("\n")
                                    statement
                                      expression
                                        jumpExpression
                                          RETURN("return")
                                          expression
                                            literalConstant
                                              BooleanLiteral("true")
                                    semis
                                      NL("\n")
                                  RCURL("}")
                              ELSE("else")
                              controlStructureBody
                                statement
                                  expression
                                    jumpExpression
                                      RETURN("return")
                                      expression
                                        expression
                                          simpleIdentifier
                                            Identifier("add")
                                        unarySuffix
                                          callSuffix
                                            valueArguments
                                              LPAREN("(")
                                              valueArgument
                                                expression
                                                  expression
                                                    simpleIdentifier
                                                      Identifier("node")
                                                  unarySuffix
                                                    navigationSuffix
                                                      memberAccessOperator
                                                        DOT(".")
                                                      simpleIdentifier
                                                        Identifier("left")
                                              RPAREN(")")
                      semi
                        NL("\n")
                    whenEntry
                      whenCondition
                        expression
                          simpleIdentifier
                            Identifier("GT")
                      ARROW("->")
                      NL("\n")
                      controlStructureBody
                        statement
                          expression
                            ifExpression
                              IF("if")
                              LPAREN("(")
                              expression
                                expression
                                  expression
                                    simpleIdentifier
                                      Identifier("node")
                                  unarySuffix
                                    navigationSuffix
                                      memberAccessOperator
                                        DOT(".")
                                      simpleIdentifier
                                        Identifier("right")
                                equalityOperator
                                  EQEQ("==")
                                expression
                                  literalConstant
                                    NullLiteral("null")
                              RPAREN(")")
                              controlStructureBody
                                block
                                  LCURL("{")
                                  NL("\n")
                                  statements
                                    statement
                                      assignment
                                        directlyAssignableExpression
                                          assignableExpression
                                            simpleIdentifier
                                              Identifier("node")
                                          assignableSuffix
                                            navigationSuffix
                                              memberAccessOperator
                                                DOT(".")
                                              simpleIdentifier
                                                Identifier("right")
                                        ASSIGNMENT("=")
                                        expression
                                          expression
                                            simpleIdentifier
                                              Identifier("TreeNode")
                                          unarySuffix
                                            callSuffix
                                              valueArguments
                                                LPAREN("(")
                                                valueArgument
                                                  expression
                                                    simpleIdentifier
                                                      Identifier("item")
                                                COMMA(",")
                                                valueArgument
                                                  expression
                                                    simpleIdentifier
                                                      Identifier("node")
                                                RPAREN(")")
                                    semis
                                      NL("\n")
                                    statement
                                      expression
                                        jumpExpression
                                          RETURN("return")
                                          expression
                                            literalConstant
                                              BooleanLiteral("true")
                                    semis
                                      NL("\n")
                                  RCURL("}")
                              ELSE("else")
                              controlStructureBody
                                statement
                                  expression
                                    jumpExpression
                                      RETURN("return")
                                      expression
                                        expression
                                          simpleIdentifier
                                            Identifier("add")
                                        unarySuffix
                                          callSuffix
                                            valueArguments
                                              LPAREN("(")
                                              valueArgument
                                                expression
                                                  expression
                                                    simpleIdentifier
                                                      Identifier("node")
                                                  unarySuffix
                                                    navigationSuffix
                                                      memberAccessOperator
                                                        DOT(".")
                                                      simpleIdentifier
                                                        Identifier("right")
                                              RPAREN(")")
                      semi
                        NL("\n")
                    RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            memberModifier
              OVERRIDE("override")
        FUN("fun")
        simpleIdentifier
          Identifier("remove")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("item")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("T")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Boolean")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("toRemove")
                    ASSIGNMENT("=")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("find")
                      unarySuffix
                        callSuffix
                          valueArguments
                            LPAREN("(")
                            valueArgument
                              expression
                                simpleIdentifier
                                  Identifier("root")
                            COMMA(",")
                            valueArgument
                              expression
                                simpleIdentifier
                                  Identifier("item")
                            RPAREN(")")
              semis
                NL("\n")
              statement
                expression
                  ifExpression
                    IF("if")
                    LPAREN("(")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("toRemove")
                      equalityOperator
                        EQEQ("==")
                      expression
                        literalConstant
                          NullLiteral("null")
                    RPAREN(")")
                    controlStructureBody
                      statement
                        expression
                          jumpExpression
                            RETURN("return")
                            expression
                              literalConstant
                                BooleanLiteral("false")
              semis
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("remove")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        valueArgument
                          expression
                            simpleIdentifier
                              Identifier("toRemove")
                        RPAREN(")")
              semis
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("size")
                  unarySuffix
                    postfixUnaryOperator
                      DECR("--")
              semis
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("version")
                  unarySuffix
                    postfixUnaryOperator
                      INCR("++")
              semis
                NL("\n")
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      literalConstant
                        BooleanLiteral("true")
              semis
                NL("\n")
                NL("\n")
              statement
                declaration
                  functionDeclaration
                    FUN("fun")
                    simpleIdentifier
                      Identifier("find")
                    functionValueParameters
                      LPAREN("(")
                      functionValueParameter
                        parameter
                          simpleIdentifier
                            Identifier("node")
                          COLON(":")
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("TreeNode")
                      RPAREN(")")
                    COLON(":")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("TreeNode")
                    functionBody
                      block
                        LCURL("{")
                        NL("\n")
                        statements
                          statement
                            expression
                              ifExpression
                                IF("if")
                                LPAREN("(")
                                expression
                                  expression
                                    simpleIdentifier
                                      Identifier("node")
                                  equalityOperator
                                    EQEQ("==")
                                  expression
                                    literalConstant
                                      NullLiteral("null")
                                RPAREN(")")
                                controlStructureBody
                                  statement
                                    expression
                                      jumpExpression
                                        RETURN("return")
                                        expression
                                          literalConstant
                                            NullLiteral("null")
                          semis
                            NL("\n")
                          statement
                            expression
                              whenExpression
                                WHEN("when")
                                whenSubject
                                  LPAREN("(")
                                  expression
                                    expression
                                      simpleIdentifier
                                        Identifier("compare")
                                    unarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          valueArgument
                                            expression
                                              simpleIdentifier
                                                Identifier("item")
                                          COMMA(",")
                                          valueArgument
                                            expression
                                              expression
                                                simpleIdentifier
                                                  Identifier("node")
                                              unarySuffix
                                                navigationSuffix
                                                  memberAccessOperator
                                                    DOT(".")
                                                  simpleIdentifier
                                                    Identifier("value")
                                          RPAREN(")")
                                  RPAREN(")")
                                LCURL("{")
                                NL("\n")
                                whenEntry
                                  whenCondition
                                    expression
                                      simpleIdentifier
                                        Identifier("EQ")
                                  ARROW("->")
                                  controlStructureBody
                                    statement
                                      expression
                                        simpleIdentifier
                                          Identifier("node")
                                  semi
                                    NL("\n")
                                whenEntry
                                  whenCondition
                                    expression
                                      simpleIdentifier
                                        Identifier("LS")
                                  ARROW("->")
                                  controlStructureBody
                                    statement
                                      expression
                                        expression
                                          simpleIdentifier
                                            Identifier("find")
                                        unarySuffix
                                          callSuffix
                                            valueArguments
                                              LPAREN("(")
                                              valueArgument
                                                expression
                                                  expression
                                                    simpleIdentifier
                                                      Identifier("node")
                                                  unarySuffix
                                                    navigationSuffix
                                                      memberAccessOperator
                                                        DOT(".")
                                                      simpleIdentifier
                                                        Identifier("left")
                                              RPAREN(")")
                                  semi
                                    NL("\n")
                                whenEntry
                                  whenCondition
                                    expression
                                      simpleIdentifier
                                        Identifier("GT")
                                  ARROW("->")
                                  controlStructureBody
                                    statement
                                      expression
                                        expression
                                          simpleIdentifier
                                            Identifier("find")
                                        unarySuffix
                                          callSuffix
                                            valueArguments
                                              LPAREN("(")
                                              valueArgument
                                                expression
                                                  expression
                                                    simpleIdentifier
                                                      Identifier("node")
                                                  unarySuffix
                                                    navigationSuffix
                                                      memberAccessOperator
                                                        DOT(".")
                                                      simpleIdentifier
                                                        Identifier("right")
                                              RPAREN(")")
                                  semi
                                    NL("\n")
                                RCURL("}")
                          semis
                            NL("\n")
                        RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            visibilityModifier
              PRIVATE("private")
        FUN("fun")
        simpleIdentifier
          Identifier("remove")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("node")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("TreeNode")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  whenExpression
                    WHEN("when")
                    whenSubject
                      LPAREN("(")
                      expression
                        simpleIdentifier
                          Identifier("node")
                      RPAREN(")")
                    LCURL("{")
                    NL("\n")
                    NL("\n")
                    NL("\n")
                    NL("\n")
                    NL("\n")
                    NL("\n")
                    NL("\n")
                    NL("\n")
                    NL("\n")
                    RCURL("}")
              semis
                NL("\n")
                NL("\n")
              statement
                declaration
                  functionDeclaration
                    FUN("fun")
                    simpleIdentifier
                      Identifier("replace")
                    functionValueParameters
                      LPAREN("(")
                      functionValueParameter
                        parameter
                          simpleIdentifier
                            Identifier("node")
                          COLON(":")
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("TreeNode")
                      COMMA(",")
                      functionValueParameter
                        parameter
                          simpleIdentifier
                            Identifier("replace")
                          COLON(":")
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("TreeNode")
                      RPAREN(")")
                    functionBody
                      block
                        LCURL("{")
                        NL("\n")
                        statements
                          statement
                            expression
                              ifExpression
                                IF("if")
                                LPAREN("(")
                                expression
                                  expression
                                    simpleIdentifier
                                      Identifier("node")
                                  equalityOperator
                                    EQEQ("==")
                                  expression
                                    simpleIdentifier
                                      Identifier("root")
                                RPAREN(")")
                                controlStructureBody
                                  block
                                    LCURL("{")
                                    NL("\n")
                                    statements
                                      statement
                                        assignment
                                          directlyAssignableExpression
                                            simpleIdentifier
                                              Identifier("root")
                                          ASSIGNMENT("=")
                                          expression
                                            simpleIdentifier
                                              Identifier("replace")
                                      semis
                                        NL("\n")
                                      statement
                                        expression
                                          jumpExpression
                                            RETURN("return")
                                      semis
                                        NL("\n")
                                    RCURL("}")
                          semis
                            NL("\n")
                          statement
                            expression
                              ifExpression
                                IF("if")
                                LPAREN("(")
                                expression
                                  expression
                                    expression
                                      simpleIdentifier
                                        Identifier("node")
                                    unarySuffix
                                      navigationSuffix
                                        memberAccessOperator
                                          DOT(".")
                                        simpleIdentifier
                                          Identifier("parent")
                                    unarySuffix
                                      navigationSuffix
                                        memberAccessOperator
                                          DOT(".")
                                        simpleIdentifier
                                          Identifier("left")
                                  equalityOperator
                                    EQEQ("==")
                                  expression
                                    simpleIdentifier
                                      Identifier("node")
                                RPAREN(")")
                                controlStructureBody
                                  block
                                    LCURL("{")
                                    NL("\n")
                                    statements
                                      statement
                                        assignment
                                          directlyAssignableExpression
                                            assignableExpression
                                              expression
                                                simpleIdentifier
                                                  Identifier("node")
                                              unarySuffix
                                                navigationSuffix
                                                  memberAccessOperator
                                                    DOT(".")
                                                  simpleIdentifier
                                                    Identifier("parent")
                                            assignableSuffix
                                              navigationSuffix
                                                memberAccessOperator
                                                  DOT(".")
                                                simpleIdentifier
                                                  Identifier("left")
                                          ASSIGNMENT("=")
                                          expression
                                            simpleIdentifier
                                              Identifier("replace")
                                      semis
                                        NL("\n")
                                    RCURL("}")
                                ELSE("else")
                                controlStructureBody
                                  statement
                                    expression
                                      ifExpression
                                        IF("if")
                                        LPAREN("(")
                                        expression
                                          expression
                                            expression
                                              simpleIdentifier
                                                Identifier("node")
                                            unarySuffix
                                              navigationSuffix
                                                memberAccessOperator
                                                  DOT(".")
                                                simpleIdentifier
                                                  Identifier("parent")
                                            unarySuffix
                                              navigationSuffix
                                                memberAccessOperator
                                                  DOT(".")
                                                simpleIdentifier
                                                  Identifier("right")
                                          equalityOperator
                                            EQEQ("==")
                                          expression
                                            simpleIdentifier
                                              Identifier("node")
                                        RPAREN(")")
                                        controlStructureBody
                                          block
                                            LCURL("{")
                                            NL("\n")
                                            statements
                                              statement
                                                assignment
                                                  directlyAssignableExpression
                                                    assignableExpression
                                                      expression
                                                        simpleIdentifier
                                                          Identifier("node")
                                                      unarySuffix
                                                        navigationSuffix
                                                          memberAccessOperator
                                                            DOT(".")
                                                          simpleIdentifier
                                                            Identifier("parent")
                                                    assignableSuffix
                                                      navigationSuffix
                                                        memberAccessOperator
                                                          DOT(".")
                                                        simpleIdentifier
                                                          Identifier("right")
                                                  ASSIGNMENT("=")
                                                  expression
                                                    simpleIdentifier
                                                      Identifier("replace")
                                              semis
                                                NL("\n")
                                            RCURL("}")
                                        ELSE("else")
                                        controlStructureBody
                                          statement
                                            expression
                                              expression
                                                simpleIdentifier
                                                  Identifier("Assert")
                                              unarySuffix
                                                callSuffix
                                                  valueArguments
                                                    LPAREN("(")
                                                    valueArgument
                                                      expression
                                                        literalConstant
                                                          BooleanLiteral("false")
                                                    RPAREN(")")
                          semis
                            NL("\n")
                        RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            visibilityModifier
              PRIVATE("private")
        FUN("fun")
        simpleIdentifier
          Identifier("min")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("node")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("TreeNode")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  ifExpression
                    IF("if")
                    LPAREN("(")
                    expression
                      expression
                        expression
                          simpleIdentifier
                            Identifier("node")
                        unarySuffix
                          navigationSuffix
                            memberAccessOperator
                              DOT(".")
                            simpleIdentifier
                              Identifier("left")
                      equalityOperator
                        EQEQ("==")
                      expression
                        literalConstant
                          NullLiteral("null")
                    RPAREN(")")
                    controlStructureBody
                      statement
                        expression
                          simpleIdentifier
                            Identifier("node")
                    ELSE("else")
                    controlStructureBody
                      statement
                        expression
                          expression
                            simpleIdentifier
                              Identifier("min")
                          unarySuffix
                            callSuffix
                              valueArguments
                                LPAREN("(")
                                valueArgument
                                  expression
                                    expression
                                      simpleIdentifier
                                        Identifier("node")
                                    unarySuffix
                                      navigationSuffix
                                        memberAccessOperator
                                          DOT(".")
                                        simpleIdentifier
                                          Identifier("left")
                                RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            memberModifier
              OVERRIDE("override")
        FUN("fun")
        simpleIdentifier
          Identifier("iterator")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("IIterator")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                  RANGLE(">")
        functionBody
          ASSIGNMENT("=")
          expression
            expression
              simpleIdentifier
                Identifier("mutableIterator")
            unarySuffix
              callSuffix
                valueArguments
                  LPAREN("(")
                  RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            memberModifier
              OVERRIDE("override")
        FUN("fun")
        simpleIdentifier
          Identifier("mutableIterator")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("IMutableIterator")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                  RANGLE(">")
        functionBody
          ASSIGNMENT("=")
          expression
            objectLiteral
              OBJECT("object")
              COLON(":")
              delegationSpecifiers
                annotatedDelegationSpecifier
                  delegationSpecifier
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("IMutableIterator")
              classBody
                LCURL("{")
                NL("\n")
                classMemberDeclarations
                  classMemberDeclaration
                    declaration
                      propertyDeclaration
                        VAL("val")
                        variableDeclaration
                          simpleIdentifier
                            Identifier("version")
                        ASSIGNMENT("=")
                        expression
                          simpleIdentifier
                            Identifier("BinaryTree")
                RCURL("<missing '}'>")
  DOT(".")
  THIS("this")
  DOT(".")
  Identifier("version")
  NL("\n")
  VAL("val")
  Identifier("down")
  ASSIGNMENT("=")
  Identifier("Stack")
  LANGLE("<")
  Identifier("TreeNode")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  VAL("val")
  Identifier("up")
  ASSIGNMENT("=")
  Identifier("Stack")
  LANGLE("<")
  Identifier("TreeNode")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  VAR("var")
  Identifier("lastNode")
  COLON(":")
  Identifier("TreeNode")
  NL("\n")
  NL("\n")
  INIT("init")
  LCURL("{")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("root")
  EXCL_EQ("!=")
  NullLiteral("null")
  RPAREN(")")
  NL("\n")
  Identifier("down")
  DOT(".")
  Identifier("push")
  LPAREN("(")
  Identifier("root")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  OVERRIDE("override")
  FUN("fun")
  Identifier("next")
  LPAREN("(")
  RPAREN(")")
  COLON(":")
  Identifier("T")
  LCURL("{")
  NL("\n")
  IF("if")
  LPAREN("(")
  EXCL_NO_WS("!")
  Identifier("hasNext")
  RPAREN(")")
  NL("\n")
  THROW("throw")
  Identifier("NoMoreElementsException")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  Identifier("checkVersion")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  NL("\n")
  Identifier("lastNode")
  ASSIGNMENT("=")
  Identifier("nextNode")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  RETURN("return")
  Identifier("lastNode")
  DOT(".")
  Identifier("value")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  PRIVATE("private")
  FUN("fun")
  Identifier("nextNode")
  LPAREN("(")
  RPAREN(")")
  COLON(":")
  Identifier("TreeNode")
  LCURL("{")
  NL("\n")
  WHILE("while")
  LPAREN("(")
  BooleanLiteral("true")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  IF("if")
  LPAREN("(")
  EXCL_NO_WS("!")
  Identifier("down")
  DOT(".")
  Identifier("isEmpty")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  VAL("val")
  Identifier("curNode")
  ASSIGNMENT("=")
  Identifier("down")
  DOT(".")
  Identifier("pop")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("curNode")
  DOT(".")
  Identifier("left")
  EXCL_EQ("!=")
  NullLiteral("null")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("up")
  DOT(".")
  Identifier("push")
  LPAREN("(")
  Identifier("curNode")
  RPAREN(")")
  NL("\n")
  Identifier("down")
  DOT(".")
  Identifier("push")
  LPAREN("(")
  Identifier("curNode")
  DOT(".")
  Identifier("left")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  ELSE("else")
  LCURL("{")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("curNode")
  DOT(".")
  Identifier("right")
  EXCL_EQ("!=")
  NullLiteral("null")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("down")
  DOT(".")
  Identifier("push")
  LPAREN("(")
  Identifier("curNode")
  DOT(".")
  Identifier("right")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  RETURN("return")
  Identifier("curNode")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  ELSE("else")
  LCURL("{")
  NL("\n")
  VAL("val")
  Identifier("curNode")
  ASSIGNMENT("=")
  Identifier("up")
  DOT(".")
  Identifier("pop")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("curNode")
  DOT(".")
  Identifier("right")
  EXCL_EQ("!=")
  NullLiteral("null")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("down")
  DOT(".")
  Identifier("push")
  LPAREN("(")
  Identifier("curNode")
  DOT(".")
  Identifier("right")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  RETURN("return")
  Identifier("curNode")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  OVERRIDE("override")
  VAL("val")
  Identifier("hasNext")
  COLON(":")
  Identifier("Boolean")
  NL("\n")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  EXCL_NO_WS("!")
  Identifier("down")
  DOT(".")
  Identifier("isEmpty")
  DISJ("||")
  EXCL_NO_WS("!")
  Identifier("up")
  DOT(".")
  Identifier("isEmpty")
  NL("\n")
  NL("\n")
  NL("\n")
  OVERRIDE("override")
  FUN("fun")
  Identifier("remove")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("checkVersion")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("lastNode")
  EQEQ("==")
  NullLiteral("null")
  RPAREN(")")
  NL("\n")
  THROW("throw")
  Identifier("IterationException")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("Nothing to remove")
  QUOTE_CLOSE(""")
  RPAREN(")")
  NL("\n")
  Identifier("remove")
  LPAREN("(")
  Identifier("lastNode")
  RPAREN(")")
  NL("\n")
  Identifier("version")
  INCR("++")
  NL("\n")
  Identifier("BinaryTree")
  DOT(".")
  THIS("this")
  DOT(".")
  Identifier("version")
  ASSIGNMENT("=")
  Identifier("version")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  PRIVATE("private")
  FUN("fun")
  Identifier("checkVersion")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("version")
  EXCL_EQ("!=")
  Identifier("BinaryTree")
  DOT(".")
  Identifier("this")
  DOT(".")
  Identifier("version")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  THROW("throw")
  Identifier("ConcurrentModificationException")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  RCURL("}")
