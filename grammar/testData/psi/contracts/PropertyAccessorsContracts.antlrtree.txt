File: PropertyAccessorsContracts.kt - daadcd5398b9761a337f9f20cb572101 (WITH_ERRORS)
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("MyClass")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("myInt")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("0")
    semis
      NL("\n")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  Identifier("contract")
  LSQUARE("[")
  Identifier("returnsNotNull")
  LPAREN("(")
  RPAREN(")")
  RSQUARE("]")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  SET("set")
  LPAREN("(")
  topLevelObject
    declaration
  topLevelObject
    declaration
      VALUE("value")
      RPAREN(")")
      LCURL("{")
    semis
      NL("\n")
  FIELD("field")
  ASSIGNMENT("=")
  topLevelObject
    declaration
  topLevelObject
    declaration
      VALUE("value")
      MULT("*")
      IntegerLiteral("10")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("AnotherClass")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              simpleIdentifier
                Identifier("multiplier")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
            RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("anotherInt")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("0")
    semis
      NL("\n")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  Identifier("contract")
  LSQUARE("[")
  Identifier("returnsNotNull")
  LPAREN("(")
  RPAREN(")")
  RSQUARE("]")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  SET("set")
  LPAREN("(")
  topLevelObject
    declaration
  topLevelObject
    declaration
      VALUE("value")
      RPAREN(")")
      Identifier("contract")
      LSQUARE("[")
      Identifier("returns")
      LPAREN("(")
      RPAREN(")")
      RSQUARE("]")
      LCURL("{")
    semis
      NL("\n")
  FIELD("field")
  ASSIGNMENT("=")
  topLevelObject
    declaration
  topLevelObject
    declaration
      VALUE("value")
      MULT("*")
      Identifier("multiplier")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("SomeClass")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              simpleIdentifier
                Identifier("multiplier")
              COLON(":")
              type
                nullableType
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("Int")
                  quest
                    QUEST_NO_WS("?")
            RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("someInt")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("0")
    semis
      NL("\n")
  GET("get")
  LPAREN("(")
  RPAREN(")")
  Identifier("contract")
  LSQUARE("[")
  Identifier("returnsNotNull")
  LPAREN("(")
  RPAREN(")")
  RSQUARE("]")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  SET("set")
  LPAREN("(")
  topLevelObject
    declaration
  topLevelObject
    declaration
      VALUE("value")
      RPAREN(")")
      Identifier("contract")
      LSQUARE("[")
      Identifier("returns")
      LPAREN("(")
      RPAREN(")")
      Identifier("implies")
      LPAREN("(")
  topLevelObject
    declaration
  topLevelObject
    declaration
      VALUE("value")
      EXCL_EQ("!=")
      NullLiteral("null")
      RPAREN(")")
      RSQUARE("]")
      LCURL("{")
    semis
      NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      VALUE("value")
      QUEST_NO_WS("?")
      COLON(":")
      THROW("throw")
      Identifier("NullArgumentException")
      LPAREN("(")
      RPAREN(")")
    semis
      NL("\n")
  FIELD("field")
  ASSIGNMENT("=")
  topLevelObject
    declaration
  topLevelObject
    declaration
      VALUE("value")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  EOF("<EOF>")
