File: FunctionWithMultilineContract.kt - fd65025a95317b4d741349fcdf816d3d
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("baz")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("num")
              COLON(":")
              type
                nullableType
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("Int")
                  quest
                    QUEST_NO_WS("?")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("element")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("MyElement")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("block")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Unit")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
  Identifier("contract")
  LSQUARE("[")
  Identifier("callsInPlace")
  LPAREN("(")
  Identifier("block")
  COMMA(",")
  Identifier("InvocationKind")
  DOT(".")
  Identifier("EXACTLY_ONCE")
  RPAREN(")")
  COMMA(",")
  Identifier("returns")
  LPAREN("(")
  RPAREN(")")
  Identifier("implies")
  LPAREN("(")
  Identifier("num")
  EXCL_EQ("!=")
  NullLiteral("null")
  RPAREN(")")
  COMMA(",")
  Identifier("returns")
  LPAREN("(")
  RPAREN(")")
  Identifier("implies")
  LPAREN("(")
  Identifier("element")
  EXCL_EQ("!=")
  NullLiteral("null")
  RPAREN(")")
  RSQUARE("]")
  LCURL("{")
  NL("\n")
  Identifier("require")
  LPAREN("(")
  Identifier("num")
  EXCL_EQ("!=")
  NullLiteral("null")
  RPAREN(")")
  NL("\n")
  Identifier("require")
  LPAREN("(")
  Identifier("element")
  EXCL_EQ("!=")
  NullLiteral("null")
  RPAREN(")")
  NL("\n")
  Identifier("block")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("num")
  GE(">=")
  IntegerLiteral("0")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  RETURN("return")
  IntegerLiteral("1")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  RETURN("return")
  IntegerLiteral("0")
  NL("\n")
  RCURL("}")
  NL("\n")
  EOF("<EOF>")
