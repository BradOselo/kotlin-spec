File: SemicolonAfterIf.kt - 60a5cb598d16bda33aefa697568ff0cb
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("a")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAR("var")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("x")
                    ASSIGNMENT("=")
                    expression
                      simpleIdentifier
                        Identifier("a")
              semis
                SEMICOLON(";")
              statement
                declaration
                  propertyDeclaration
                    VAR("var")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("y")
                    ASSIGNMENT("=")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("x")
                      unarySuffix
                        postfixUnaryOperator
                          INCR("++")
              semis
                SEMICOLON(";")
              statement
                expression
                  ifExpression
                    IF("if")
                    LPAREN("(")
                    expression
                      expression
                        expression
                          simpleIdentifier
                            Identifier("y")
                        additiveOperator
                          ADD("+")
                        expression
                          literalConstant
                            IntegerLiteral("1")
                      equalityOperator
                        EXCL_EQ("!=")
                      expression
                        simpleIdentifier
                          Identifier("x")
                    RPAREN(")")
                    controlStructureBody
                      statement
                        expression
                          jumpExpression
                            RETURN("return")
                            expression
                              unaryPrefix
                                prefixUnaryOperator
                                  SUB("-")
                              expression
                                literalConstant
                                  IntegerLiteral("1")
              semis
                SEMICOLON(";")
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      simpleIdentifier
                        Identifier("x")
              semis
                SEMICOLON(";")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
