File: ExhaustiveWithNullabilityCheck.kt - a7b8c9e7c1597ac414bad7e9fc598324
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            classModifier
              ENUM("enum")
        CLASS("class")
        simpleIdentifier
          Identifier("X")
        enumClassBody
          LCURL("{")
          enumEntries
            enumEntry
              simpleIdentifier
                Identifier("A")
            COMMA(",")
            enumEntry
              simpleIdentifier
                Identifier("B")
          RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("arg")
              COLON(":")
              type
                nullableType
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("X")
                  quest
                    QUEST_NO_WS("?")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  ifExpression
                    IF("if")
                    LPAREN("(")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("arg")
                      equalityOperator
                        EXCL_EQ("!=")
                      expression
                        literalConstant
                          NullLiteral("null")
                    RPAREN(")")
                    controlStructureBody
                      block
                        LCURL("{")
                        NL("\n")
                        statements
                          statement
                            expression
                              jumpExpression
                                RETURN("return")
                                expression
                                  whenExpression
                                    WHEN("when")
                                    whenSubject
                                      LPAREN("(")
                                      expression
                                        simpleIdentifier
                                          Identifier("arg")
                                      RPAREN(")")
                                    LCURL("{")
                                    NL("\n")
                                    whenEntry
                                      whenCondition
                                        expression
                                          expression
                                            simpleIdentifier
                                              Identifier("X")
                                          unarySuffix
                                            navigationSuffix
                                              memberAccessOperator
                                                DOT(".")
                                              simpleIdentifier
                                                Identifier("A")
                                      ARROW("->")
                                      controlStructureBody
                                        statement
                                          expression
                                            literalConstant
                                              IntegerLiteral("1")
                                      semi
                                        NL("\n")
                                    whenEntry
                                      whenCondition
                                        expression
                                          expression
                                            simpleIdentifier
                                              Identifier("X")
                                          unarySuffix
                                            navigationSuffix
                                              memberAccessOperator
                                                DOT(".")
                                              simpleIdentifier
                                                Identifier("B")
                                      ARROW("->")
                                      controlStructureBody
                                        statement
                                          expression
                                            literalConstant
                                              IntegerLiteral("2")
                                      semi
                                        NL("\n")
                                        NL("\n")
                                    RCURL("}")
                          semis
                            NL("\n")
                        RCURL("}")
                    NL("\n")
                    ELSE("else")
                    controlStructureBody
                      block
                        LCURL("{")
                        NL("\n")
                        statements
                          statement
                            expression
                              jumpExpression
                                RETURN("return")
                                expression
                                  literalConstant
                                    IntegerLiteral("0")
                          semis
                            NL("\n")
                        RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
