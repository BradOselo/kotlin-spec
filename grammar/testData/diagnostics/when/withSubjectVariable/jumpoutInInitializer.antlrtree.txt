File: jumpoutInInitializer.kt - 49963727d5648ee4381d86168aefc612
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testJumpOutInElvis")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                nullableType
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("Int")
                  quest
                    QUEST_NO_WS("?")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                label
                  simpleIdentifier
                    Identifier("loop")
                  AT_POST_WS("@ ")
                loopStatement
                  whileStatement
                    WHILE("while")
                    LPAREN("(")
                    expression
                      literalConstant
                        BooleanLiteral("true")
                    RPAREN(")")
                    controlStructureBody
                      block
                        LCURL("{")
                        NL("\n")
                        statements
                          statement
                            declaration
                              propertyDeclaration
                                VAL("val")
                                variableDeclaration
                                  simpleIdentifier
                                    Identifier("y")
                                ASSIGNMENT("=")
                                expression
                                  whenExpression
                                    WHEN("when")
                                    whenSubject
                                      LPAREN("(")
                                      VAL("val")
                                      variableDeclaration
                                        simpleIdentifier
                                          Identifier("z")
                                      ASSIGNMENT("=")
                                      expression
                                        expression
                                          simpleIdentifier
                                            Identifier("x")
                                        elvis
                                          QUEST_NO_WS("?")
                                          COLON(":")
                                        expression
                                          jumpExpression
                                            BREAK_AT("break@loop")
                                      RPAREN(")")
                                    LCURL("{")
                                    NL("\n")
                                    whenEntry
                                      whenCondition
                                        expression
                                          literalConstant
                                            IntegerLiteral("0")
                                      ARROW("->")
                                      controlStructureBody
                                        statement
                                          expression
                                            stringLiteral
                                              lineStringLiteral
                                                QUOTE_OPEN(""")
                                                lineStringContent
                                                  LineStrText("0")
                                                QUOTE_CLOSE(""")
                                      semi
                                        NL("\n")
                                    whenEntry
                                      ELSE("else")
                                      ARROW("->")
                                      controlStructureBody
                                        statement
                                          expression
                                            stringLiteral
                                              lineStringLiteral
                                                QUOTE_OPEN(""")
                                                lineStringContent
                                                  LineStrText("not 0")
                                                QUOTE_CLOSE(""")
                                      semi
                                        NL("\n")
                                    RCURL("}")
                                NL("\n")
                          semis
                            NL("\n")
                          statement
                            expression
                              expression
                                simpleIdentifier
                                  Identifier("x")
                              unarySuffix
                                navigationSuffix
                                  memberAccessOperator
                                    DOT(".")
                                  simpleIdentifier
                                    Identifier("inc")
                              unarySuffix
                                callSuffix
                                  valueArguments
                                    LPAREN("(")
                                    RPAREN(")")
                          semis
                            NL("\n")
                        RCURL("}")
              semis
                NL("\n")
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("x")
                  unarySuffix
                    navigationSuffix
                      memberAccessOperator
                        DOT(".")
                      simpleIdentifier
                        Identifier("inc")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testJumpOutInElvisLikeIf")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                nullableType
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("Int")
                  quest
                    QUEST_NO_WS("?")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                label
                  simpleIdentifier
                    Identifier("loop")
                  AT_POST_WS("@ ")
                loopStatement
                  whileStatement
                    WHILE("while")
                    LPAREN("(")
                    expression
                      literalConstant
                        BooleanLiteral("true")
                    RPAREN(")")
                    controlStructureBody
                      block
                        LCURL("{")
                        NL("\n")
                        statements
                          statement
                            declaration
                              propertyDeclaration
                                VAL("val")
                                variableDeclaration
                                  simpleIdentifier
                                    Identifier("y")
                                ASSIGNMENT("=")
                                expression
                                  whenExpression
                                    WHEN("when")
                                    whenSubject
                                      LPAREN("(")
                                      VAL("val")
                                      variableDeclaration
                                        simpleIdentifier
                                          Identifier("z")
                                      ASSIGNMENT("=")
                                      expression
                                        ifExpression
                                          IF("if")
                                          LPAREN("(")
                                          expression
                                            expression
                                              simpleIdentifier
                                                Identifier("x")
                                            equalityOperator
                                              EQEQ("==")
                                            expression
                                              literalConstant
                                                NullLiteral("null")
                                          RPAREN(")")
                                          controlStructureBody
                                            statement
                                              expression
                                                jumpExpression
                                                  BREAK_AT("break@loop")
                                          ELSE("else")
                                          controlStructureBody
                                            statement
                                              expression
                                                simpleIdentifier
                                                  Identifier("x")
                                      RPAREN(")")
                                    LCURL("{")
                                    NL("\n")
                                    whenEntry
                                      whenCondition
                                        expression
                                          literalConstant
                                            IntegerLiteral("0")
                                      ARROW("->")
                                      controlStructureBody
                                        statement
                                          expression
                                            stringLiteral
                                              lineStringLiteral
                                                QUOTE_OPEN(""")
                                                lineStringContent
                                                  LineStrText("0")
                                                QUOTE_CLOSE(""")
                                      semi
                                        NL("\n")
                                    whenEntry
                                      ELSE("else")
                                      ARROW("->")
                                      controlStructureBody
                                        statement
                                          expression
                                            stringLiteral
                                              lineStringLiteral
                                                QUOTE_OPEN(""")
                                                lineStringContent
                                                  LineStrText("not 0")
                                                QUOTE_CLOSE(""")
                                      semi
                                        NL("\n")
                                    RCURL("}")
                          semis
                            NL("\n")
                          statement
                            expression
                              expression
                                simpleIdentifier
                                  Identifier("x")
                              unarySuffix
                                navigationSuffix
                                  memberAccessOperator
                                    DOT(".")
                                  simpleIdentifier
                                    Identifier("inc")
                              unarySuffix
                                callSuffix
                                  valueArguments
                                    LPAREN("(")
                                    RPAREN(")")
                          semis
                            NL("\n")
                        RCURL("}")
              semis
                NL("\n")
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("x")
                  unarySuffix
                    navigationSuffix
                      memberAccessOperator
                        DOT(".")
                      simpleIdentifier
                        Identifier("inc")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("getBoolean")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            literalConstant
              BooleanLiteral("true")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testJumpOutInIf")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                nullableType
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("Int")
                  quest
                    QUEST_NO_WS("?")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                label
                  simpleIdentifier
                    Identifier("loop")
                  AT_POST_WS("@ ")
                loopStatement
                  whileStatement
                    WHILE("while")
                    LPAREN("(")
                    expression
                      literalConstant
                        BooleanLiteral("true")
                    RPAREN(")")
                    controlStructureBody
                      block
                        LCURL("{")
                        NL("\n")
                        statements
                          statement
                            declaration
                              propertyDeclaration
                                VAL("val")
                                variableDeclaration
                                  simpleIdentifier
                                    Identifier("y")
                                ASSIGNMENT("=")
                                expression
                                  whenExpression
                                    WHEN("when")
                                    whenSubject
                                      LPAREN("(")
                                      VAL("val")
                                      variableDeclaration
                                        simpleIdentifier
                                          Identifier("z")
                                      ASSIGNMENT("=")
                                      expression
                                        ifExpression
                                          IF("if")
                                          LPAREN("(")
                                          expression
                                            expression
                                              simpleIdentifier
                                                Identifier("getBoolean")
                                            unarySuffix
                                              callSuffix
                                                valueArguments
                                                  LPAREN("(")
                                                  RPAREN(")")
                                          RPAREN(")")
                                          controlStructureBody
                                            block
                                              LCURL("{")
                                              statements
                                                statement
                                                  expression
                                                    expression
                                                      simpleIdentifier
                                                        Identifier("x")
                                                    unarySuffix
                                                      postfixUnaryOperator
                                                        EXCL_NO_WS("!")
                                                        excl
                                                          EXCL_NO_WS("!")
                                                semis
                                                  SEMICOLON(";")
                                                statement
                                                  expression
                                                    jumpExpression
                                                      BREAK_AT("break@loop")
                                              RCURL("}")
                                          ELSE("else")
                                          controlStructureBody
                                            statement
                                              expression
                                                simpleIdentifier
                                                  Identifier("x")
                                      RPAREN(")")
                                    LCURL("{")
                                    NL("\n")
                                    whenEntry
                                      whenCondition
                                        expression
                                          literalConstant
                                            IntegerLiteral("0")
                                      ARROW("->")
                                      controlStructureBody
                                        statement
                                          expression
                                            stringLiteral
                                              lineStringLiteral
                                                QUOTE_OPEN(""")
                                                lineStringContent
                                                  LineStrText("0")
                                                QUOTE_CLOSE(""")
                                      semi
                                        NL("\n")
                                    whenEntry
                                      ELSE("else")
                                      ARROW("->")
                                      controlStructureBody
                                        statement
                                          expression
                                            stringLiteral
                                              lineStringLiteral
                                                QUOTE_OPEN(""")
                                                lineStringContent
                                                  LineStrText("not 0")
                                                QUOTE_CLOSE(""")
                                      semi
                                        NL("\n")
                                    RCURL("}")
                          semis
                            NL("\n")
                          statement
                            expression
                              expression
                                simpleIdentifier
                                  Identifier("x")
                              unarySuffix
                                navigationSuffix
                                  memberAccessOperator
                                    DOT(".")
                                  simpleIdentifier
                                    Identifier("inc")
                              unarySuffix
                                callSuffix
                                  valueArguments
                                    LPAREN("(")
                                    RPAREN(")")
                          semis
                            NL("\n")
                        RCURL("}")
              semis
                NL("\n")
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("x")
                  unarySuffix
                    navigationSuffix
                      memberAccessOperator
                        DOT(".")
                      simpleIdentifier
                        Identifier("inc")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
