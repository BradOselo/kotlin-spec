File: ExhaustivePlatformEnumNull.K.kt - 60919e48b718f0e7ab2938d081aa2cf2
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            NL("\n")
            statements
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      whenExpression
                        WHEN("when")
                        whenSubject
                          LPAREN("(")
                          expression
                            expression
                              simpleIdentifier
                                Identifier("J")
                            unarySuffix
                              navigationSuffix
                                memberAccessOperator
                                  DOT(".")
                                simpleIdentifier
                                  Identifier("create")
                            unarySuffix
                              callSuffix
                                valueArguments
                                  LPAREN("(")
                                  RPAREN(")")
                          RPAREN(")")
                        LCURL("{")
                        NL("\n")
                        whenEntry
                          whenCondition
                            expression
                              expression
                                simpleIdentifier
                                  Identifier("J")
                              unarySuffix
                                navigationSuffix
                                  memberAccessOperator
                                    DOT(".")
                                  simpleIdentifier
                                    Identifier("A")
                          ARROW("->")
                          controlStructureBody
                            statement
                              expression
                                literalConstant
                                  IntegerLiteral("1")
                          semi
                            NL("\n")
                        whenEntry
                          whenCondition
                            expression
                              expression
                                simpleIdentifier
                                  Identifier("J")
                              unarySuffix
                                navigationSuffix
                                  memberAccessOperator
                                    DOT(".")
                                  simpleIdentifier
                                    Identifier("B")
                          ARROW("->")
                          controlStructureBody
                            statement
                              expression
                                literalConstant
                                  IntegerLiteral("2")
                          semi
                            NL("\n")
                        whenEntry
                          whenCondition
                            expression
                              literalConstant
                                NullLiteral("null")
                          ARROW("->")
                          controlStructureBody
                            statement
                              expression
                                literalConstant
                                  IntegerLiteral("0")
                          semi
                            NL("\n")
                        RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
