File: AsInExpressionBody.kt - 140bcd693807c312f3d78cabad36a94e
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("id")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("T")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("T")
        functionBody
          ASSIGNMENT("=")
          expression
            simpleIdentifier
              Identifier("x")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            expression
              literalConstant
                IntegerLiteral("1")
            asOperator
              AS("as")
            type
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Any")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("bar")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            expression
              expression
                simpleIdentifier
                  Identifier("id")
              unarySuffix
                callSuffix
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        literalConstant
                          IntegerLiteral("1")
                    RPAREN(")")
            asOperator
              AS("as")
            type
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Any")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("baz")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            expression
              parenthesizedExpression
                LPAREN("(")
                expression
                  expression
                    literalConstant
                      IntegerLiteral("1")
                  additiveOperator
                    ADD("+")
                  expression
                    literalConstant
                      IntegerLiteral("1")
                RPAREN(")")
            asOperator
              AS("as")
            type
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Any")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("functionLiteral1")
        ASSIGNMENT("=")
        expression
          functionLiteral
            anonymousFunction
              FUN("fun")
              parametersWithOptionalType
                LPAREN("(")
                RPAREN(")")
              functionBody
                ASSIGNMENT("=")
                expression
                  expression
                    literalConstant
                      IntegerLiteral("1")
                  asOperator
                    AS("as")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Any")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("functionLiteral2")
        ASSIGNMENT("=")
        expression
          functionLiteral
            anonymousFunction
              FUN("fun")
              parametersWithOptionalType
                LPAREN("(")
                RPAREN(")")
              functionBody
                ASSIGNMENT("=")
                expression
                  expression
                    expression
                      simpleIdentifier
                        Identifier("id")
                    unarySuffix
                      callSuffix
                        valueArguments
                          LPAREN("(")
                          valueArgument
                            expression
                              literalConstant
                                IntegerLiteral("1")
                          RPAREN(")")
                  asOperator
                    AS("as")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Any")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("functionLiteral3")
        ASSIGNMENT("=")
        expression
          functionLiteral
            anonymousFunction
              FUN("fun")
              parametersWithOptionalType
                LPAREN("(")
                RPAREN(")")
              functionBody
                ASSIGNMENT("=")
                expression
                  expression
                    parenthesizedExpression
                      LPAREN("(")
                      expression
                        expression
                          literalConstant
                            IntegerLiteral("1")
                        additiveOperator
                          ADD("+")
                        expression
                          literalConstant
                            IntegerLiteral("1")
                      RPAREN(")")
                  asOperator
                    AS("as")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Any")
        NL("\n")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("baz")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("b")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Boolean")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            ifExpression
              IF("if")
              LPAREN("(")
              expression
                simpleIdentifier
                  Identifier("b")
              RPAREN(")")
              controlStructureBody
                statement
                  expression
                    expression
                      literalConstant
                        IntegerLiteral("1")
                    asOperator
                      AS("as")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Any")
              ELSE("else")
              controlStructureBody
                statement
                  expression
                    expression
                      literalConstant
                        IntegerLiteral("42")
                    asOperator
                      AS("as")
                    type
                      nullableType
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Any")
                        quest
                          QUEST_NO_WS("?")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
