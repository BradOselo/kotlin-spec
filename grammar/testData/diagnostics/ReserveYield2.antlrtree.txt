File: ReserveYield2.kt - 0198d56db37b25f08053a2dc41958ecc
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            classModifier
              ANNOTATION("annotation")
        CLASS("class")
        simpleIdentifier
          Identifier("yield")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("bar")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("p")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("REDUNDANT_LABEL_WARNING")
  EXCL_NO_WS("!")
  RANGLE(">")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("YIELD_IS_RESERVED")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("yield")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT("@")
      LANGLE("<")
      EXCL_NO_WS("!")
      RANGLE(">")
      Identifier("p")
    semis
      NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("REDUNDANT_LABEL_WARNING")
  EXCL_NO_WS("!")
  RANGLE(">")
  IdentifierAt("`yield`@")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("p")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT("@")
      LANGLE("<")
      EXCL_NO_WS("!")
      Identifier("YIELD_IS_RESERVED")
      EXCL_NO_WS("!")
      RANGLE(">")
      Identifier("yield")
      LANGLE("<")
      EXCL_NO_WS("!")
      RANGLE(">")
      LPAREN("(")
      RPAREN(")")
      Identifier("p")
    semis
      NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT("@")
      Identifier("`yield`")
      LPAREN("(")
      RPAREN(")")
      Identifier("p")
    semis
      NL("\n")
      NL("\n")
  FOR("for")
  LPAREN("(")
  Identifier("yield")
  IN("in")
  IntegerLiteral("1")
  RANGE("..")
  IntegerLiteral("5")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  NL("\n")
  RCURL("}")
  NL("\n")
  LCURL("{")
  Identifier("yield")
  COLON(":")
  Identifier("Int")
  ARROW("->")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        multiVariableDeclaration
          LPAREN("(")
          variableDeclaration
            simpleIdentifier
              Identifier("yield")
          RPAREN(")")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("listOf")
                                    postfixUnarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          valueArgument
                                            expression
                                              disjunction
                                                conjunction
                                                  equality
                                                    comparison
                                                      infixOperation
                                                        elvisExpression
                                                          infixFunctionCall
                                                            rangeExpression
                                                              additiveExpression
                                                                multiplicativeExpression
                                                                  asExpression
                                                                    prefixUnaryExpression
                                                                      postfixUnaryExpression
                                                                        primaryExpression
                                                                          literalConstant
                                                                            IntegerLiteral("4")
                                          RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("listOf")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            modifiers
              modifier
                parameterModifier
                  VARARG("vararg")
            parameter
              simpleIdentifier
                Identifier("e")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("T")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("List")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                  RANGLE(">")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          NullLiteral("null")
                                      postfixUnarySuffix
                                        postfixUnaryOperator
                                          EXCL_NO_WS("!")
                                          excl
                                            EXCL_NO_WS("!")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            functionModifier
              OPERATOR("operator")
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        receiverType
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("List")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                  RANGLE(">")
        DOT(".")
        simpleIdentifier
          Identifier("component1")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        simpleIdentifier
                                          GETTER("get")
                                      postfixUnarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            valueArgument
                                              expression
                                                disjunction
                                                  conjunction
                                                    equality
                                                      comparison
                                                        infixOperation
                                                          elvisExpression
                                                            infixFunctionCall
                                                              rangeExpression
                                                                additiveExpression
                                                                  multiplicativeExpression
                                                                    asExpression
                                                                      prefixUnaryExpression
                                                                        postfixUnaryExpression
                                                                          primaryExpression
                                                                            literalConstant
                                                                              IntegerLiteral("0")
                                            RPAREN(")")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  PACKAGE("package")
  Identifier("p3")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            classModifier
              ENUM("enum")
        CLASS("class")
        simpleIdentifier
          Identifier("yield")
        enumClassBody
          LCURL("{")
          NL("\n")
          enumEntries
            enumEntry
              simpleIdentifier
                Identifier("yield")
            NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("f1")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("yield")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("foo")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
            ASSIGNMENT("=")
            LANGLE("<")
            expression
              disjunction
                conjunction
                  equality
                    comparison
                      infixOperation
                        elvisExpression
                          infixFunctionCall
                            rangeExpression
                              additiveExpression
                                multiplicativeExpression
                                  asExpression
                                    prefixUnaryExpression
                                      unaryPrefix
                                        prefixUnaryOperator
                                          excl
                                            EXCL_NO_WS("!")
                                      postfixUnaryExpression
                                        primaryExpression
                                          simpleIdentifier
                                            Identifier("YIELD_IS_RESERVED")
          EXCL_NO_WS("!")
          RANGLE(">")
          Identifier("yield")
          LANGLE("<")
          EXCL_NO_WS("!")
          RANGLE(">")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("f2")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("foo")
              COLON(":")
              LANGLE("<")
              EXCL_NO_WS("!")
              Identifier("YIELD_IS_RESERVED")
              EXCL_NO_WS("!")
              RANGLE(">")
              Identifier("yield")
              LANGLE("<")
              EXCL_NO_WS("!")
              RANGLE(">")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  PACKAGE("package")
  Identifier("p4")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      typeAlias
        TYPE_ALIAS("typealias")
        simpleIdentifier
          Identifier("yield")
        ASSIGNMENT("=")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Number")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("yield")
            COLON(":")
            type
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Number")
          RANGLE(">")
        simpleIdentifier
          Identifier("f1")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("y")
            COLON(":")
            LANGLE("<")
            EXCL_NO_WS("!")
        Identifier("YIELD_IS_RESERVED")
        EXCL_NO_WS("!")
        RANGLE(">")
        Identifier("yield")
        LANGLE("<")
        EXCL_NO_WS("!")
        RANGLE(">")
        RANGLE(">")
        Identifier("f2")
        LPAREN("(")
        RPAREN(")")
        LCURL("{")
        RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      objectDeclaration
        OBJECT("object")
        simpleIdentifier
          Identifier("X")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("yield")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test3")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("yield")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("X")
  COLONCOLON("::")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("YIELD_IS_RESERVED")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("yield")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("YIELD_IS_RESERVED")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("yield")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  COLONCOLON("::")
  Identifier("toInt")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  EOF("<EOF>")
