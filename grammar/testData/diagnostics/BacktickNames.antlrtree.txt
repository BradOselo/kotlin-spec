File: BacktickNames.kt (WITH_ERRORS)
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        ErrorCharacter("`")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        SEMICOLON(";")
        simpleIdentifier
          Identifier("name")
  ErrorCharacter("`")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        ErrorCharacter("`")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        LSQUARE("[")
        simpleIdentifier
          Identifier("name")
  Identifier("class")
  Identifier("name")
  Identifier("class")
  Identifier("name")
  Identifier("class")
  Identifier("name")
  Identifier("class")
  Identifier("name")
  Identifier("class")
  Identifier("name")
  Identifier("class")
  Identifier("` `")
  LCURL("{")
  RCURL("}")
  Identifier("class")
  Identifier("`  `")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("X")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("X")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("X")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("X")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("X")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("X")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("X")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        RANGLE(">")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        RSQUARE("]")
        ErrorCharacter("`")
        ASSIGNMENT("=")
        IntegerLiteral("9")
    semis
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        ErrorCharacter("`")
        LSQUARE("[")
    semis
      SEMICOLON(";")
  RSQUARE("]")
  ErrorCharacter("`")
  ASSIGNMENT("=")
  IntegerLiteral("10")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("B")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("b")
              COLON("<missing ':'>")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
            COMMA(",")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("d")
              COLON("<missing ':'>")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
            RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("ff")
          COLON(":")
          type
            LPAREN("(")
            Identifier("X")
            Identifier("Int")
            RPAREN(")")
            ARROW("->")
            Identifier("Unit")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      functionLiteral
                                        lambdaLiteral
                                          LCURL("{")
                                          statements
                                          RCURL("}")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("fg")
          COLON(":")
          type
            LPAREN("(")
            LPAREN("(")
            Identifier("X")
            Identifier("Int")
            RPAREN(")")
            ARROW("->")
            Identifier("Unit")
            RPAREN(")")
            ARROW("->")
            Identifier("Unit")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      functionLiteral
                                        lambdaLiteral
                                          LCURL("{")
                                          statements
                                          RCURL("}")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("fh")
          COLON(":")
          type
            LPAREN("(")
            LPAREN("(")
            Identifier("Int")
            RPAREN(")")
            ARROW("->")
            LPAREN("(")
            LPAREN("(")
            Identifier("X")
            Identifier("Int")
            RPAREN(")")
            ARROW("->")
            Identifier("Unit")
            RPAREN(")")
            ARROW("->")
            Identifier("Unit")
            RPAREN(")")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      functionLiteral
                                        lambdaLiteral
                                          LCURL("{")
                                          statements
                                            statement
                                              expression
                                                disjunction
                                                  conjunction
                                                    equality
                                                      comparison
                                                        infixOperation
                                                          elvisExpression
                                                            infixFunctionCall
                                                              rangeExpression
                                                                additiveExpression
                                                                  multiplicativeExpression
                                                                    asExpression
                                                                      prefixUnaryExpression
                                                                        postfixUnaryExpression
                                                                          primaryExpression
                                                                            functionLiteral
                                                                              lambdaLiteral
                                                                                LCURL("{")
                                                                                statements
                                                                                RCURL("}")
                                          RCURL("}")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("f")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("g")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Int")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Unit")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        simpleIdentifier
                                          Identifier("g")
                                      postfixUnarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            valueArgument
                                              expression
                                                disjunction
                                                  conjunction
                                                    equality
                                                      comparison
                                                        infixOperation
                                                          elvisExpression
                                                            infixFunctionCall
                                                              rangeExpression
                                                                additiveExpression
                                                                  multiplicativeExpression
                                                                    asExpression
                                                                      prefixUnaryExpression
                                                                        postfixUnaryExpression
                                                                          primaryExpression
                                                                            simpleIdentifier
                                                                              Identifier("x")
                                            RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            classModifier
              DATA("data")
        CLASS("class")
        simpleIdentifier
          Identifier("Data")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
            COMMA(",")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("y")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
            RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("A")
        primaryConstructor
          classParameters
            LPAREN("(")
            RPAREN(")")
  LCURL("{")
  NL("\n")
  INIT("init")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        ErrorCharacter("`")
        variableDeclaration
          simpleIdentifier
            Identifier("a")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("b")
  ErrorCharacter("`")
  ASSIGNMENT("=")
  IntegerLiteral("10")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("g")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("y")
              Identifier("Int")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        ErrorCharacter("`")
        variableDeclaration
          simpleIdentifier
            Identifier("s")
          COLON(":")
          ErrorCharacter("`")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      literalConstant
                                        IntegerLiteral("30")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        ErrorCharacter("`")
        Identifier("foo")
        COLON(":")
        Identifier("bar")
        Identifier("`(`")
        ErrorCharacter("\")
        Identifier("arg")
        ErrorCharacter("`")
        COLON(":")
        Identifier("Int")
        RPAREN(")")
        COLON(":")
        Identifier("Int")
        LCURL("{")
    semis
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        LPAREN("(")
        Identifier("b")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("b")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("localFun")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
  FOR("for")
  LPAREN("(")
  Identifier("y")
  RealLiteral(".10")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  RCURL("}")
  Identifier("f")
  LPAREN("(")
  IntegerLiteral("10")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  ErrorCharacter("`")
  Identifier("x")
  COLON(":")
  Identifier("z")
  ErrorCharacter("`")
  COLON(":")
  Identifier("Int")
  ARROW("->")
  Identifier("localFun")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  Identifier("f")
  LPAREN("(")
  IntegerLiteral("20")
  COMMA(",")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        receiverType
          LPAREN("(")
          Identifier("z")
          Identifier("Int")
          RPAREN(")")
          COLON(":")
          Identifier("Unit")
          LCURL("{")
          RCURL("}")
          RPAREN(")")
          TRY("try")
          LCURL("{")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        ErrorCharacter("`")
        variableDeclaration
          simpleIdentifier
            Identifier("a")
          COLON(":")
          ErrorCharacter("`")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      literalConstant
                                        IntegerLiteral("10")
    semis
      NL("\n")
  RCURL("}")
  CATCH("catch")
  LPAREN("(")
  Identifier("a")
  Identifier("Exception")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        ErrorCharacter("`")
        variableDeclaration
          simpleIdentifier
            Identifier("b")
          COLON(":")
          ErrorCharacter("`")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      literalConstant
                                        IntegerLiteral("20")
    semis
      NL("\n")
  RCURL("}")
  RETURN("return")
  Identifier("arg")
  RCURL("}")
  EOF("<EOF>")
