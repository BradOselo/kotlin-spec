File: explicitReturnType.kt - c014185257a9358f8e8f8dee1799a917
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("inlineCallExplicitError")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("String")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("inlineFun")
                  unarySuffix
                    callSuffix
                      annotatedLambda
                        label
                          simpleIdentifier
                            Identifier("lamba")
                          AT_POST_WS("@ ")
                        lambdaLiteral
                          LCURL("{")
                          NL("\n")
                          statements
                            statement
                              expression
                                ifExpression
                                  IF("if")
                                  LPAREN("(")
                                  expression
                                    literalConstant
                                      BooleanLiteral("true")
                                  RPAREN(")")
                                  controlStructureBody
                                    block
                                      LCURL("{")
                                      NL("\n")
                                      statements
                                        statement
                                          expression
                                            jumpExpression
                                              RETURN_AT("return@lamba")
                                              expression
                                                literalConstant
                                                  IntegerLiteral("2")
                                        semis
                                          NL("\n")
                                      RCURL("}")
                            semis
                              NL("\n")
                            statement
                              expression
                                literalConstant
                                  IntegerLiteral("1")
                            semis
                              NL("\n")
                          RCURL("}")
              semis
                NL("\n")
                NL("\n")
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      stringLiteral
                        lineStringLiteral
                          QUOTE_OPEN(""")
                          lineStringContent
                            LineStrText("x")
                          QUOTE_CLOSE(""")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("inlineCall")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("String")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("inlineFun")
                  unarySuffix
                    callSuffix
                      annotatedLambda
                        label
                          simpleIdentifier
                            Identifier("lamba")
                          AT_POST_WS("@ ")
                        lambdaLiteral
                          LCURL("{")
                          NL("\n")
                          statements
                            statement
                              expression
                                ifExpression
                                  IF("if")
                                  LPAREN("(")
                                  expression
                                    literalConstant
                                      BooleanLiteral("true")
                                  RPAREN(")")
                                  controlStructureBody
                                    block
                                      LCURL("{")
                                      NL("\n")
                                      statements
                                        statement
                                          expression
                                            jumpExpression
                                              RETURN_AT("return@lamba")
                                              expression
                                                literalConstant
                                                  IntegerLiteral("2")
                                        semis
                                          NL("\n")
                                      RCURL("}")
                            semis
                              NL("\n")
                            statement
                              expression
                                literalConstant
                                  IntegerLiteral("1")
                            semis
                              NL("\n")
                          RCURL("}")
              semis
                NL("\n")
                NL("\n")
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      stringLiteral
                        lineStringLiteral
                          QUOTE_OPEN(""")
                          lineStringContent
                            LineStrText("x")
                          QUOTE_CLOSE(""")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            functionModifier
              INLINE("inline")
        FUN("fun")
        simpleIdentifier
          Identifier("inlineFun")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("s")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Int")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("s")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("noInlineCall")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("String")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("noInline")
                  unarySuffix
                    callSuffix
                      annotatedLambda
                        label
                          simpleIdentifier
                            Identifier("lambda")
                          AT_POST_WS("@ ")
                        lambdaLiteral
                          LCURL("{")
                          NL("\n")
                          statements
                            statement
                              expression
                                ifExpression
                                  IF("if")
                                  LPAREN("(")
                                  expression
                                    literalConstant
                                      BooleanLiteral("true")
                                  RPAREN(")")
                                  controlStructureBody
                                    block
                                      LCURL("{")
                                      NL("\n")
                                      statements
                                        statement
                                          expression
                                            jumpExpression
                                              RETURN_AT("return@lambda")
                                              expression
                                                literalConstant
                                                  IntegerLiteral("2")
                                        semis
                                          NL("\n")
                                      RCURL("}")
                            semis
                              NL("\n")
                            statement
                              expression
                                literalConstant
                                  IntegerLiteral("1")
                            semis
                              NL("\n")
                          RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      stringLiteral
                        lineStringLiteral
                          QUOTE_OPEN(""")
                          lineStringContent
                            LineStrText("x")
                          QUOTE_CLOSE(""")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("noInline")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("s")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Int")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("s")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
