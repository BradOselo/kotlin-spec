File: kt30927.kt - 0c1a0afd68cb8fdb5de28032277bb49d
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("case_0")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("z")
                      COLON(":")
                      type
                        nullableType
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Any")
                          quest
                            QUEST_WS("? ")
                    ASSIGNMENT("=")
                    expression
                      literalConstant
                        IntegerLiteral("10")
              semis
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("y")
                    ASSIGNMENT("=")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("z")
                      unarySuffix
                        navigationSuffix
                          memberAccessOperator
                            DOT(".")
                          simpleIdentifier
                            Identifier("run")
                      unarySuffix
                        callSuffix
                          annotatedLambda
                            lambdaLiteral
                              LCURL("{")
                              NL("\n")
                              statements
                                statement
                                  expression
                                    expression
                                      thisExpression
                                        THIS("this")
                                    asOperator
                                      AS("as")
                                    type
                                      typeReference
                                        userType
                                          simpleUserType
                                            simpleIdentifier
                                              Identifier("Int")
                                semis
                                  NL("\n")
                                statement
                                  expression
                                    thisExpression
                                      THIS("this")
                                semis
                                  NL("\n")
                              RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("y")
                  simpleIdentifier
                    Identifier("checkType")
                  expression
                    functionLiteral
                      lambdaLiteral
                        LCURL("{")
                        statements
                          statement
                            expression
                              expression
                                simpleIdentifier
                                  Identifier("_")
                              unarySuffix
                                typeArguments
                                  LANGLE("<")
                                  typeProjection
                                    type
                                      nullableType
                                        typeReference
                                          userType
                                            simpleUserType
                                              simpleIdentifier
                                                Identifier("Any")
                                        quest
                                          QUEST_NO_WS("?")
                                  RANGLE(">")
                              unarySuffix
                                callSuffix
                                  valueArguments
                                    LPAREN("(")
                                    RPAREN(")")
                        RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("y")
                  simpleIdentifier
                    Identifier("checkType")
                  expression
                    functionLiteral
                      lambdaLiteral
                        LCURL("{")
                        statements
                          statement
                            expression
                              expression
                                simpleIdentifier
                                  Identifier("_")
                              unarySuffix
                                typeArguments
                                  LANGLE("<")
                                  typeProjection
                                    type
                                      typeReference
                                        userType
                                          simpleUserType
                                            simpleIdentifier
                                              Identifier("Int")
                                  RANGLE(">")
                              unarySuffix
                                callSuffix
                                  valueArguments
                                    LPAREN("(")
                                    RPAREN(")")
                        RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("case_1")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("z")
              COLON(":")
              type
                nullableType
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("Any")
                  quest
                    QUEST_NO_WS("?")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("y")
                    ASSIGNMENT("=")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("z")
                      unarySuffix
                        navigationSuffix
                          memberAccessOperator
                            DOT(".")
                          simpleIdentifier
                            Identifier("run")
                      unarySuffix
                        callSuffix
                          annotatedLambda
                            lambdaLiteral
                              LCURL("{")
                              NL("\n")
                              statements
                                statement
                                  expression
                                    whenExpression
                                      WHEN("when")
                                      whenSubject
                                        LPAREN("(")
                                        expression
                                          simpleIdentifier
                                            Identifier("this")
                                        RPAREN(")")
                                      LCURL("{")
                                      NL("\n")
                                      whenEntry
                                        whenCondition
                                          typeTest
                                            isOperator
                                              IS("is")
                                            type
                                              typeReference
                                                userType
                                                  simpleUserType
                                                    simpleIdentifier
                                                      Identifier("String")
                                        ARROW("->")
                                        controlStructureBody
                                          statement
                                            expression
                                              jumpExpression
                                                RETURN_AT("return@run")
                                                expression
                                                  thisExpression
                                                    THIS("this")
                                        semi
                                          NL("\n")
                                      whenEntry
                                        whenCondition
                                          typeTest
                                            isOperator
                                              IS("is")
                                            type
                                              typeReference
                                                userType
                                                  simpleUserType
                                                    simpleIdentifier
                                                      Identifier("Float")
                                        ARROW("->")
                                        controlStructureBody
                                          statement
                                            expression
                                              stringLiteral
                                                lineStringLiteral
                                                  QUOTE_OPEN(""")
                                                  QUOTE_CLOSE(""")
                                        semi
                                          NL("\n")
                                      whenEntry
                                        ELSE("else")
                                        ARROW("->")
                                        controlStructureBody
                                          statement
                                            expression
                                              jumpExpression
                                                RETURN_AT("return@run")
                                                expression
                                                  stringLiteral
                                                    lineStringLiteral
                                                      QUOTE_OPEN(""")
                                                      QUOTE_CLOSE(""")
                                        semi
                                          NL("\n")
                                      RCURL("}")
                                semis
                                  NL("\n")
                              RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("y")
                  simpleIdentifier
                    Identifier("checkType")
                  expression
                    functionLiteral
                      lambdaLiteral
                        LCURL("{")
                        statements
                          statement
                            expression
                              expression
                                simpleIdentifier
                                  Identifier("_")
                              unarySuffix
                                typeArguments
                                  LANGLE("<")
                                  typeProjection
                                    type
                                      nullableType
                                        typeReference
                                          userType
                                            simpleUserType
                                              simpleIdentifier
                                                Identifier("Any")
                                        quest
                                          QUEST_NO_WS("?")
                                  RANGLE(">")
                              unarySuffix
                                callSuffix
                                  valueArguments
                                    LPAREN("(")
                                    RPAREN(")")
                        RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("y")
                  simpleIdentifier
                    Identifier("checkType")
                  expression
                    functionLiteral
                      lambdaLiteral
                        LCURL("{")
                        statements
                          statement
                            expression
                              expression
                                simpleIdentifier
                                  Identifier("_")
                              unarySuffix
                                typeArguments
                                  LANGLE("<")
                                  typeProjection
                                    type
                                      typeReference
                                        userType
                                          simpleUserType
                                            simpleIdentifier
                                              Identifier("kotlin")
                                          DOT(".")
                                          simpleUserType
                                            simpleIdentifier
                                              Identifier("String")
                                  RANGLE(">")
                              unarySuffix
                                callSuffix
                                  valueArguments
                                    LPAREN("(")
                                    RPAREN(")")
                        RCURL("}")
              semis
                NL("\n")
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("case_2")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("z")
              COLON(":")
              type
                nullableType
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("Any")
                  quest
                    QUEST_NO_WS("?")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("y")
                    ASSIGNMENT("=")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("z")
                      unarySuffix
                        navigationSuffix
                          memberAccessOperator
                            DOT(".")
                          simpleIdentifier
                            Identifier("run")
                      unarySuffix
                        callSuffix
                          annotatedLambda
                            lambdaLiteral
                              LCURL("{")
                              NL("\n")
                              statements
                                statement
                                  expression
                                    whenExpression
                                      WHEN("when")
                                      whenSubject
                                        LPAREN("(")
                                        expression
                                          simpleIdentifier
                                            Identifier("this")
                                        RPAREN(")")
                                      LCURL("{")
                                      NL("\n")
                                      whenEntry
                                        whenCondition
                                          typeTest
                                            isOperator
                                              IS("is")
                                            type
                                              typeReference
                                                userType
                                                  simpleUserType
                                                    simpleIdentifier
                                                      Identifier("String")
                                        ARROW("->")
                                        controlStructureBody
                                          statement
                                            expression
                                              thisExpression
                                                THIS("this")
                                        semi
                                          NL("\n")
                                      whenEntry
                                        whenCondition
                                          typeTest
                                            isOperator
                                              IS("is")
                                            type
                                              typeReference
                                                userType
                                                  simpleUserType
                                                    simpleIdentifier
                                                      Identifier("Float")
                                        ARROW("->")
                                        controlStructureBody
                                          statement
                                            expression
                                              stringLiteral
                                                lineStringLiteral
                                                  QUOTE_OPEN(""")
                                                  QUOTE_CLOSE(""")
                                        semi
                                          NL("\n")
                                      whenEntry
                                        ELSE("else")
                                        ARROW("->")
                                        controlStructureBody
                                          statement
                                            expression
                                              jumpExpression
                                                RETURN_AT("return@run")
                                                expression
                                                  stringLiteral
                                                    lineStringLiteral
                                                      QUOTE_OPEN(""")
                                                      QUOTE_CLOSE(""")
                                        semi
                                          NL("\n")
                                      RCURL("}")
                                semis
                                  NL("\n")
                              RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("y")
                  simpleIdentifier
                    Identifier("checkType")
                  expression
                    functionLiteral
                      lambdaLiteral
                        LCURL("{")
                        statements
                          statement
                            expression
                              expression
                                simpleIdentifier
                                  Identifier("_")
                              unarySuffix
                                typeArguments
                                  LANGLE("<")
                                  typeProjection
                                    type
                                      typeReference
                                        userType
                                          simpleUserType
                                            simpleIdentifier
                                              Identifier("kotlin")
                                          DOT(".")
                                          simpleUserType
                                            simpleIdentifier
                                              Identifier("String")
                                  RANGLE(">")
                              unarySuffix
                                callSuffix
                                  valueArguments
                                    LPAREN("(")
                                    RPAREN(")")
                        RCURL("}")
              semis
                NL("\n")
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("case_3")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("z")
              COLON(":")
              type
                nullableType
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("Any")
                  quest
                    QUEST_NO_WS("?")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("y")
                    ASSIGNMENT("=")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("z")
                      unarySuffix
                        navigationSuffix
                          memberAccessOperator
                            DOT(".")
                          simpleIdentifier
                            Identifier("let")
                      unarySuffix
                        callSuffix
                          annotatedLambda
                            lambdaLiteral
                              LCURL("{")
                              NL("\n")
                              statements
                                statement
                                  expression
                                    whenExpression
                                      WHEN("when")
                                      whenSubject
                                        LPAREN("(")
                                        expression
                                          simpleIdentifier
                                            Identifier("it")
                                        RPAREN(")")
                                      LCURL("{")
                                      NL("\n")
                                      whenEntry
                                        whenCondition
                                          typeTest
                                            isOperator
                                              IS("is")
                                            type
                                              typeReference
                                                userType
                                                  simpleUserType
                                                    simpleIdentifier
                                                      Identifier("String")
                                        ARROW("->")
                                        controlStructureBody
                                          statement
                                            expression
                                              jumpExpression
                                                RETURN_AT("return@let")
                                                expression
                                                  simpleIdentifier
                                                    Identifier("it")
                                        semi
                                          NL("\n")
                                      whenEntry
                                        whenCondition
                                          typeTest
                                            isOperator
                                              IS("is")
                                            type
                                              typeReference
                                                userType
                                                  simpleUserType
                                                    simpleIdentifier
                                                      Identifier("Float")
                                        ARROW("->")
                                        controlStructureBody
                                          statement
                                            expression
                                              stringLiteral
                                                lineStringLiteral
                                                  QUOTE_OPEN(""")
                                                  QUOTE_CLOSE(""")
                                        semi
                                          NL("\n")
                                      whenEntry
                                        ELSE("else")
                                        ARROW("->")
                                        controlStructureBody
                                          statement
                                            expression
                                              jumpExpression
                                                RETURN_AT("return@let")
                                                expression
                                                  stringLiteral
                                                    lineStringLiteral
                                                      QUOTE_OPEN(""")
                                                      QUOTE_CLOSE(""")
                                        semi
                                          NL("\n")
                                      RCURL("}")
                                semis
                                  NL("\n")
                              RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("y")
                  simpleIdentifier
                    Identifier("checkType")
                  expression
                    functionLiteral
                      lambdaLiteral
                        LCURL("{")
                        statements
                          statement
                            expression
                              expression
                                simpleIdentifier
                                  Identifier("_")
                              unarySuffix
                                typeArguments
                                  LANGLE("<")
                                  typeProjection
                                    type
                                      nullableType
                                        typeReference
                                          userType
                                            simpleUserType
                                              simpleIdentifier
                                                Identifier("Any")
                                        quest
                                          QUEST_NO_WS("?")
                                  RANGLE(">")
                              unarySuffix
                                callSuffix
                                  valueArguments
                                    LPAREN("(")
                                    RPAREN(")")
                        RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("y")
                  simpleIdentifier
                    Identifier("checkType")
                  expression
                    functionLiteral
                      lambdaLiteral
                        LCURL("{")
                        statements
                          statement
                            expression
                              expression
                                simpleIdentifier
                                  Identifier("_")
                              unarySuffix
                                typeArguments
                                  LANGLE("<")
                                  typeProjection
                                    type
                                      typeReference
                                        userType
                                          simpleUserType
                                            simpleIdentifier
                                              Identifier("kotlin")
                                          DOT(".")
                                          simpleUserType
                                            simpleIdentifier
                                              Identifier("String")
                                  RANGLE(">")
                              unarySuffix
                                callSuffix
                                  valueArguments
                                    LPAREN("(")
                                    RPAREN(")")
                        RCURL("}")
              semis
                NL("\n")
                NL("\n")
            RCURL("}")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
