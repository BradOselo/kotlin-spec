File: localFunBetween.kt - d47f1ef5e1b3e03f32d43352cfc7da40
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        CLASS("class")
        simpleIdentifier
          Identifier("Base")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Derived")
        COLON(":")
        delegationSpecifiers
          annotatedDelegationSpecifier
            delegationSpecifier
              constructorInvocation
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Base")
                valueArguments
                  LPAREN("(")
                  RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("bar")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("derived")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Derived")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            simpleIdentifier
              Identifier("derived")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("trans")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("n")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("f")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Int")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Boolean")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            ifExpression
              IF("if")
              LPAREN("(")
              expression
                expression
                  simpleIdentifier
                    Identifier("f")
                unarySuffix
                  callSuffix
                    valueArguments
                      LPAREN("(")
                      valueArgument
                        expression
                          simpleIdentifier
                            Identifier("n")
                      RPAREN(")")
              RPAREN(")")
              controlStructureBody
                statement
                  expression
                    simpleIdentifier
                      Identifier("n")
              ELSE("else")
              controlStructureBody
                statement
                  expression
                    literalConstant
                      NullLiteral("null")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("base")
                      COLON(":")
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Base")
                    ASSIGNMENT("=")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("Derived")
                      unarySuffix
                        callSuffix
                          valueArguments
                            LPAREN("(")
                            RPAREN(")")
              semis
                NL("\n")
              statement
                expression
                  ifExpression
                    IF("if")
                    LPAREN("(")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("base")
                      isOperator
                        IS("is")
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Derived")
                    RPAREN(")")
                    controlStructureBody
                      block
                        LCURL("{")
                        NL("\n")
                        statements
                          statement
                            declaration
                              functionDeclaration
                                FUN("fun")
                                simpleIdentifier
                                  Identifier("can")
                                functionValueParameters
                                  LPAREN("(")
                                  functionValueParameter
                                    parameter
                                      simpleIdentifier
                                        Identifier("n")
                                      COLON(":")
                                      type
                                        typeReference
                                          userType
                                            simpleUserType
                                              simpleIdentifier
                                                Identifier("Int")
                                  RPAREN(")")
                                functionBody
                                  ASSIGNMENT("=")
                                  expression
                                    expression
                                      simpleIdentifier
                                        Identifier("n")
                                    comparisonOperator
                                      RANGLE(">")
                                    expression
                                      literalConstant
                                        IntegerLiteral("0")
                          semis
                            NL("\n")
                          statement
                            expression
                              expression
                                simpleIdentifier
                                  Identifier("trans")
                              unarySuffix
                                callSuffix
                                  valueArguments
                                    LPAREN("(")
                                    valueArgument
                                      expression
                                        literalConstant
                                          IntegerLiteral("42")
                                    COMMA(",")
                                    valueArgument
                                      expression
                                        callableReference
                                          COLONCOLON("::")
                                          simpleIdentifier
                                            Identifier("can")
                                    RPAREN(")")
                          semis
                            NL("\n")
                          statement
                            expression
                              expression
                                simpleIdentifier
                                  Identifier("bar")
                              unarySuffix
                                callSuffix
                                  valueArguments
                                    LPAREN("(")
                                    valueArgument
                                      expression
                                        simpleIdentifier
                                          Identifier("base")
                                    RPAREN(")")
                          semis
                            NL("\n")
                        RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
