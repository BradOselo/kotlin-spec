File: lambdaArgumentWithBoundWithoutType.kt - 6e4e954f7d9b841b1625800250a09f78
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("Foo")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("Bar")
        COLON(":")
        delegationSpecifiers
          annotatedDelegationSpecifier
            delegationSpecifier
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Foo")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          nullableType
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Foo")
            quest
              QUEST_WS("? ")
        functionBody
          ASSIGNMENT("=")
          expression
            literalConstant
              NullLiteral("null")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("bar")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          nullableType
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Bar")
            quest
              QUEST_WS("? ")
        functionBody
          ASSIGNMENT("=")
          expression
            literalConstant
              NullLiteral("null")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
            COLON(":")
            type
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Bar")
          RANGLE(">")
        simpleIdentifier
          Identifier("run")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("f")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("T")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("T")
        functionBody
          ASSIGNMENT("=")
          expression
            expression
              simpleIdentifier
                Identifier("f")
            unarySuffix
              callSuffix
                valueArguments
                  LPAREN("(")
                  RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("foo")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Foo")
        ASSIGNMENT("=")
        expression
          expression
            simpleIdentifier
              Identifier("run")
          unarySuffix
            callSuffix
              annotatedLambda
                lambdaLiteral
                  LCURL("{")
                  NL("\n")
                  statements
                    statement
                      declaration
                        propertyDeclaration
                          VAL("val")
                          variableDeclaration
                            simpleIdentifier
                              Identifier("x")
                          ASSIGNMENT("=")
                          expression
                            expression
                              simpleIdentifier
                                Identifier("bar")
                            unarySuffix
                              callSuffix
                                valueArguments
                                  LPAREN("(")
                                  RPAREN(")")
                    semis
                      NL("\n")
                    statement
                      expression
                        ifExpression
                          IF("if")
                          LPAREN("(")
                          expression
                            expression
                              simpleIdentifier
                                Identifier("x")
                            equalityOperator
                              EQEQ("==")
                            expression
                              literalConstant
                                NullLiteral("null")
                          RPAREN(")")
                          controlStructureBody
                            statement
                              expression
                                jumpExpression
                                  THROW("throw")
                                  expression
                                    expression
                                      simpleIdentifier
                                        Identifier("Exception")
                                    unarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          RPAREN(")")
                    semis
                      NL("\n")
                    statement
                      expression
                        simpleIdentifier
                          Identifier("x")
                    semis
                      NL("\n")
                  RCURL("}")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("foofoo")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Foo")
        ASSIGNMENT("=")
        expression
          expression
            simpleIdentifier
              Identifier("run")
          unarySuffix
            callSuffix
              annotatedLambda
                lambdaLiteral
                  LCURL("{")
                  NL("\n")
                  statements
                    statement
                      declaration
                        propertyDeclaration
                          VAL("val")
                          variableDeclaration
                            simpleIdentifier
                              Identifier("x")
                          ASSIGNMENT("=")
                          expression
                            expression
                              simpleIdentifier
                                Identifier("foo")
                            unarySuffix
                              callSuffix
                                valueArguments
                                  LPAREN("(")
                                  RPAREN(")")
                    semis
                      NL("\n")
                    statement
                      expression
                        ifExpression
                          IF("if")
                          LPAREN("(")
                          expression
                            expression
                              simpleIdentifier
                                Identifier("x")
                            equalityOperator
                              EQEQ("==")
                            expression
                              literalConstant
                                NullLiteral("null")
                          RPAREN(")")
                          controlStructureBody
                            statement
                              expression
                                jumpExpression
                                  THROW("throw")
                                  expression
                                    expression
                                      simpleIdentifier
                                        Identifier("Exception")
                                    unarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          RPAREN(")")
                    semis
                      NL("\n")
                    statement
                      expression
                        simpleIdentifier
                          Identifier("x")
                    semis
                      NL("\n")
                  RCURL("}")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("bar")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Bar")
        ASSIGNMENT("=")
        expression
          expression
            simpleIdentifier
              Identifier("run")
          unarySuffix
            callSuffix
              annotatedLambda
                lambdaLiteral
                  LCURL("{")
                  NL("\n")
                  statements
                    statement
                      declaration
                        propertyDeclaration
                          VAL("val")
                          variableDeclaration
                            simpleIdentifier
                              Identifier("x")
                          ASSIGNMENT("=")
                          expression
                            expression
                              simpleIdentifier
                                Identifier("foo")
                            unarySuffix
                              callSuffix
                                valueArguments
                                  LPAREN("(")
                                  RPAREN(")")
                    semis
                      NL("\n")
                    statement
                      expression
                        ifExpression
                          IF("if")
                          LPAREN("(")
                          expression
                            expression
                              simpleIdentifier
                                Identifier("x")
                            equalityOperator
                              EQEQ("==")
                            expression
                              literalConstant
                                NullLiteral("null")
                          RPAREN(")")
                          controlStructureBody
                            statement
                              expression
                                jumpExpression
                                  THROW("throw")
                                  expression
                                    expression
                                      simpleIdentifier
                                        Identifier("Exception")
                                    unarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          RPAREN(")")
                    semis
                      NL("\n")
                    statement
                      expression
                        simpleIdentifier
                          Identifier("x")
                    semis
                      NL("\n")
                  RCURL("}")
        NL("\n")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
