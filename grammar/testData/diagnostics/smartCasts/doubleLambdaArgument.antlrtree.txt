File: doubleLambdaArgument.kt - 1b62b0beec9febb0e475570a801b7a6c
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("Foo")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          nullableType
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Foo")
            quest
              QUEST_WS("? ")
        functionBody
          ASSIGNMENT("=")
          expression
            literalConstant
              NullLiteral("null")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("foo")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Foo")
        ASSIGNMENT("=")
        expression
          expression
            simpleIdentifier
              Identifier("run")
          unarySuffix
            callSuffix
              annotatedLambda
                lambdaLiteral
                  LCURL("{")
                  NL("\n")
                  statements
                    statement
                      expression
                        expression
                          simpleIdentifier
                            Identifier("run")
                        unarySuffix
                          callSuffix
                            annotatedLambda
                              lambdaLiteral
                                LCURL("{")
                                NL("\n")
                                statements
                                  statement
                                    declaration
                                      propertyDeclaration
                                        VAL("val")
                                        variableDeclaration
                                          simpleIdentifier
                                            Identifier("x")
                                        ASSIGNMENT("=")
                                        expression
                                          expression
                                            simpleIdentifier
                                              Identifier("foo")
                                          unarySuffix
                                            callSuffix
                                              valueArguments
                                                LPAREN("(")
                                                RPAREN(")")
                                  semis
                                    NL("\n")
                                  statement
                                    expression
                                      ifExpression
                                        IF("if")
                                        LPAREN("(")
                                        expression
                                          expression
                                            simpleIdentifier
                                              Identifier("x")
                                          equalityOperator
                                            EQEQ("==")
                                          expression
                                            literalConstant
                                              NullLiteral("null")
                                        RPAREN(")")
                                        controlStructureBody
                                          statement
                                            expression
                                              jumpExpression
                                                THROW("throw")
                                                expression
                                                  expression
                                                    simpleIdentifier
                                                      Identifier("Exception")
                                                  unarySuffix
                                                    callSuffix
                                                      valueArguments
                                                        LPAREN("(")
                                                        RPAREN(")")
                                  semis
                                    NL("\n")
                                  statement
                                    expression
                                      simpleIdentifier
                                        Identifier("x")
                                  semis
                                    NL("\n")
                                RCURL("}")
                    semis
                      NL("\n")
                  RCURL("}")
        NL("\n")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
