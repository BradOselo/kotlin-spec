File: lambdaBetweenArguments.kt - 63d4dcb8b4c6b2c493e95fecb6ff94cc
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("f")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Unit")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("y")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("bar")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAR("var")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("x")
                      COLON(":")
                      type
                        nullableType
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Int")
                          quest
                            QUEST_NO_WS("?")
              semis
                NL("\n")
              statement
                assignment
                  directlyAssignableExpression
                    simpleIdentifier
                      Identifier("x")
                  ASSIGNMENT("=")
                  expression
                    literalConstant
                      IntegerLiteral("4")
              semis
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("foo")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        valueArgument
                          expression
                            simpleIdentifier
                              Identifier("x")
                        COMMA(",")
                        valueArgument
                          expression
                            functionLiteral
                              lambdaLiteral
                                LCURL("{")
                                statements
                                  statement
                                    assignment
                                      directlyAssignableExpression
                                        simpleIdentifier
                                          Identifier("x")
                                      ASSIGNMENT("=")
                                      expression
                                        literalConstant
                                          NullLiteral("null")
                                  semis
                                    SEMICOLON(";")
                                  statement
                                    expression
                                      expression
                                        simpleIdentifier
                                          Identifier("x")
                                      unarySuffix
                                        navigationSuffix
                                          memberAccessOperator
                                            DOT(".")
                                          simpleIdentifier
                                            Identifier("hashCode")
                                      unarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            RPAREN(")")
                                RCURL("}")
                        COMMA(",")
                        valueArgument
                          expression
                            simpleIdentifier
                              Identifier("x")
                        RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
