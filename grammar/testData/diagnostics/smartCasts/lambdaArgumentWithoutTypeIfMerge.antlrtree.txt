File: lambdaArgumentWithoutTypeIfMerge.kt - 4929fd341c3671a8d6ac4f614e124a43
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("R")
          RANGLE(">")
        simpleIdentifier
          Identifier("synchronized")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("lock")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Any")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("block")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("R")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("R")
        functionBody
          ASSIGNMENT("=")
          expression
            expression
              simpleIdentifier
                Identifier("block")
            unarySuffix
              callSuffix
                valueArguments
                  LPAREN("(")
                  RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("My")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAL("val")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("test")
                    COLON(":")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("String")
                  NL("\n")
                  getter
                    GET("get")
                    LPAREN("(")
                    RPAREN(")")
                    functionBody
                      ASSIGNMENT("=")
                      expression
                        expression
                          simpleIdentifier
                            Identifier("synchronized")
                        unarySuffix
                          callSuffix
                            valueArguments
                              LPAREN("(")
                              valueArgument
                                expression
                                  simpleIdentifier
                                    Identifier("this")
                              RPAREN(")")
                            annotatedLambda
                              lambdaLiteral
                                LCURL("{")
                                NL("\n")
                                statements
                                  statement
                                    declaration
                                      propertyDeclaration
                                        VAR("var")
                                        variableDeclaration
                                          simpleIdentifier
                                            Identifier("x")
                                          COLON(":")
                                          type
                                            nullableType
                                              typeReference
                                                userType
                                                  simpleUserType
                                                    simpleIdentifier
                                                      Identifier("String")
                                              quest
                                                QUEST_WS("? ")
                                        ASSIGNMENT("=")
                                        expression
                                          stringLiteral
                                            lineStringLiteral
                                              QUOTE_OPEN(""")
                                              QUOTE_CLOSE(""")
                                  semis
                                    NL("\n")
                                  statement
                                    expression
                                      ifExpression
                                        IF("if")
                                        LPAREN("(")
                                        expression
                                          expression
                                            simpleIdentifier
                                              Identifier("x")
                                          equalityOperator
                                            EQEQ("==")
                                          expression
                                            literalConstant
                                              NullLiteral("null")
                                        RPAREN(")")
                                        controlStructureBody
                                          block
                                            LCURL("{")
                                            NL("\n")
                                            statements
                                              statement
                                                assignment
                                                  directlyAssignableExpression
                                                    simpleIdentifier
                                                      Identifier("x")
                                                  ASSIGNMENT("=")
                                                  expression
                                                    stringLiteral
                                                      lineStringLiteral
                                                        QUOTE_OPEN(""")
                                                        lineStringContent
                                                          LineStrText("s")
                                                        QUOTE_CLOSE(""")
                                              semis
                                                NL("\n")
                                            RCURL("}")
                                  semis
                                    NL("\n")
                                  statement
                                    expression
                                      simpleIdentifier
                                        Identifier("x")
                                  semis
                                    NL("\n")
                                RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
