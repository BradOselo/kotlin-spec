File: nullableReceiverWithFlexible.kt - 6a01661aeb0e480a5d0e600349d4a6a2
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            visibilityModifier
              PUBLIC("public")
        CLASS("class")
        simpleIdentifier
          Identifier("Foo")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("String")
      Identifier("bar")
    semis
      SEMICOLON(";")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PRIVATE("private")
      Identifier("Foo")
      LPAREN("(")
      Identifier("String")
      Identifier("bar")
      RPAREN(")")
      LCURL("{")
    semis
      NL("\n")
  THIS("this")
  DOT(".")
  Identifier("bar")
  ASSIGNMENT("=")
  Identifier("bar")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("static")
      Identifier("Foo")
      Identifier("create")
      LPAREN("(")
      Identifier("String")
      Identifier("bar")
      RPAREN(")")
      LCURL("{")
    semis
      NL("\n")
  RETURN("return")
  Identifier("new")
  Identifier("Foo")
  LPAREN("(")
  Identifier("bar")
  RPAREN(")")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("foo")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("Foo")
                                    postfixUnarySuffix
                                      navigationSuffix
                                        memberAccessOperator
                                          DOT(".")
                                        simpleIdentifier
                                          Identifier("create")
                                    postfixUnarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          valueArgument
                                            expression
                                              disjunction
                                                conjunction
                                                  equality
                                                    comparison
                                                      infixOperation
                                                        elvisExpression
                                                          infixFunctionCall
                                                            rangeExpression
                                                              additiveExpression
                                                                multiplicativeExpression
                                                                  asExpression
                                                                    prefixUnaryExpression
                                                                      postfixUnaryExpression
                                                                        primaryExpression
                                                                          literalConstant
                                                                            NullLiteral("null")
                                          RPAREN(")")
        NL("\n")
        Identifier("foo")
        QUEST_NO_WS("?")
        DOT(".")
        Identifier("bar")
        DOT(".")
        Identifier("let")
        LCURL("{")
    semis
      NL("\n")
      NL("\n")
  Identifier("it")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNSAFE_CALL")
  EXCL_NO_WS("!")
  RANGLE(">")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("length")
  NL("\n")
  NL("\n")
  Identifier("foo")
  DOT(".")
  Identifier("bar")
  DOT(".")
  Identifier("length")
  NL("\n")
  NL("\n")
  Identifier("foo")
  QUEST_NO_WS("?")
  DOT(".")
  Identifier("bar")
  QUEST_NO_WS("?")
  DOT(".")
  Identifier("length")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  EOF("<EOF>")
