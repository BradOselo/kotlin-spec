File: kt16016.kt - cb053f0f329a490b3f3fc266f568eaef
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("la")
        ASSIGNMENT("=")
        expression
          functionLiteral
            lambdaLiteral
              LCURL("{")
              lambdaParameters
                lambdaParameter
                  variableDeclaration
                    simpleIdentifier
                      Identifier("a")
              ARROW("->")
              statements
              RCURL("}")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("las")
        ASSIGNMENT("=")
        expression
          functionLiteral
            lambdaLiteral
              LCURL("{")
              lambdaParameters
                lambdaParameter
                  variableDeclaration
                    simpleIdentifier
                      Identifier("a")
                    COLON(":")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Int")
              ARROW("->")
              statements
              RCURL("}")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("larg")
        ASSIGNMENT("=")
        expression
          expression
            functionLiteral
              lambdaLiteral
                LCURL("{")
                lambdaParameters
                  lambdaParameter
                    variableDeclaration
                      simpleIdentifier
                        Identifier("a")
                ARROW("->")
                statements
                RCURL("}")
          unarySuffix
            callSuffix
              valueArguments
                LPAREN("(")
                valueArgument
                  expression
                    literalConstant
                      IntegerLiteral("123")
                RPAREN(")")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("twoarg")
        ASSIGNMENT("=")
        expression
          expression
            functionLiteral
              lambdaLiteral
                LCURL("{")
                lambdaParameters
                  lambdaParameter
                    variableDeclaration
                      simpleIdentifier
                        Identifier("a")
                  COMMA(",")
                  lambdaParameter
                    variableDeclaration
                      simpleIdentifier
                        Identifier("b")
                      COLON(":")
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("String")
                  COMMA(",")
                  lambdaParameter
                    variableDeclaration
                      simpleIdentifier
                        Identifier("c")
                ARROW("->")
                statements
                RCURL("}")
          unarySuffix
            callSuffix
              valueArguments
                LPAREN("(")
                valueArgument
                  expression
                    literalConstant
                      IntegerLiteral("123")
                COMMA(",")
                valueArgument
                  expression
                    stringLiteral
                      lineStringLiteral
                        QUOTE_OPEN(""")
                        lineStringContent
                          LineStrText("asdf")
                        QUOTE_CLOSE(""")
                COMMA(",")
                valueArgument
                  expression
                    literalConstant
                      IntegerLiteral("123")
                RPAREN(")")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
