File: LocalReturnWithExpectedType.kt - 23b8eea53ab7167c4dbf736b6680db70
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("listOf")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("List")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                  RANGLE(">")
        functionBody
          ASSIGNMENT("=")
          expression
            expression
              literalConstant
                NullLiteral("null")
            unarySuffix
              postfixUnaryOperator
                EXCL_NO_WS("!")
                excl
                  EXCL_NO_WS("!")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("listOf")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameterModifiers
              parameterModifier
                VARARG("vararg")
            parameter
              simpleIdentifier
                Identifier("values")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("T")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("List")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                  RANGLE(">")
        functionBody
          ASSIGNMENT("=")
          expression
            expression
              literalConstant
                NullLiteral("null")
            unarySuffix
              postfixUnaryOperator
                EXCL_NO_WS("!")
                excl
                  EXCL_NO_WS("!")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("flag")
        ASSIGNMENT("=")
        expression
          literalConstant
            BooleanLiteral("true")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("a")
          COLON(":")
          type
            functionType
              functionTypeParameters
                LPAREN("(")
                RPAREN(")")
              ARROW("->")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("List")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Int")
                        RANGLE(">")
        ASSIGNMENT("=")
        expression
          unaryPrefix
            label
              simpleIdentifier
                Identifier("l")
              AT_POST_WS("@ ")
          expression
            functionLiteral
              lambdaLiteral
                LCURL("{")
                NL("\n")
                statements
                  statement
                    expression
                      ifExpression
                        IF("if")
                        LPAREN("(")
                        expression
                          simpleIdentifier
                            Identifier("flag")
                        RPAREN(")")
                        controlStructureBody
                          statement
                            expression
                              jumpExpression
                                RETURN_AT("return@l")
                                expression
                                  expression
                                    simpleIdentifier
                                      Identifier("listOf")
                                  unarySuffix
                                    callSuffix
                                      valueArguments
                                        LPAREN("(")
                                        RPAREN(")")
                  semis
                    NL("\n")
                  statement
                    expression
                      expression
                        simpleIdentifier
                          Identifier("listOf")
                      unarySuffix
                        callSuffix
                          valueArguments
                            LPAREN("(")
                            valueArgument
                              expression
                                literalConstant
                                  IntegerLiteral("5")
                            RPAREN(")")
                  semis
                    NL("\n")
                RCURL("}")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
