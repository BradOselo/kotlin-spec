File: LambdaWithParameter.kt - 33f040d0c5cfacd25730b139fab98ce6
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("flag")
        ASSIGNMENT("=")
        expression
          literalConstant
            BooleanLiteral("true")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("a")
        ASSIGNMENT("=")
        expression
          unaryPrefix
            label
              simpleIdentifier
                Identifier("l")
              AT_POST_WS("@ ")
          expression
            functionLiteral
              lambdaLiteral
                LCURL("{")
                NL("\n")
                lambdaParameters
                  lambdaParameter
                    variableDeclaration
                      simpleIdentifier
                        Identifier("i")
                      COLON(":")
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Int")
                ARROW("->")
                NL("\n")
                statements
                  statement
                    expression
                      ifExpression
                        IF("if")
                        LPAREN("(")
                        expression
                          expression
                            simpleIdentifier
                              Identifier("i")
                          equalityOperator
                            EQEQ("==")
                          expression
                            literalConstant
                              IntegerLiteral("0")
                        RPAREN(")")
                        controlStructureBody
                          statement
                            expression
                              jumpExpression
                                RETURN_AT("return@l")
                                expression
                                  expression
                                    simpleIdentifier
                                      Identifier("i")
                                  unarySuffix
                                    navigationSuffix
                                      memberAccessOperator
                                        DOT(".")
                                      simpleIdentifier
                                        Identifier("toString")
                                  unarySuffix
                                    callSuffix
                                      valueArguments
                                        LPAREN("(")
                                        RPAREN(")")
                  semis
                    NL("\n")
                    NL("\n")
                  statement
                    expression
                      stringLiteral
                        lineStringLiteral
                          QUOTE_OPEN(""")
                          lineStringContent
                            LineStrText("Ok")
                          QUOTE_CLOSE(""")
                  semis
                    NL("\n")
                RCURL("}")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("f")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Int")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("T")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("T")
        functionBody
          ASSIGNMENT("=")
          expression
            expression
              simpleIdentifier
                Identifier("f")
            unarySuffix
              callSuffix
                valueArguments
                  LPAREN("(")
                  valueArgument
                    expression
                      literalConstant
                        IntegerLiteral("0")
                  RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("b")
        ASSIGNMENT("=")
        expression
          expression
            simpleIdentifier
              Identifier("foo")
          unarySuffix
            callSuffix
              annotatedLambda
                lambdaLiteral
                  LCURL("{")
                  NL("\n")
                  lambdaParameters
                    lambdaParameter
                      variableDeclaration
                        simpleIdentifier
                          Identifier("i")
                  ARROW("->")
                  NL("\n")
                  statements
                    statement
                      expression
                        ifExpression
                          IF("if")
                          LPAREN("(")
                          expression
                            expression
                              simpleIdentifier
                                Identifier("i")
                            equalityOperator
                              EQEQ("==")
                            expression
                              literalConstant
                                IntegerLiteral("0")
                          RPAREN(")")
                          controlStructureBody
                            statement
                              expression
                                jumpExpression
                                  RETURN_AT("return@foo")
                                  expression
                                    expression
                                      simpleIdentifier
                                        Identifier("i")
                                    unarySuffix
                                      navigationSuffix
                                        memberAccessOperator
                                          DOT(".")
                                        simpleIdentifier
                                          Identifier("toString")
                                    unarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          RPAREN(")")
                    semis
                      NL("\n")
                      NL("\n")
                    statement
                      expression
                        stringLiteral
                          lineStringLiteral
                            QUOTE_OPEN(""")
                            lineStringContent
                              LineStrText("Ok")
                            QUOTE_CLOSE(""")
                    semis
                      NL("\n")
                  RCURL("}")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
