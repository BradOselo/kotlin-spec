File: testNestedSpecialCalls.kt - 1d95acdcde8f59ac56aa848a329b88e1
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("x")
                      COLON(":")
                      type
                        nullableType
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Int")
                          quest
                            QUEST_WS("? ")
                    ASSIGNMENT("=")
                    expression
                      literalConstant
                        IntegerLiteral("20")
              semis
                NL("\n")
              statement
                expression
                  ifExpression
                    IF("if")
                    LPAREN("(")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("x")
                      equalityOperator
                        EXCL_EQ("!=")
                      expression
                        literalConstant
                          NullLiteral("null")
                    RPAREN(")")
                    controlStructureBody
                      block
                        LCURL("{")
                        NL("\n")
                        statements
                        RCURL("}")
                    ELSE("else")
                    controlStructureBody
                      block
                        LCURL("{")
                        NL("\n")
                        statements
                          statement
                            expression
                              ifExpression
                                IF("if")
                                LPAREN("(")
                                expression
                                  literalConstant
                                    BooleanLiteral("true")
                                RPAREN(")")
                                controlStructureBody
                                  statement
                                    expression
                                      jumpExpression
                                        RETURN("return")
                                ELSE("else")
                                controlStructureBody
                                  statement
                                    expression
                                      jumpExpression
                                        RETURN("return")
                          semis
                            NL("\n")
                        RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("x")
                  unarySuffix
                    navigationSuffix
                      memberAccessOperator
                        DOT(".")
                      simpleIdentifier
                        Identifier("and")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        valueArgument
                          expression
                            literalConstant
                              IntegerLiteral("1")
                        RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
