File: ReturnTypeCheck.kt - adc6b9afdae3fe6173021df65b8a0816
  packageHeader
  importList
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("foo")
        ASSIGNMENT("=")
        expression
          functionLiteral
            anonymousFunction
              FUN("fun")
              parametersWithOptionalType
                LPAREN("(")
                parameterWithOptionalType
                  simpleIdentifier
                    Identifier("a")
                  COLON(":")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Int")
                RPAREN(")")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("String")
              functionBody
                block
                  LCURL("{")
                  NL("\n")
                  statements
                    statement
                      expression
                        ifExpression
                          IF("if")
                          LPAREN("(")
                          expression
                            expression
                              simpleIdentifier
                                Identifier("a")
                            equalityOperator
                              EQEQ("==")
                            expression
                              literalConstant
                                IntegerLiteral("1")
                          RPAREN(")")
                          controlStructureBody
                            statement
                              expression
                                jumpExpression
                                  RETURN("return")
                                  expression
                                    stringLiteral
                                      lineStringLiteral
                                        QUOTE_OPEN(""")
                                        lineStringContent
                                          LineStrText("4")
                                        QUOTE_CLOSE(""")
                    semis
                      NL("\n")
                    statement
                      expression
                        whenExpression
                          WHEN("when")
                          whenSubject
                            LPAREN("(")
                            expression
                              simpleIdentifier
                                Identifier("a")
                            RPAREN(")")
                          LCURL("{")
                          NL("\n")
                          whenEntry
                            whenCondition
                              expression
                                literalConstant
                                  IntegerLiteral("5")
                            ARROW("->")
                            controlStructureBody
                              statement
                                expression
                                  jumpExpression
                                    RETURN("return")
                                    expression
                                      stringLiteral
                                        lineStringLiteral
                                          QUOTE_OPEN(""")
                                          lineStringContent
                                            LineStrText("2")
                                          QUOTE_CLOSE(""")
                            semi
                              NL("\n")
                          whenEntry
                            whenCondition
                              expression
                                literalConstant
                                  IntegerLiteral("3")
                            ARROW("->")
                            controlStructureBody
                              statement
                                expression
                                  jumpExpression
                                    RETURN("return")
                                    expression
                                      literalConstant
                                        NullLiteral("null")
                            semi
                              NL("\n")
                          whenEntry
                            whenCondition
                              expression
                                literalConstant
                                  IntegerLiteral("2")
                            ARROW("->")
                            controlStructureBody
                              statement
                                expression
                                  jumpExpression
                                    RETURN("return")
                                    expression
                                      literalConstant
                                        IntegerLiteral("2")
                            semi
                              NL("\n")
                          RCURL("}")
                    semis
                      NL("\n")
                    statement
                      expression
                        jumpExpression
                          RETURN("return")
                          expression
                            stringLiteral
                              lineStringLiteral
                                QUOTE_OPEN(""")
                                QUOTE_CLOSE(""")
                    semis
                      NL("\n")
                  RCURL("}")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
