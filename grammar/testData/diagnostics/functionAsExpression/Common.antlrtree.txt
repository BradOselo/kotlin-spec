File: Common.kt - d4c53f10ca81ceb428f05dd71c6bd139
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            classModifier
              ANNOTATION("annotation")
        CLASS("class")
        simpleIdentifier
          Identifier("ann")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("name")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("String")
            RPAREN(")")
    semis
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            propertyModifier
              CONST("const")
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("ok")
        ASSIGNMENT("=")
        expression
          stringLiteral
            lineStringLiteral
              QUOTE_OPEN(""")
              lineStringContent
                LineStrText("OK")
              QUOTE_CLOSE(""")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("A")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("withoutName")
        ASSIGNMENT("=")
        expression
          functionLiteral
            anonymousFunction
              FUN("fun")
              parametersWithOptionalType
                LPAREN("(")
                RPAREN(")")
              functionBody
                block
                  LCURL("{")
                  statements
                  RCURL("}")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("extensionWithoutName")
        ASSIGNMENT("=")
        expression
          functionLiteral
            anonymousFunction
              FUN("fun")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("A")
              DOT(".")
              parametersWithOptionalType
                LPAREN("(")
                RPAREN(")")
              functionBody
                block
                  LCURL("{")
                  statements
                  RCURL("}")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("withAnnotation")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            unaryPrefix
              annotation
                singleAnnotation
                  AT_PRE_WS(" @")
                  unescapedAnnotation
                    constructorInvocation
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("ann")
                      valueArguments
                        LPAREN("(")
                        valueArgument
                          expression
                            simpleIdentifier
                              Identifier("ok")
                        RPAREN(")")
            expression
              functionLiteral
                anonymousFunction
                  FUN("fun")
                  parametersWithOptionalType
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      statements
                      RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("withReturn")
        ASSIGNMENT("=")
        expression
          functionLiteral
            anonymousFunction
              FUN("fun")
              parametersWithOptionalType
                LPAREN("(")
                RPAREN(")")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
              functionBody
                block
                  LCURL("{")
                  statements
                    statement
                      expression
                        jumpExpression
                          RETURN("return")
                          expression
                            literalConstant
                              IntegerLiteral("5")
                  RCURL("}")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("withExpression")
        ASSIGNMENT("=")
        expression
          functionLiteral
            anonymousFunction
              FUN("fun")
              parametersWithOptionalType
                LPAREN("(")
                RPAREN(")")
              functionBody
                ASSIGNMENT("=")
                expression
                  literalConstant
                    IntegerLiteral("5")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("funfun")
        ASSIGNMENT("=")
        expression
          functionLiteral
            anonymousFunction
              FUN("fun")
              parametersWithOptionalType
                LPAREN("(")
                RPAREN(")")
              functionBody
                ASSIGNMENT("=")
                expression
                  functionLiteral
                    anonymousFunction
                      FUN("fun")
                      parametersWithOptionalType
                        LPAREN("(")
                        RPAREN(")")
                      functionBody
                        ASSIGNMENT("=")
                        expression
                          literalConstant
                            IntegerLiteral("5")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("parentesized")
        ASSIGNMENT("=")
        expression
          parenthesizedExpression
            LPAREN("(")
            expression
              functionLiteral
                anonymousFunction
                  FUN("fun")
                  parametersWithOptionalType
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      statements
                      RCURL("}")
            RPAREN(")")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("parentesizedWithType")
        ASSIGNMENT("=")
        expression
          expression
            simpleIdentifier
              Identifier("checkSubtype")
          unarySuffix
            typeArguments
              LANGLE("<")
              typeProjection
                type
                  functionType
                    functionTypeParameters
                      LPAREN("(")
                      RPAREN(")")
                    ARROW("->")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Unit")
              RANGLE(">")
          unarySuffix
            callSuffix
              valueArguments
                LPAREN("(")
                valueArgument
                  expression
                    parenthesizedExpression
                      LPAREN("(")
                      expression
                        functionLiteral
                          anonymousFunction
                            FUN("fun")
                            parametersWithOptionalType
                              LPAREN("(")
                              RPAREN(")")
                            functionBody
                              block
                                LCURL("{")
                                statements
                                RCURL("}")
                      RPAREN(")")
                RPAREN(")")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("withType")
        ASSIGNMENT("=")
        expression
          expression
            simpleIdentifier
              Identifier("checkSubtype")
          unarySuffix
            typeArguments
              LANGLE("<")
              typeProjection
                type
                  functionType
                    functionTypeParameters
                      LPAREN("(")
                      RPAREN(")")
                    ARROW("->")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Unit")
              RANGLE(">")
          unarySuffix
            callSuffix
              valueArguments
                LPAREN("(")
                valueArgument
                  expression
                    parenthesizedExpression
                      LPAREN("(")
                      expression
                        functionLiteral
                          anonymousFunction
                            FUN("fun")
                            parametersWithOptionalType
                              LPAREN("(")
                              RPAREN(")")
                            functionBody
                              block
                                LCURL("{")
                                statements
                                RCURL("}")
                      RPAREN(")")
                RPAREN(")")
        NL("\n")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
