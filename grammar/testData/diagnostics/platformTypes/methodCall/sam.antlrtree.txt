File: sam.kt - 5b9d36d608649f83668ee3dc2762878a
  NL("\n")
  NL("\n")
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("p")
    semi
      SEMICOLON(";")
      NL("\n")
      NL("\n")
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            visibilityModifier
              PUBLIC("public")
        INTERFACE("interface")
        simpleIdentifier
          Identifier("SAM")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("R")
          RANGLE(">")
  LCURL("{")
  NL("\n")
  Identifier("R")
  Identifier("foo")
  LPAREN("(")
  RPAREN(")")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  PACKAGE("package")
  Identifier("p")
  SEMICOLON(";")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            visibilityModifier
              PUBLIC("public")
        CLASS("class")
        simpleIdentifier
          Identifier("Util")
  LCURL("{")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("static")
      Identifier("void")
      Identifier("sam")
      LPAREN("(")
      Identifier("SAM")
      LANGLE("<")
      Identifier("Void")
      RANGLE(">")
      Identifier("sam")
      RPAREN(")")
      LCURL("{")
      RCURL("}")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  IMPORT("import")
  Identifier("p")
  DOT(".")
  MULT("*")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              simpleIdentifier
                                                Identifier("Util")
                                            postfixUnarySuffix
                                              navigationSuffix
                                                memberAccessOperator
                                                  DOT(".")
                                                simpleIdentifier
                                                  Identifier("sam")
                                            postfixUnarySuffix
                                              callSuffix
                                                annotatedLambda
                                                  lambdaLiteral
                                                    LCURL("{")
                                                    NL("\n")
                                                    statements
                                                      statement
                                                        expression
                                                          disjunction
                                                            conjunction
                                                              equality
                                                                comparison
                                                                  infixOperation
                                                                    elvisExpression
                                                                      infixFunctionCall
                                                                        rangeExpression
                                                                          additiveExpression
                                                                            multiplicativeExpression
                                                                              asExpression
                                                                                prefixUnaryExpression
                                                                                  postfixUnaryExpression
                                                                                    primaryExpression
                                                                                      literalConstant
                                                                                        NullLiteral("null")
                                                      semis
                                                        NL("\n")
                                                    RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
