File: arrays.kt - 347084419f52611bc55f4fb760f4cb5c
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
    importHeader
      IMPORT("import")
      identifier
        simpleIdentifier
          Identifier("java")
        DOT(".")
        simpleIdentifier
          Identifier("util")
      DOT(".")
      MULT("*")
      semi
        SEMICOLON(";")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            visibilityModifier
              PUBLIC("public")
        CLASS("class")
        simpleIdentifier
          Identifier("A")
  LANGLE("<")
  Identifier("T")
  Identifier("extends")
  Identifier("CharSequence")
  COMMA(",")
  Identifier("E")
  RANGLE(">")
  LCURL("{")
  NL("\n")
  Identifier("T")
  LSQUARE("[")
  RSQUARE("]")
  Identifier("charSequences")
  SEMICOLON(";")
  NL("\n")
  Identifier("Map")
  LANGLE("<")
  Identifier("String")
  COMMA(",")
  Identifier("T")
  RANGLE(">")
  LSQUARE("[")
  RSQUARE("]")
  Identifier("maps")
  SEMICOLON(";")
  NL("\n")
  Identifier("List")
  LANGLE("<")
  Identifier("Double")
  RANGLE(">")
  LSQUARE("[")
  RSQUARE("]")
  LSQUARE("[")
  RSQUARE("]")
  Identifier("arraysOfLists")
  SEMICOLON(";")
  NL("\n")
  Identifier("E")
  LSQUARE("[")
  RSQUARE("]")
  LSQUARE("[")
  RSQUARE("]")
  Identifier("arraysOfAny")
  SEMICOLON(";")
  NL("\n")
  NL("\n")
  Identifier("List")
  LANGLE("<")
  Identifier("Double")
  LSQUARE("[")
  RSQUARE("]")
  RANGLE(">")
  LSQUARE("[")
  RSQUARE("]")
  Identifier("erasedLists")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Test")
  LCURL("{")
  NL("\n")
  Identifier("static")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("RawADerived")
  Identifier("extends")
  Identifier("A")
  LCURL("{")
  RCURL("}")
  NL("\n")
  Identifier("static")
  Identifier("A")
  Identifier("rawAField")
  ASSIGNMENT("=")
  NullLiteral("null")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("arrayOf")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Array")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                  RANGLE(">")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          NullLiteral("null")
                                      postfixUnarySuffix
                                        postfixUnaryOperator
                                          EXCL_NO_WS("!")
                                          excl
                                            EXCL_NO_WS("!")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("main")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("raw")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
        Identifier("Test")
        DOT(".")
        Identifier("rawAField")
    semis
      NL("\n")
      NL("\n")
  Identifier("raw")
  DOT(".")
  Identifier("charSequences")
  ASSIGNMENT("=")
  Identifier("arrayOf")
  LANGLE("<")
  Identifier("String")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  Identifier("raw")
  DOT(".")
  Identifier("charSequences")
  ASSIGNMENT("=")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NI")
  SEMICOLON(";")
  Identifier("TYPE_MISMATCH")
  COMMA(",")
  Identifier("TYPE_MISMATCH")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("arrayOf")
  LANGLE("<")
  Identifier("Double")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  NL("\n")
  Identifier("raw")
  DOT(".")
  Identifier("maps")
  ASSIGNMENT("=")
  Identifier("arrayOf")
  LANGLE("<")
  Identifier("Map")
  LANGLE("<")
  Identifier("Int")
  COMMA(",")
  Identifier("Int")
  RANGLE(">")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  Identifier("raw")
  DOT(".")
  Identifier("maps")
  ASSIGNMENT("=")
  Identifier("arrayOf")
  LANGLE("<")
  Identifier("MutableMap")
  LANGLE("<")
  Identifier("Int")
  COMMA(",")
  Identifier("Int")
  RANGLE(">")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  Identifier("raw")
  DOT(".")
  Identifier("maps")
  ASSIGNMENT("=")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NI")
  SEMICOLON(";")
  Identifier("TYPE_MISMATCH")
  COMMA(",")
  Identifier("TYPE_MISMATCH")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("arrayOf")
  LANGLE("<")
  Identifier("List")
  LANGLE("<")
  Identifier("String")
  RANGLE(">")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  NL("\n")
  Identifier("raw")
  DOT(".")
  Identifier("arraysOfLists")
  ASSIGNMENT("=")
  Identifier("arrayOf")
  LANGLE("<")
  Identifier("Array")
  LANGLE("<")
  Identifier("List")
  LANGLE("<")
  MULT("*")
  RANGLE(">")
  RANGLE(">")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  Identifier("raw")
  DOT(".")
  Identifier("arraysOfLists")
  ASSIGNMENT("=")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NI")
  SEMICOLON(";")
  Identifier("TYPE_MISMATCH")
  COMMA(",")
  Identifier("TYPE_MISMATCH")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("arrayOf")
  LANGLE("<")
  Identifier("List")
  LANGLE("<")
  Identifier("String")
  RANGLE(">")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  Identifier("raw")
  DOT(".")
  Identifier("arraysOfLists")
  ASSIGNMENT("=")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NI")
  SEMICOLON(";")
  Identifier("TYPE_MISMATCH")
  COMMA(",")
  Identifier("TYPE_MISMATCH")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("arrayOf")
  LANGLE("<")
  Identifier("Array")
  LANGLE("<")
  Identifier("Array")
  LANGLE("<")
  Identifier("String")
  RANGLE(">")
  RANGLE(">")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  NL("\n")
  Identifier("raw")
  DOT(".")
  Identifier("arraysOfAny")
  ASSIGNMENT("=")
  Identifier("arrayOf")
  LANGLE("<")
  Identifier("Array")
  LANGLE("<")
  Identifier("Array")
  LANGLE("<")
  Identifier("String")
  RANGLE(">")
  RANGLE(">")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  NL("\n")
  Identifier("raw")
  DOT(".")
  Identifier("erasedLists")
  ASSIGNMENT("=")
  Identifier("arrayOf")
  LANGLE("<")
  Identifier("List")
  LANGLE("<")
  Identifier("String")
  RANGLE(">")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  EOF("<EOF>")
