File: nonTrivialErasure.kt - c69293b750ae47b4ce28de3ea9b09224
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
    importHeader
      IMPORT("import")
      identifier
        simpleIdentifier
          Identifier("java")
        DOT(".")
        simpleIdentifier
          Identifier("util")
      DOT(".")
      MULT("*")
      semi
        SEMICOLON(";")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("A")
  LANGLE("<")
  Identifier("T")
  Identifier("extends")
  Identifier("A")
  LANGLE("<")
  Identifier("T")
  COMMA(",")
  Identifier("E")
  RANGLE(">")
  COMMA(",")
  Identifier("E")
  Identifier("extends")
  Identifier("T")
  COMMA(",")
  Identifier("F")
  Identifier("extends")
  Identifier("List")
  LANGLE("<")
  QUEST_WS("? ")
  Identifier("extends")
  Identifier("Double")
  RANGLE(">")
  RANGLE(">")
  LCURL("{")
  NL("\n")
  Identifier("T")
  Identifier("first")
  SEMICOLON(";")
  NL("\n")
  Identifier("E")
  Identifier("second")
  SEMICOLON(";")
  NL("\n")
  Identifier("F")
  Identifier("listOfDoubles")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Test")
  LCURL("{")
  NL("\n")
  Identifier("static")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("DerivedRawA")
  Identifier("extends")
  Identifier("A")
  LCURL("{")
  RCURL("}")
  NL("\n")
  Identifier("static")
  Identifier("A")
  Identifier("rawAField")
  ASSIGNMENT("=")
  NullLiteral("null")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("strList")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("List")
                  typeArguments
                    LANGLE("<")
                    typeProjection
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("String")
                    RANGLE(">")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      literalConstant
                                        NullLiteral("null")
                                    postfixUnarySuffix
                                      postfixUnaryOperator
                                        EXCL_NO_WS("!")
                                        excl
                                          EXCL_NO_WS("!")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("main")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("rawA")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
        Identifier("Test")
        DOT(".")
        Identifier("rawAField")
    semis
      NL("\n")
  Identifier("rawA")
  DOT(".")
  Identifier("first")
  ASSIGNMENT("=")
  Identifier("Test")
  DOT(".")
  Identifier("rawAField")
  DOT(".")
  Identifier("second")
  NL("\n")
  Identifier("Test")
  DOT(".")
  Identifier("rawAField")
  DOT(".")
  Identifier("second")
  ASSIGNMENT("=")
  Identifier("rawA")
  DOT(".")
  Identifier("first")
  DOT(".")
  Identifier("second")
  NL("\n")
  NL("\n")
  Identifier("rawA")
  DOT(".")
  Identifier("listOfDoubles")
  ASSIGNMENT("=")
  Identifier("strList")
  NL("\n")
  Identifier("rawA")
  DOT(".")
  Identifier("listOfDoubles")
  ASSIGNMENT("=")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("TYPE_MISMATCH")
  EXCL_NO_WS("!")
  RANGLE(">")
  QUOTE_OPEN(""")
  QUOTE_CLOSE(""")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  RCURL("}")
  NL("\n")
  EOF("<EOF>")
