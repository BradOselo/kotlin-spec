File: withNothing.kt - af97d86298a468e12e77cb4b853c55e3
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("p")
    semi
      SEMICOLON(";")
      NL("\n")
      NL("\n")
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            visibilityModifier
              PUBLIC("public")
        CLASS("class")
        simpleIdentifier
          Identifier("J")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("static")
      Identifier("J")
      Identifier("j")
      LPAREN("(")
      RPAREN(")")
      LCURL("{")
      RETURN("return")
      NullLiteral("null")
    semis
      SEMICOLON(";")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  IMPORT("import")
  Identifier("p")
  DOT(".")
  MULT("*")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("Out")
        typeParameters
          LANGLE("<")
          typeParameter
            typeParameterModifiers
              typeParameterModifier
                varianceModifier
                  OUT("out")
            simpleIdentifier
              Identifier("T1")
          RANGLE(">")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("f")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("a")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Out")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("T")
                        RANGLE(">")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("b")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Out")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("T")
                        RANGLE(">")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("c")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Out")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("T")
                        RANGLE(">")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("T")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          NullLiteral("null")
                                      postfixUnarySuffix
                                        postfixUnaryOperator
                                          EXCL_NO_WS("!")
                                          excl
                                            EXCL_NO_WS("!")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          OUT("out")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("t")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("T")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Out")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("MutableList")
                            typeArguments
                              LANGLE("<")
                              typeProjection
                                type
                                  typeReference
                                    userType
                                      simpleUserType
                                        simpleIdentifier
                                          Identifier("T")
                              RANGLE(">")
                  RANGLE(">")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          NullLiteral("null")
                                      postfixUnarySuffix
                                        postfixUnaryOperator
                                          EXCL_NO_WS("!")
                                          excl
                                            EXCL_NO_WS("!")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("a")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Out")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Nothing")
                        RANGLE(">")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("b")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Out")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("MutableList")
                                  typeArguments
                                    LANGLE("<")
                                    typeProjection
                                      type
                                        typeReference
                                          userType
                                            simpleUserType
                                              simpleIdentifier
                                                Identifier("J")
                                    RANGLE(">")
                        RANGLE(">")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("v")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("f")
                                    postfixUnarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          valueArgument
                                            expression
                                              disjunction
                                                conjunction
                                                  equality
                                                    comparison
                                                      infixOperation
                                                        elvisExpression
                                                          infixFunctionCall
                                                            rangeExpression
                                                              additiveExpression
                                                                multiplicativeExpression
                                                                  asExpression
                                                                    prefixUnaryExpression
                                                                      postfixUnaryExpression
                                                                        primaryExpression
                                                                          simpleIdentifier
                                                                            Identifier("a")
                                          COMMA(",")
                                          valueArgument
                                            expression
                                              disjunction
                                                conjunction
                                                  equality
                                                    comparison
                                                      infixOperation
                                                        elvisExpression
                                                          infixFunctionCall
                                                            rangeExpression
                                                              additiveExpression
                                                                multiplicativeExpression
                                                                  asExpression
                                                                    prefixUnaryExpression
                                                                      postfixUnaryExpression
                                                                        primaryExpression
                                                                          simpleIdentifier
                                                                            Identifier("b")
                                          COMMA(",")
                                          valueArgument
                                            expression
                                              disjunction
                                                conjunction
                                                  equality
                                                    comparison
                                                      infixOperation
                                                        elvisExpression
                                                          infixFunctionCall
                                                            rangeExpression
                                                              additiveExpression
                                                                multiplicativeExpression
                                                                  asExpression
                                                                    prefixUnaryExpression
                                                                      postfixUnaryExpression
                                                                        primaryExpression
                                                                          simpleIdentifier
                                                                            OUT("out")
                                                                        postfixUnarySuffix
                                                                          callSuffix
                                                                            valueArguments
                                                                              LPAREN("(")
                                                                              valueArgument
                                                                                expression
                                                                                  disjunction
                                                                                    conjunction
                                                                                      equality
                                                                                        comparison
                                                                                          infixOperation
                                                                                            elvisExpression
                                                                                              infixFunctionCall
                                                                                                rangeExpression
                                                                                                  additiveExpression
                                                                                                    multiplicativeExpression
                                                                                                      asExpression
                                                                                                        prefixUnaryExpression
                                                                                                          postfixUnaryExpression
                                                                                                            primaryExpression
                                                                                                              simpleIdentifier
                                                                                                                Identifier("J")
                                                                                                            postfixUnarySuffix
                                                                                                              navigationSuffix
                                                                                                                memberAccessOperator
                                                                                                                  DOT(".")
                                                                                                                simpleIdentifier
                                                                                                                  Identifier("j")
                                                                                                            postfixUnarySuffix
                                                                                                              callSuffix
                                                                                                                valueArguments
                                                                                                                  LPAREN("(")
                                                                                                                  RPAREN(")")
                                                                              RPAREN(")")
                                          RPAREN(")")
    semis
      NL("\n")
  Identifier("v")
  Identifier("checkType")
  LCURL("{")
  Identifier("_")
  LANGLE("<")
  Identifier("MutableList")
  LANGLE("<")
  Identifier("J")
  RANGLE(">")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  RCURL("}")
  NL("\n")
  Identifier("v")
  Identifier("checkType")
  LCURL("{")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NI")
  SEMICOLON(";")
  Identifier("DEBUG_INFO_UNRESOLVED_WITH_TARGET")
  COMMA(",")
  Identifier("NI")
  SEMICOLON(";")
  Identifier("UNRESOLVED_REFERENCE_WRONG_RECEIVER")
  COMMA(",")
  Identifier("OI")
  SEMICOLON(";")
  Identifier("TYPE_MISMATCH")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("_")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LANGLE("<")
  Identifier("MutableList")
  LANGLE("<")
  Identifier("J")
  QUEST_NO_WS("?")
  RANGLE(">")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  RCURL("}")
  NL("\n")
  RCURL("}")
  EOF("<EOF>")
