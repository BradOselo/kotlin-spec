File: methodTypeParameter.kt - f74befd0b6fd3402fac741438441ba57
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
    importHeader
      IMPORT("import")
      identifier
        simpleIdentifier
          Identifier("org")
        DOT(".")
        simpleIdentifier
          Identifier("jetbrains")
        DOT(".")
        simpleIdentifier
          Identifier("annotations")
        DOT(".")
        simpleIdentifier
          Identifier("NotNull")
      semi
        SEMICOLON(";")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            visibilityModifier
              PUBLIC("public")
        CLASS("class")
        simpleIdentifier
          Identifier("A")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("static")
      LANGLE("<")
      Identifier("T")
      RANGLE(">")
      Identifier("void")
      Identifier("bar")
      LPAREN("(")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT("@")
      Identifier("NotNull")
      Identifier("T")
      Identifier("x")
      COMMA(",")
      Identifier("T")
      Identifier("y")
      RPAREN(")")
      LCURL("{")
      RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("static")
      Identifier("String")
      Identifier("platformString")
      LPAREN("(")
      RPAREN(")")
      LCURL("{")
      RETURN("return")
      NullLiteral("null")
    semis
      SEMICOLON(";")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("A")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("OI")
  SEMICOLON(";")
  Identifier("TYPE_INFERENCE_INCORPORATION_ERROR")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("bar")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LPAREN("(")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NI")
  SEMICOLON(";")
  Identifier("NULL_FOR_NONNULL_TYPE")
  COMMA(",")
  Identifier("OI")
  SEMICOLON(";")
  Identifier("NULL_FOR_NONNULL_TYPE")
  EXCL_NO_WS("!")
  RANGLE(">")
  NullLiteral("null")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  COMMA(",")
  QUOTE_OPEN(""")
  QUOTE_CLOSE(""")
  RPAREN(")")
  NL("\n")
  NL("\n")
  Identifier("A")
  DOT(".")
  Identifier("bar")
  LANGLE("<")
  Identifier("String")
  RANGLE(">")
  LPAREN("(")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NULL_FOR_NONNULL_TYPE")
  EXCL_NO_WS("!")
  RANGLE(">")
  NullLiteral("null")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  COMMA(",")
  QUOTE_OPEN(""")
  QUOTE_CLOSE(""")
  RPAREN(")")
  NL("\n")
  Identifier("A")
  DOT(".")
  Identifier("bar")
  LANGLE("<")
  Identifier("String")
  QUEST_NO_WS("?")
  RANGLE(">")
  LPAREN("(")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NI")
  SEMICOLON(";")
  Identifier("NULL_FOR_NONNULL_TYPE")
  COMMA(",")
  Identifier("OI")
  SEMICOLON(";")
  Identifier("NULL_FOR_NONNULL_TYPE")
  EXCL_NO_WS("!")
  RANGLE(">")
  NullLiteral("null")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  COMMA(",")
  QUOTE_OPEN(""")
  QUOTE_CLOSE(""")
  RPAREN(")")
  NL("\n")
  Identifier("A")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("OI")
  SEMICOLON(";")
  Identifier("TYPE_INFERENCE_INCORPORATION_ERROR")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("bar")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LPAREN("(")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NI")
  SEMICOLON(";")
  Identifier("NULL_FOR_NONNULL_TYPE")
  COMMA(",")
  Identifier("OI")
  SEMICOLON(";")
  Identifier("NULL_FOR_NONNULL_TYPE")
  EXCL_NO_WS("!")
  RANGLE(">")
  NullLiteral("null")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  COMMA(",")
  Identifier("A")
  DOT(".")
  Identifier("platformString")
  LPAREN("(")
  RPAREN(")")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  EOF("<EOF>")
