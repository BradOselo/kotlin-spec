File: noCollectionLiterals.kt - ec4ea0dd861d020db699de1bc36ebad1
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Array")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Int")
                  RANGLE(">")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  collectionLiteral
                    LSQUARE("[")
                    expression
                      literalConstant
                        IntegerLiteral("1")
                    COMMA(",")
                    expression
                      literalConstant
                        IntegerLiteral("2")
                    RSQUARE("]")
              semis
                NL("\n")
              statement
                expression
                  expression
                    collectionLiteral
                      LSQUARE("[")
                      expression
                        literalConstant
                          IntegerLiteral("1")
                      COMMA(",")
                      expression
                        literalConstant
                          IntegerLiteral("2")
                      RSQUARE("]")
                  unarySuffix
                    indexingSuffix
                      LSQUARE("[")
                      expression
                        literalConstant
                          IntegerLiteral("0")
                      RSQUARE("]")
              semis
                NL("\n")
              statement
                expression
                  expression
                    collectionLiteral
                      LSQUARE("[")
                      expression
                        literalConstant
                          IntegerLiteral("1")
                      COMMA(",")
                      expression
                        literalConstant
                          IntegerLiteral("2")
                      RSQUARE("]")
                  unarySuffix
                    navigationSuffix
                      memberAccessOperator
                        DOT(".")
                      simpleIdentifier
                        GET("get")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        valueArgument
                          expression
                            literalConstant
                              IntegerLiteral("0")
                        RPAREN(")")
              semis
                NL("\n")
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("foo")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        valueArgument
                          expression
                            collectionLiteral
                              LSQUARE("[")
                              expression
                                stringLiteral
                                  lineStringLiteral
                                    QUOTE_OPEN(""")
                                    QUOTE_CLOSE(""")
                              RSQUARE("]")
                        RPAREN(")")
              semis
                NL("\n")
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("p")
                    ASSIGNMENT("=")
                    expression
                      expression
                        collectionLiteral
                          LSQUARE("[")
                          expression
                            literalConstant
                              IntegerLiteral("1")
                          COMMA(",")
                          expression
                            literalConstant
                              IntegerLiteral("2")
                          RSQUARE("]")
                      additiveOperator
                        ADD("+")
                      expression
                        collectionLiteral
                          LSQUARE("[")
                          expression
                            literalConstant
                              IntegerLiteral("3")
                          COMMA(",")
                          expression
                            literalConstant
                              IntegerLiteral("4")
                          RSQUARE("]")
                    NL("\n")
              semis
                NL("\n")
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      collectionLiteral
                        LSQUARE("[")
                        expression
                          literalConstant
                            IntegerLiteral("1")
                        COMMA(",")
                        expression
                          literalConstant
                            IntegerLiteral("2")
                        RSQUARE("]")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("a")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Array")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("String")
                        RANGLE(">")
            ASSIGNMENT("=")
            expression
              collectionLiteral
                LSQUARE("[")
                expression
                  stringLiteral
                    lineStringLiteral
                      QUOTE_OPEN(""")
                      QUOTE_CLOSE(""")
                RSQUARE("]")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("A")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("a")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Array")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Int")
                        RANGLE(">")
              ASSIGNMENT("=")
              expression
                collectionLiteral
                  LSQUARE("[")
                  RSQUARE("]")
            RPAREN(")")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
