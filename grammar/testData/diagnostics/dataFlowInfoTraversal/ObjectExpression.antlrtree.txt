File: ObjectExpression.kt - fcf97ffa0f7fe290e774dd82568d8eaa
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("bar")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          ASSIGNMENT("=")
          expression
            expression
              simpleIdentifier
                Identifier("x")
            additiveOperator
              ADD("+")
            expression
              literalConstant
                IntegerLiteral("1")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("x")
                      COLON(":")
                      type
                        nullableType
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Int")
                          quest
                            QUEST_WS("? ")
                    ASSIGNMENT("=")
                    expression
                      literalConstant
                        NullLiteral("null")
                    NL("\n")
              semis
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("a")
                    ASSIGNMENT("=")
                    expression
                      objectLiteral
                        OBJECT("object")
                        classBody
                          LCURL("{")
                          NL("\n")
                          classMemberDeclarations
                            classMemberDeclaration
                              declaration
                                functionDeclaration
                                  FUN("fun")
                                  simpleIdentifier
                                    Identifier("baz")
                                  functionValueParameters
                                    LPAREN("(")
                                    RPAREN(")")
                                  functionBody
                                    ASSIGNMENT("=")
                                    expression
                                      expression
                                        simpleIdentifier
                                          Identifier("bar")
                                      unarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            valueArgument
                                              expression
                                                ifExpression
                                                  IF("if")
                                                  LPAREN("(")
                                                  expression
                                                    expression
                                                      simpleIdentifier
                                                        Identifier("x")
                                                    equalityOperator
                                                      EQEQ("==")
                                                    expression
                                                      literalConstant
                                                        NullLiteral("null")
                                                  RPAREN(")")
                                                  controlStructureBody
                                                    statement
                                                      expression
                                                        literalConstant
                                                          IntegerLiteral("0")
                                                  ELSE("else")
                                                  controlStructureBody
                                                    statement
                                                      expression
                                                        simpleIdentifier
                                                          Identifier("x")
                                            RPAREN(")")
                            semis
                              NL("\n")
                            classMemberDeclaration
                              declaration
                                functionDeclaration
                                  FUN("fun")
                                  simpleIdentifier
                                    Identifier("quux")
                                  functionValueParameters
                                    LPAREN("(")
                                    RPAREN(")")
                                  COLON(":")
                                  type
                                    typeReference
                                      userType
                                        simpleUserType
                                          simpleIdentifier
                                            Identifier("Int")
                                  functionBody
                                    ASSIGNMENT("=")
                                    expression
                                      ifExpression
                                        IF("if")
                                        LPAREN("(")
                                        expression
                                          expression
                                            simpleIdentifier
                                              Identifier("x")
                                          equalityOperator
                                            EQEQ("==")
                                          expression
                                            literalConstant
                                              NullLiteral("null")
                                        RPAREN(")")
                                        controlStructureBody
                                          statement
                                            expression
                                              simpleIdentifier
                                                Identifier("x")
                                        ELSE("else")
                                        controlStructureBody
                                          statement
                                            expression
                                              simpleIdentifier
                                                Identifier("x")
                            semis
                              NL("\n")
                          RCURL("}")
                    NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
