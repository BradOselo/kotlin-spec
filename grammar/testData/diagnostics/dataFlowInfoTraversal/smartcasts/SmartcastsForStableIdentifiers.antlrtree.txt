File: SmartcastsForStableIdentifiers.kt - 3c588d4d5652bb613b880918d47b28d0
  NL("\n")
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("example")
      DOT(".")
      simpleIdentifier
        Identifier("ns")
    semi
      NL("\n")
      NL("\n")
  importList
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("y")
          COLON(":")
          type
            nullableType
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Any")
              quest
                QUEST_WS("? ")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      literalConstant
                                        IntegerLiteral("2")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  PACKAGE("package")
  Identifier("example")
  NL("\n")
  NL("\n")
  IMPORT("import")
  Identifier("example")
  DOT(".")
  Identifier("ns")
  DOT(".")
  Identifier("y")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      objectDeclaration
        OBJECT("object")
        simpleIdentifier
          Identifier("Obj")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAL("val")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("y")
                    COLON(":")
                    type
                      nullableType
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Any")
                        quest
                          QUEST_WS("? ")
                  ASSIGNMENT("=")
                  expression
                    disjunction
                      conjunction
                        equality
                          comparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                literalConstant
                                                  IntegerLiteral("2")
                  NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("AClass")
        primaryConstructor
          classParameters
            LPAREN("(")
            RPAREN(")")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              companionObject
                COMPANION("companion")
                OBJECT("object")
                classBody
                  LCURL("{")
                  NL("\n")
                  classMemberDeclarations
                    classMemberDeclaration
                      declaration
                        propertyDeclaration
                          VAL("val")
                          variableDeclaration
                            simpleIdentifier
                              Identifier("y")
                            COLON(":")
                            type
                              nullableType
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("Any")
                                quest
                                  QUEST_WS("? ")
                          ASSIGNMENT("=")
                          expression
                            disjunction
                              conjunction
                                equality
                                  comparison
                                    infixOperation
                                      elvisExpression
                                        infixFunctionCall
                                          rangeExpression
                                            additiveExpression
                                              multiplicativeExpression
                                                asExpression
                                                  prefixUnaryExpression
                                                    postfixUnaryExpression
                                                      primaryExpression
                                                        literalConstant
                                                          IntegerLiteral("2")
                          NL("\n")
                  RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("x")
          COLON(":")
          type
            nullableType
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Any")
              quest
                QUEST_WS("? ")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      literalConstant
                                        IntegerLiteral("1")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        receiverType
          nullableType
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Any")
            quest
              QUEST_NO_WS("?")
        DOT(".")
        simpleIdentifier
          Identifier("vars")
        functionValueParameters
          LPAREN("(")
          LANGLE("<")
          EXCL_NO_WS("!")
          Identifier("UNUSED_PARAMETER")
          EXCL_NO_WS("!")
          RANGLE(">")
          Identifier("a")
          LANGLE("<")
          EXCL_NO_WS("!")
          RANGLE(">")
        COLON(":")
        type
          nullableType
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Any")
            quest
              QUEST_NO_WS("?")
  RPAREN(")")
  COLON(":")
  Identifier("Int")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        typeParameters
          LANGLE("<")
          EXCL_NO_WS("!")
          typeParameter
            simpleIdentifier
              Identifier("ASSIGNED_BUT_NEVER_ACCESSED_VARIABLE")
          EXCL_NO_WS("!")
          RANGLE(">")
        variableDeclaration
          simpleIdentifier
            Identifier("b")
        LANGLE("<")
        EXCL_NO_WS("!")
        RANGLE(">")
        COLON(":")
        Identifier("Int")
        ASSIGNMENT("=")
        IntegerLiteral("0")
    semis
      NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("example")
  DOT(".")
  Identifier("ns")
  DOT(".")
  Identifier("y")
  IS("is")
  Identifier("Int")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNUSED_VALUE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("b")
  ASSIGNMENT("=")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_SMARTCAST")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("y")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  RCURL("}")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("example")
  DOT(".")
  Identifier("ns")
  DOT(".")
  Identifier("y")
  IS("is")
  Identifier("Int")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNUSED_VALUE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("b")
  ASSIGNMENT("=")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_SMARTCAST")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("example")
  DOT(".")
  Identifier("ns")
  DOT(".")
  Identifier("y")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  RCURL("}")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("Obj")
  DOT(".")
  Identifier("y")
  IS("is")
  Identifier("Int")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNUSED_VALUE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("b")
  ASSIGNMENT("=")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_SMARTCAST")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("Obj")
  DOT(".")
  Identifier("y")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  RCURL("}")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("example")
  DOT(".")
  Identifier("Obj")
  DOT(".")
  Identifier("y")
  IS("is")
  Identifier("Int")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNUSED_VALUE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("b")
  ASSIGNMENT("=")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_SMARTCAST")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("Obj")
  DOT(".")
  Identifier("y")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  RCURL("}")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("AClass")
  DOT(".")
  Identifier("y")
  IS("is")
  Identifier("Int")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNUSED_VALUE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("b")
  ASSIGNMENT("=")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_SMARTCAST")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("AClass")
  DOT(".")
  Identifier("y")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  RCURL("}")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("example")
  DOT(".")
  Identifier("AClass")
  DOT(".")
  Identifier("y")
  IS("is")
  Identifier("Int")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNUSED_VALUE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("b")
  ASSIGNMENT("=")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_SMARTCAST")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("AClass")
  DOT(".")
  Identifier("y")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  RCURL("}")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("x")
  IS("is")
  Identifier("Int")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNUSED_VALUE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("b")
  ASSIGNMENT("=")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_SMARTCAST")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("x")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  RCURL("}")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("example")
  DOT(".")
  Identifier("x")
  IS("is")
  Identifier("Int")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNUSED_VALUE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("b")
  ASSIGNMENT("=")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_SMARTCAST")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("x")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  RCURL("}")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("example")
  DOT(".")
  Identifier("x")
  IS("is")
  Identifier("Int")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNUSED_VALUE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("b")
  ASSIGNMENT("=")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_SMARTCAST")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("example")
  DOT(".")
  Identifier("x")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  RCURL("}")
  NL("\n")
  RETURN("return")
  IntegerLiteral("1")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        receiverType
          nullableType
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Any")
            quest
              QUEST_NO_WS("?")
        DOT(".")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
  LCURL("{")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("this")
  IS("is")
  Identifier("Int")
  RPAREN(")")
  NL("\n")
  RETURN("return")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_SMARTCAST")
  EXCL_NO_WS("!")
  RANGLE(">")
  THIS("this")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  IF("if")
  LPAREN("(")
  IdentifierAt("this@")
  Identifier("foo")
  IS("is")
  Identifier("Int")
  RPAREN(")")
  NL("\n")
  RETURN("return")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_SMARTCAST")
  EXCL_NO_WS("!")
  RANGLE(">")
  THIS("this")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  IF("if")
  LPAREN("(")
  IdentifierAt("this@")
  Identifier("foo")
  IS("is")
  Identifier("Int")
  RPAREN(")")
  NL("\n")
  RETURN("return")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_SMARTCAST")
  EXCL_NO_WS("!")
  RANGLE(">")
  THIS_AT("this@foo")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("this")
  IS("is")
  Identifier("Int")
  RPAREN(")")
  NL("\n")
  RETURN("return")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_SMARTCAST")
  EXCL_NO_WS("!")
  RANGLE(">")
  THIS_AT("this@foo")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  RETURN("return")
  IntegerLiteral("1")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("T")
        classBody
          LCURL("{")
          classMemberDeclarations
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        CLASS("class")
        simpleIdentifier
          Identifier("C")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        typeParameters
          LANGLE("<")
          EXCL_NO_WS("!")
          typeParameter
            simpleIdentifier
              Identifier("ASSIGNED_BUT_NEVER_ACCESSED_VARIABLE")
          EXCL_NO_WS("!")
          RANGLE(">")
        variableDeclaration
          simpleIdentifier
            Identifier("t")
        LANGLE("<")
        EXCL_NO_WS("!")
        RANGLE(">")
        COLON(":")
        Identifier("T")
        QUEST_WS("? ")
        ASSIGNMENT("=")
        NullLiteral("null")
    semis
      NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("this")
  IS("is")
  Identifier("T")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNUSED_VALUE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("t")
  ASSIGNMENT("=")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_SMARTCAST")
  EXCL_NO_WS("!")
  RANGLE(">")
  THIS("this")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  RCURL("}")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("this")
  IS("is")
  Identifier("T")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNUSED_VALUE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("t")
  ASSIGNMENT("=")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_SMARTCAST")
  EXCL_NO_WS("!")
  RANGLE(">")
  THIS_AT("this@C")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  RCURL("}")
  NL("\n")
  IF("if")
  LPAREN("(")
  IdentifierAt("this@")
  Identifier("C")
  IS("is")
  Identifier("T")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNUSED_VALUE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("t")
  ASSIGNMENT("=")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_SMARTCAST")
  EXCL_NO_WS("!")
  RANGLE(">")
  THIS("this")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  RCURL("}")
  NL("\n")
  IF("if")
  LPAREN("(")
  IdentifierAt("this@")
  Identifier("C")
  IS("is")
  Identifier("T")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNUSED_VALUE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("t")
  ASSIGNMENT("=")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_SMARTCAST")
  EXCL_NO_WS("!")
  RANGLE(">")
  THIS_AT("this@C")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  EOF("<EOF>")
