File: packagePrivate.kt - 67fc6c2a035a1efda3b6ed9ca1625481
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("test")
    semi
      SEMICOLON(";")
      NL("\n")
      NL("\n")
  importList
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Internal")
        classBody
          LCURL("{")
          classMemberDeclarations
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            visibilityModifier
              PUBLIC("public")
        CLASS("class")
        simpleIdentifier
          Identifier("My")
  LCURL("{")
  NL("\n")
  Identifier("static")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("Internal")
      Identifier("foo")
      LPAREN("(")
      RPAREN(")")
      LCURL("{")
      RETURN("return")
      Identifier("new")
      Identifier("Internal")
      LPAREN("(")
      RPAREN(")")
    semis
      SEMICOLON(";")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  PACKAGE("package")
  Identifier("test")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("His")
  LCURL("{")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            visibilityModifier
              PRIVATE("private")
        FUN("fun")
        simpleIdentifier
          PRIVATE("private")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        simpleIdentifier
                                          Identifier("My")
                                      postfixUnarySuffix
                                        navigationSuffix
                                          memberAccessOperator
                                            DOT(".")
                                          simpleIdentifier
                                            Identifier("foo")
                                      postfixUnarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            visibilityModifier
              INTERNAL("internal")
        FUN("fun")
        simpleIdentifier
          INTERNAL("internal")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        simpleIdentifier
                                          Identifier("My")
                                      postfixUnarySuffix
                                        navigationSuffix
                                          memberAccessOperator
                                            DOT(".")
                                          simpleIdentifier
                                            Identifier("foo")
                                      postfixUnarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            visibilityModifier
              PROTECTED("protected")
        FUN("fun")
        typeParameters
          LANGLE("<")
          EXCL_NO_WS("!")
          typeParameter
            simpleIdentifier
              Identifier("EXPOSED_FUNCTION_RETURN_TYPE")
          EXCL_NO_WS("!")
          RANGLE(">")
        receiverType
        DOT("<missing '.'>")
        simpleIdentifier
          PROTECTED("protected")
        LANGLE("<")
        EXCL_NO_WS("!")
        RANGLE(">")
        LPAREN("(")
        RPAREN(")")
        ASSIGNMENT("=")
        Identifier("My")
        DOT(".")
        Identifier("foo")
        LPAREN("(")
        RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          EXCL_NO_WS("!")
          typeParameter
            simpleIdentifier
              Identifier("EXPOSED_FUNCTION_RETURN_TYPE")
          EXCL_NO_WS("!")
          RANGLE(">")
        receiverType
        DOT("<missing '.'>")
        simpleIdentifier
          PUBLIC("public")
        LANGLE("<")
        EXCL_NO_WS("!")
        RANGLE(">")
        LPAREN("(")
        RPAREN(")")
        ASSIGNMENT("=")
        Identifier("My")
        DOT(".")
        Identifier("foo")
        LPAREN("(")
        RPAREN(")")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  PACKAGE("package")
  Identifier("other")
  NL("\n")
  NL("\n")
  IMPORT("import")
  Identifier("test")
  DOT(".")
  Identifier("My")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Your")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            visibilityModifier
              INTERNAL("internal")
        FUN("fun")
        simpleIdentifier
          Identifier("bar")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          LANGLE("<")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    unaryPrefix
                                      prefixUnaryOperator
                                        excl
                                          EXCL_NO_WS("!")
                                    postfixUnaryExpression
                                      primaryExpression
                                        simpleIdentifier
                                          Identifier("INACCESSIBLE_TYPE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("My")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  RPAREN(")")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  RCURL("}")
  NL("\n")
  EOF("<EOF>")
