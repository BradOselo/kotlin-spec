File: defaultEnum.kt - 59c154ab0d149c9921a7a2dea6e4a0d4
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
  topLevelObject
    declaration
      ENUM("enum")
      Identifier("Signs")
      LCURL("{")
    semis
      NL("\n")
  Identifier("HELLO")
  COMMA(",")
  NL("\n")
  Identifier("WORLD")
  SEMICOLON(";")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("static")
  topLevelObject
    declaration
  topLevelObject
    declaration
      FINAL("final")
      Identifier("Signs")
      Identifier("X")
    semis
      SEMICOLON(";")
      NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("static")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            inheritanceModifier
              FINAL("final")
        CLASS("class")
        simpleIdentifier
          Identifier("NOT_ENTRY_EITHER")
        classBody
          LCURL("{")
          classMemberDeclarations
          RCURL("}")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
  topLevelObject
    declaration
      ENUM("enum")
      Identifier("Mixed")
      LCURL("{")
    semis
      NL("\n")
  Identifier("NOT_ENTRY_EITHER")
  SEMICOLON(";")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("static")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            inheritanceModifier
              FINAL("final")
        CLASS("class")
        simpleIdentifier
          Identifier("NOT_ENTRY_EITHER")
        classBody
          LCURL("{")
          classMemberDeclarations
          RCURL("}")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            classModifier
              ENUM("enum")
        CLASS("class")
        simpleIdentifier
          Identifier("B")
        enumClassBody
          LCURL("{")
          NL("\n")
          enumEntries
            enumEntry
              simpleIdentifier
                Identifier("X")
            COMMA(",")
            NL("\n")
            enumEntry
              simpleIdentifier
                Identifier("Y")
          SEMICOLON(";")
          NL("\n")
          classMemberDeclarations
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  IMPORT("import")
  Identifier("kotlin")
  DOT(".")
  Identifier("annotations")
  DOT(".")
  Identifier("jvm")
  DOT(".")
  topLevelObject
    declaration
  topLevelObject
    declaration
      INTERNAL("internal")
      DOT(".")
      MULT("*")
    semis
      SEMICOLON(";")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("A")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("Signs")
      Identifier("a")
      LPAREN("(")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT("@")
      Identifier("DefaultValue")
      LPAREN("(")
      QUOTE_OPEN(""")
      LineStrText("HELLO")
      QUOTE_CLOSE(""")
      RPAREN(")")
      Identifier("Signs")
      Identifier("arg")
      RPAREN(")")
      LCURL("{")
    semis
      NL("\n")
  RETURN("return")
  Identifier("arg")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("B")
      Identifier("b")
      LPAREN("(")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT("@")
      Identifier("DefaultValue")
      LPAREN("(")
      QUOTE_OPEN(""")
      LineStrText("Y")
      QUOTE_CLOSE(""")
      RPAREN(")")
      Identifier("B")
      Identifier("arg")
      RPAREN(")")
      LCURL("{")
    semis
      NL("\n")
  RETURN("return")
  Identifier("arg")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("void")
      Identifier("foooo")
      LPAREN("(")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT("@")
      Identifier("DefaultValue")
      LPAREN("(")
      QUOTE_OPEN(""")
      LineStrText("ok")
      QUOTE_CLOSE(""")
      RPAREN(")")
      Identifier("B")
      Identifier("arg")
      RPAREN(")")
      LCURL("{")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("Signs")
      Identifier("bar")
      LPAREN("(")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT("@")
      Identifier("DefaultValue")
      LPAREN("(")
      QUOTE_OPEN(""")
      LineStrText("X")
      QUOTE_CLOSE(""")
      RPAREN(")")
      Identifier("Signs")
      Identifier("arg")
      RPAREN(")")
      LCURL("{")
    semis
      NL("\n")
  RETURN("return")
  Identifier("arg")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("Signs")
      Identifier("baz")
      LPAREN("(")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT("@")
      Identifier("DefaultValue")
      LPAREN("(")
      QUOTE_OPEN(""")
      LineStrText("NOT_ENTRY_EITHER")
      QUOTE_CLOSE(""")
      RPAREN(")")
      Identifier("Signs")
      Identifier("arg")
      RPAREN(")")
      LCURL("{")
    semis
      NL("\n")
  RETURN("return")
  Identifier("arg")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("Mixed")
      Identifier("bam")
      LPAREN("(")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT("@")
      Identifier("DefaultValue")
      LPAREN("(")
      QUOTE_OPEN(""")
      LineStrText("NOT_ENTRY_EITHER")
      QUOTE_CLOSE(""")
      RPAREN(")")
      Identifier("Mixed")
      Identifier("arg")
      RPAREN(")")
      LCURL("{")
    semis
      NL("\n")
  RETURN("return")
  Identifier("arg")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("a")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("A")
                                    postfixUnarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          RPAREN(")")
    semis
      NL("\n")
  Identifier("a")
  DOT(".")
  Identifier("a")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  Identifier("a")
  DOT(".")
  Identifier("a")
  LPAREN("(")
  Identifier("Signs")
  DOT(".")
  Identifier("HELLO")
  RPAREN(")")
  NL("\n")
  Identifier("a")
  DOT(".")
  Identifier("b")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  Identifier("a")
  DOT(".")
  Identifier("b")
  LPAREN("(")
  Identifier("B")
  DOT(".")
  Identifier("X")
  RPAREN(")")
  NL("\n")
  Identifier("a")
  DOT(".")
  Identifier("foooo")
  LPAREN("(")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NO_VALUE_FOR_PARAMETER")
  EXCL_NO_WS("!")
  RANGLE(">")
  RPAREN(")")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  Identifier("a")
  DOT(".")
  Identifier("foooo")
  LPAREN("(")
  Identifier("B")
  DOT(".")
  Identifier("Y")
  RPAREN(")")
  NL("\n")
  Identifier("a")
  DOT(".")
  Identifier("bar")
  LPAREN("(")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NO_VALUE_FOR_PARAMETER")
  EXCL_NO_WS("!")
  RANGLE(">")
  RPAREN(")")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  Identifier("a")
  DOT(".")
  Identifier("baz")
  LPAREN("(")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NO_VALUE_FOR_PARAMETER")
  EXCL_NO_WS("!")
  RANGLE(">")
  RPAREN(")")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  NL("\n")
  Identifier("a")
  DOT(".")
  Identifier("bam")
  LPAREN("(")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NO_VALUE_FOR_PARAMETER")
  EXCL_NO_WS("!")
  RANGLE(">")
  RPAREN(")")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  RCURL("}")
  EOF("<EOF>")
