File: overridesParameterName.kt - 6b5ad1e9560ba8e5fda707de30e84186
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
    importHeader
      IMPORT("import")
      identifier
        simpleIdentifier
          Identifier("kotlin")
        DOT(".")
        simpleIdentifier
          Identifier("annotations")
        DOT(".")
        simpleIdentifier
          Identifier("jvm")
        DOT(".")
        simpleIdentifier
          INTERNAL("internal")
      DOT(".")
      MULT("*")
      semi
        SEMICOLON(";")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("A")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("void")
      Identifier("call")
      LPAREN("(")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT_PRE_WS("\n@")
      Identifier("ParameterName")
      LPAREN("(")
      QUOTE_OPEN(""")
      LineStrText("foo")
      QUOTE_CLOSE(""")
      RPAREN(")")
      Identifier("String")
      Identifier("arg")
      RPAREN(")")
      LCURL("{")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  IMPORT("import")
  Identifier("kotlin")
  DOT(".")
  Identifier("annotations")
  DOT(".")
  Identifier("jvm")
  DOT(".")
  topLevelObject
    declaration
  topLevelObject
    declaration
      INTERNAL("internal")
      DOT(".")
      MULT("*")
    semis
      SEMICOLON(";")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("B")
  Identifier("extends")
  Identifier("A")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("void")
      Identifier("call")
      LPAREN("(")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT_PRE_WS("\n@")
      Identifier("ParameterName")
      LPAREN("(")
      QUOTE_OPEN(""")
      LineStrText("bar")
      QUOTE_CLOSE(""")
      RPAREN(")")
      Identifier("String")
      Identifier("arg")
      RPAREN(")")
      LCURL("{")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("C")
  Identifier("extends")
  Identifier("A")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("void")
      Identifier("call")
      LPAREN("(")
      Identifier("String")
      Identifier("arg")
      RPAREN(")")
      LCURL("{")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        CLASS("class")
        simpleIdentifier
          Identifier("D")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      inheritanceModifier
                        OPEN("open")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("call")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("foo")
                        COLON(":")
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("String")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                      RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  IMPORT("import")
  Identifier("kotlin")
  DOT(".")
  Identifier("annotations")
  DOT(".")
  Identifier("jvm")
  DOT(".")
  topLevelObject
    declaration
  topLevelObject
    declaration
      INTERNAL("internal")
      DOT(".")
      MULT("*")
    semis
      SEMICOLON(";")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("E")
  Identifier("extends")
  Identifier("D")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("void")
      Identifier("call")
      LPAREN("(")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT_PRE_WS("\n@")
      Identifier("ParameterName")
      LPAREN("(")
      QUOTE_OPEN(""")
      LineStrText("baz")
      QUOTE_CLOSE(""")
      RPAREN(")")
      Identifier("String")
      Identifier("bar")
      RPAREN(")")
      LCURL("{")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("F")
  Identifier("extends")
  Identifier("D")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("void")
      Identifier("call")
      LPAREN("(")
      Identifier("String")
      Identifier("baaam")
      RPAREN(")")
      LCURL("{")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  IMPORT("import")
  Identifier("kotlin")
  DOT(".")
  Identifier("annotations")
  DOT(".")
  Identifier("jvm")
  DOT(".")
  topLevelObject
    declaration
  topLevelObject
    declaration
      INTERNAL("internal")
      DOT(".")
      MULT("*")
    semis
      SEMICOLON(";")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("G")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("void")
      Identifier("foo")
      LPAREN("(")
      Identifier("String")
      Identifier("bar")
      COMMA(",")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT_PRE_WS("\n@")
      Identifier("ParameterName")
      LPAREN("(")
      QUOTE_OPEN(""")
      LineStrText("foo")
      QUOTE_CLOSE(""")
      RPAREN(")")
      Identifier("String")
      Identifier("baz")
      RPAREN(")")
      LCURL("{")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("H")
  Identifier("extends")
  Identifier("G")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("void")
      Identifier("foo")
      LPAREN("(")
      Identifier("String")
      Identifier("baz")
      COMMA(",")
      Identifier("String")
      Identifier("bam")
      RPAREN(")")
      LCURL("{")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("main")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("a")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("A")
                                    postfixUnarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          RPAREN(")")
    semis
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("b")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("B")
                                    postfixUnarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          RPAREN(")")
    semis
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("c")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("C")
                                    postfixUnarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  Identifier("a")
  DOT(".")
  Identifier("call")
  LPAREN("(")
  Identifier("foo")
  ASSIGNMENT("=")
  QUOTE_OPEN(""")
  LineStrText("hello")
  QUOTE_CLOSE(""")
  RPAREN(")")
  NL("\n")
  Identifier("a")
  DOT(".")
  Identifier("call")
  LPAREN("(")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NAMED_PARAMETER_NOT_FOUND")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("arg")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  ASSIGNMENT("=")
  QUOTE_OPEN(""")
  LineStrText("hello")
  QUOTE_CLOSE(""")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NO_VALUE_FOR_PARAMETER")
  EXCL_NO_WS("!")
  RANGLE(">")
  RPAREN(")")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  Identifier("a")
  DOT(".")
  Identifier("call")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("hello")
  QUOTE_CLOSE(""")
  RPAREN(")")
  NL("\n")
  NL("\n")
  Identifier("b")
  DOT(".")
  Identifier("call")
  LPAREN("(")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NAMED_PARAMETER_NOT_FOUND")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("foo")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  ASSIGNMENT("=")
  QUOTE_OPEN(""")
  LineStrText("hello")
  QUOTE_CLOSE(""")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NO_VALUE_FOR_PARAMETER")
  EXCL_NO_WS("!")
  RANGLE(">")
  RPAREN(")")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  Identifier("b")
  DOT(".")
  Identifier("call")
  LPAREN("(")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NAMED_PARAMETER_NOT_FOUND")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("arg")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  ASSIGNMENT("=")
  QUOTE_OPEN(""")
  LineStrText("hello")
  QUOTE_CLOSE(""")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NO_VALUE_FOR_PARAMETER")
  EXCL_NO_WS("!")
  RANGLE(">")
  RPAREN(")")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  Identifier("b")
  DOT(".")
  Identifier("call")
  LPAREN("(")
  Identifier("bar")
  ASSIGNMENT("=")
  QUOTE_OPEN(""")
  LineStrText("hello")
  QUOTE_CLOSE(""")
  RPAREN(")")
  NL("\n")
  Identifier("b")
  DOT(".")
  Identifier("call")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("hello")
  QUOTE_CLOSE(""")
  RPAREN(")")
  NL("\n")
  NL("\n")
  Identifier("c")
  DOT(".")
  Identifier("call")
  LPAREN("(")
  Identifier("foo")
  ASSIGNMENT("=")
  QUOTE_OPEN(""")
  LineStrText("hello")
  QUOTE_CLOSE(""")
  RPAREN(")")
  NL("\n")
  Identifier("c")
  DOT(".")
  Identifier("call")
  LPAREN("(")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NAMED_PARAMETER_NOT_FOUND")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("arg")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  ASSIGNMENT("=")
  QUOTE_OPEN(""")
  LineStrText("hello")
  QUOTE_CLOSE(""")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NO_VALUE_FOR_PARAMETER")
  EXCL_NO_WS("!")
  RANGLE(">")
  RPAREN(")")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  Identifier("c")
  DOT(".")
  Identifier("call")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("hello")
  QUOTE_CLOSE(""")
  RPAREN(")")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("e")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("E")
                                    postfixUnarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          RPAREN(")")
    semis
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("f")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("F")
                                    postfixUnarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  Identifier("e")
  DOT(".")
  Identifier("call")
  LPAREN("(")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NAMED_PARAMETER_NOT_FOUND")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("foo")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  ASSIGNMENT("=")
  QUOTE_OPEN(""")
  LineStrText("hello")
  QUOTE_CLOSE(""")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NO_VALUE_FOR_PARAMETER")
  EXCL_NO_WS("!")
  RANGLE(">")
  RPAREN(")")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  Identifier("e")
  DOT(".")
  Identifier("call")
  LPAREN("(")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NAMED_PARAMETER_NOT_FOUND")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("bar")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  ASSIGNMENT("=")
  QUOTE_OPEN(""")
  LineStrText("hello")
  QUOTE_CLOSE(""")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NO_VALUE_FOR_PARAMETER")
  EXCL_NO_WS("!")
  RANGLE(">")
  RPAREN(")")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  Identifier("e")
  DOT(".")
  Identifier("call")
  LPAREN("(")
  Identifier("baz")
  ASSIGNMENT("=")
  QUOTE_OPEN(""")
  LineStrText("hello")
  QUOTE_CLOSE(""")
  RPAREN(")")
  NL("\n")
  Identifier("e")
  DOT(".")
  Identifier("call")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("hello")
  QUOTE_CLOSE(""")
  RPAREN(")")
  NL("\n")
  NL("\n")
  Identifier("f")
  DOT(".")
  Identifier("call")
  LPAREN("(")
  Identifier("foo")
  ASSIGNMENT("=")
  QUOTE_OPEN(""")
  LineStrText("hello")
  QUOTE_CLOSE(""")
  RPAREN(")")
  NL("\n")
  Identifier("f")
  DOT(".")
  Identifier("call")
  LPAREN("(")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NAMED_PARAMETER_NOT_FOUND")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("baaam")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  ASSIGNMENT("=")
  QUOTE_OPEN(""")
  LineStrText("hello")
  QUOTE_CLOSE(""")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NO_VALUE_FOR_PARAMETER")
  EXCL_NO_WS("!")
  RANGLE(">")
  RPAREN(")")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  Identifier("f")
  DOT(".")
  Identifier("call")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("hello")
  QUOTE_CLOSE(""")
  RPAREN(")")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("g")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("G")
                                    postfixUnarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          RPAREN(")")
    semis
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("h")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("H")
                                    postfixUnarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          RPAREN(")")
        NL("\n")
        Identifier("g")
        DOT(".")
        Identifier("foo")
        LPAREN("(")
        QUOTE_OPEN(""")
        LineStrText("ok")
        QUOTE_CLOSE(""")
        COMMA(",")
        LANGLE("<")
        EXCL_NO_WS("!")
        Identifier("NAMED_ARGUMENTS_NOT_ALLOWED")
        EXCL_NO_WS("!")
        RANGLE(">")
        Identifier("foo")
        LANGLE("<")
        EXCL_NO_WS("!")
        RANGLE(">")
        ASSIGNMENT("=")
        QUOTE_OPEN(""")
        LineStrText("hohoho")
        QUOTE_CLOSE(""")
        RPAREN(")")
    semis
      NL("\n")
  Identifier("g")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("ok")
  QUOTE_CLOSE(""")
  COMMA(",")
  QUOTE_OPEN(""")
  LineStrText("hohoho")
  QUOTE_CLOSE(""")
  RPAREN(")")
  NL("\n")
  Identifier("h")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("ok")
  QUOTE_CLOSE(""")
  COMMA(",")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NAMED_ARGUMENTS_NOT_ALLOWED")
  COMMA(",")
  Identifier("NAMED_PARAMETER_NOT_FOUND")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("foo")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  ASSIGNMENT("=")
  QUOTE_OPEN(""")
  LineStrText("hohoho")
  QUOTE_CLOSE(""")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("NO_VALUE_FOR_PARAMETER")
  EXCL_NO_WS("!")
  RANGLE(">")
  RPAREN(")")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  Identifier("h")
  DOT(".")
  Identifier("foo")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("ok")
  QUOTE_CLOSE(""")
  COMMA(",")
  QUOTE_OPEN(""")
  LineStrText("hohoho")
  QUOTE_CLOSE(""")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  EOF("<EOF>")
