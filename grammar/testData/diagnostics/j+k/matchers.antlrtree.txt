File: matchers.kt - f8e0946685654aed717ed65c0f600045
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            visibilityModifier
              PUBLIC("public")
        CLASS("class")
        simpleIdentifier
          Identifier("Assert")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("static")
      LANGLE("<")
      Identifier("T")
      RANGLE(">")
      Identifier("void")
      Identifier("assertThat")
      LPAREN("(")
      Identifier("T")
  topLevelObject
    declaration
  topLevelObject
    declaration
      ACTUAL("actual")
      COMMA(",")
      Identifier("Matcher")
      LANGLE("<")
      QUEST_WS("? ")
      SUPER("super")
      Identifier("T")
      RANGLE(">")
      Identifier("matcher")
      RPAREN(")")
      LCURL("{")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            visibilityModifier
              PUBLIC("public")
        CLASS("class")
        simpleIdentifier
          Identifier("Matcher")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("static")
      LANGLE("<")
      Identifier("T")
      RANGLE(">")
      Identifier("Matcher")
      LANGLE("<")
      Identifier("java")
      DOT(".")
      Identifier("lang")
      DOT(".")
      Identifier("Iterable")
      LANGLE("<")
      QUEST_WS("? ")
      SUPER("super")
      Identifier("T")
      RANGLE(">")
      RANGLE(">")
      Identifier("hasItem")
      LPAREN("(")
      Identifier("T")
      Identifier("item")
      RPAREN(")")
      LCURL("{")
    semis
      NL("\n")
  RETURN("return")
  NullLiteral("null")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("List")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("String")
                        RANGLE(">")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              simpleIdentifier
                                                Identifier("Assert")
                                            postfixUnarySuffix
                                              navigationSuffix
                                                memberAccessOperator
                                                  DOT(".")
                                                simpleIdentifier
                                                  Identifier("assertThat")
                                            postfixUnarySuffix
                                              callSuffix
                                                valueArguments
                                                  LPAREN("(")
                                                  valueArgument
                                                    expression
                                                      disjunction
                                                        conjunction
                                                          equality
                                                            comparison
                                                              infixOperation
                                                                elvisExpression
                                                                  infixFunctionCall
                                                                    rangeExpression
                                                                      additiveExpression
                                                                        multiplicativeExpression
                                                                          asExpression
                                                                            prefixUnaryExpression
                                                                              postfixUnaryExpression
                                                                                primaryExpression
                                                                                  simpleIdentifier
                                                                                    Identifier("x")
                                                  COMMA(",")
                                                  valueArgument
                                                    expression
                                                      disjunction
                                                        conjunction
                                                          equality
                                                            comparison
                                                              infixOperation
                                                                elvisExpression
                                                                  infixFunctionCall
                                                                    rangeExpression
                                                                      additiveExpression
                                                                        multiplicativeExpression
                                                                          asExpression
                                                                            prefixUnaryExpression
                                                                              postfixUnaryExpression
                                                                                primaryExpression
                                                                                  simpleIdentifier
                                                                                    Identifier("Matcher")
                                                                                postfixUnarySuffix
                                                                                  navigationSuffix
                                                                                    memberAccessOperator
                                                                                      DOT(".")
                                                                                    simpleIdentifier
                                                                                      Identifier("hasItem")
                                                                                postfixUnarySuffix
                                                                                  callSuffix
                                                                                    valueArguments
                                                                                      LPAREN("(")
                                                                                      valueArgument
                                                                                        expression
                                                                                          disjunction
                                                                                            conjunction
                                                                                              equality
                                                                                                comparison
                                                                                                  infixOperation
                                                                                                    elvisExpression
                                                                                                      infixFunctionCall
                                                                                                        rangeExpression
                                                                                                          additiveExpression
                                                                                                            multiplicativeExpression
                                                                                                              asExpression
                                                                                                                prefixUnaryExpression
                                                                                                                  postfixUnaryExpression
                                                                                                                    primaryExpression
                                                                                                                      stringLiteral
                                                                                                                        lineStringLiteral
                                                                                                                          QUOTE_OPEN(""")
                                                                                                                          lineStringContent
                                                                                                                            LineStrText("abc")
                                                                                                                          QUOTE_CLOSE(""")
                                                                                      RPAREN(")")
                                                  RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
