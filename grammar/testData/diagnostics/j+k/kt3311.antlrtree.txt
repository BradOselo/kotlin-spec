File: kt3311.kt - 9f29adffb2912dd93ed7d5bcf7725eeb
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            visibilityModifier
              PUBLIC("public")
        CLASS("class")
        simpleIdentifier
          Identifier("Super")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("boolean")
      Identifier("foo")
    semis
      SEMICOLON(";")
      NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("boolean")
      Identifier("bar")
    semis
      SEMICOLON(";")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("void")
      Identifier("setFoo")
      LPAREN("(")
      Identifier("boolean")
      Identifier("foo")
      RPAREN(")")
      LCURL("{")
    semis
      NL("\n")
  THIS("this")
  DOT(".")
  Identifier("foo")
  ASSIGNMENT("=")
  Identifier("foo")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            visibilityModifier
              PUBLIC("public")
        CLASS("class")
        simpleIdentifier
          Identifier("Sub")
        COLON(":")
        delegationSpecifiers
          annotatedDelegationSpecifier
            delegationSpecifier
              constructorInvocation
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Super")
                valueArguments
                  LPAREN("(")
                  RPAREN(")")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("main")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("x")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  simpleIdentifier
                                                    Identifier("Sub")
                                                postfixUnarySuffix
                                                  callSuffix
                                                    valueArguments
                                                      LPAREN("(")
                                                      RPAREN(")")
              semis
                NL("\n")
              statement
                assignment
                  directlyAssignableExpression
                    postfixUnaryExpression
                      primaryExpression
                        simpleIdentifier
                          Identifier("x")
                    assignableSuffix
                      navigationSuffix
                        memberAccessOperator
                          DOT(".")
                        simpleIdentifier
                          Identifier("foo")
                  ASSIGNMENT("=")
                  expression
                    disjunction
                      conjunction
                        equality
                          comparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                literalConstant
                                                  BooleanLiteral("true")
              semis
                NL("\n")
              statement
                assignment
                  directlyAssignableExpression
                    postfixUnaryExpression
                      primaryExpression
                        simpleIdentifier
                          Identifier("x")
                    assignableSuffix
                      navigationSuffix
                        memberAccessOperator
                          DOT(".")
                        simpleIdentifier
                          Identifier("bar")
                  ASSIGNMENT("=")
                  expression
                    disjunction
                      conjunction
                        equality
                          comparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                literalConstant
                                                  BooleanLiteral("true")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
