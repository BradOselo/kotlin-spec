File: withDefaultMethods.kt - 1d04d2d379e6b488bcfa2bfcbb9b2320
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            visibilityModifier
              PUBLIC("public")
        INTERFACE("interface")
        simpleIdentifier
          Identifier("ALambda")
  LCURL("{")
  NL("\n")
  Identifier("ALambda")
  Identifier("curried")
  LPAREN("(")
  RPAREN(")")
  SEMICOLON(";")
  NL("\n")
  NL("\n")
  Identifier("ALambda")
  Identifier("tupled")
  LPAREN("(")
  RPAREN(")")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            visibilityModifier
              PUBLIC("public")
        INTERFACE("interface")
        simpleIdentifier
          Identifier("ACheckedFunction0")
  Identifier("extends")
  Identifier("ALambda")
  LCURL("{")
  NL("\n")
  NL("\n")
  Identifier("Integer")
  Identifier("apply")
  LPAREN("(")
  RPAREN(")")
  SEMICOLON(";")
  NL("\n")
  NL("\n")
  Identifier("default")
  Identifier("ALambda")
  Identifier("curried")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  RETURN("return")
  NullLiteral("null")
  SEMICOLON(";")
  RCURL("}")
  NL("\n")
  Identifier("default")
  Identifier("ALambda")
  Identifier("tupled")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  RETURN("return")
  NullLiteral("null")
  SEMICOLON(";")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              simpleIdentifier
                                                Identifier("ACheckedFunction0")
                                            postfixUnarySuffix
                                              callSuffix
                                                annotatedLambda
                                                  lambdaLiteral
                                                    LCURL("{")
                                                    statements
                                                      statement
                                                        expression
                                                          disjunction
                                                            conjunction
                                                              equality
                                                                comparison
                                                                  infixOperation
                                                                    elvisExpression
                                                                      infixFunctionCall
                                                                        rangeExpression
                                                                          additiveExpression
                                                                            multiplicativeExpression
                                                                              asExpression
                                                                                prefixUnaryExpression
                                                                                  postfixUnaryExpression
                                                                                    primaryExpression
                                                                                      literalConstant
                                                                                        IntegerLiteral("2")
                                                    RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
