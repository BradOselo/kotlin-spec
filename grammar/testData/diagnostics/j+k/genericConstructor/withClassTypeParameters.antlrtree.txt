File: withClassTypeParameters.kt - ea582b4b15d1226e45ce17f37adc9dc0
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            visibilityModifier
              PUBLIC("public")
        CLASS("class")
        simpleIdentifier
          Identifier("A")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("E")
          RANGLE(">")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      LANGLE("<")
      Identifier("T")
      RANGLE(">")
      Identifier("A")
      LPAREN("(")
      Identifier("T")
      Identifier("x")
      COMMA(",")
      Identifier("java")
      DOT(".")
      Identifier("util")
      DOT(".")
      Identifier("List")
      LANGLE("<")
      Identifier("T")
      RANGLE(">")
      Identifier("y")
      RPAREN(")")
      LCURL("{")
      RCURL("}")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("List")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Int")
                        RANGLE(">")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("y")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("List")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("String")
                        RANGLE(">")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("z")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("A")
                  typeArguments
                    LANGLE("<")
                    typeProjection
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Double")
                    RANGLE(">")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("A")
                                    postfixUnarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          valueArgument
                                            expression
                                              disjunction
                                                conjunction
                                                  equality
                                                    comparison
                                                      infixOperation
                                                        elvisExpression
                                                          infixFunctionCall
                                                            rangeExpression
                                                              additiveExpression
                                                                multiplicativeExpression
                                                                  asExpression
                                                                    prefixUnaryExpression
                                                                      postfixUnaryExpression
                                                                        primaryExpression
                                                                          stringLiteral
                                                                            lineStringLiteral
                                                                              QUOTE_OPEN(""")
                                                                              QUOTE_CLOSE(""")
                                          COMMA(",")
                                          valueArgument
                                            expression
                                              disjunction
                                                conjunction
                                                  equality
                                                    comparison
                                                      infixOperation
                                                        elvisExpression
                                                          infixFunctionCall
                                                            rangeExpression
                                                              additiveExpression
                                                                multiplicativeExpression
                                                                  asExpression
                                                                    prefixUnaryExpression
                                                                      postfixUnaryExpression
                                                                        primaryExpression
                                                                          simpleIdentifier
                                                                            Identifier("x")
                                          RPAREN(")")
    semis
      NL("\n")
  Identifier("z")
  ASSIGNMENT("=")
  Identifier("A")
  LPAREN("(")
  QUOTE_OPEN(""")
  QUOTE_CLOSE(""")
  COMMA(",")
  Identifier("y")
  RPAREN(")")
  NL("\n")
  NL("\n")
  Identifier("z")
  ASSIGNMENT("=")
  Identifier("A")
  LANGLE("<")
  Identifier("Double")
  COMMA(",")
  Identifier("String")
  RANGLE(">")
  LPAREN("(")
  QUOTE_OPEN(""")
  QUOTE_CLOSE(""")
  COMMA(",")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("TYPE_MISMATCH")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("x")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  RPAREN(")")
  NL("\n")
  NL("\n")
  Identifier("z")
  ASSIGNMENT("=")
  Identifier("A")
  LANGLE("<")
  Identifier("Double")
  COMMA(",")
  Identifier("Any")
  RANGLE(">")
  LPAREN("(")
  QUOTE_OPEN(""")
  QUOTE_CLOSE(""")
  COMMA(",")
  Identifier("x")
  RPAREN(")")
  NL("\n")
  Identifier("z")
  ASSIGNMENT("=")
  Identifier("A")
  LANGLE("<")
  Identifier("Double")
  COMMA(",")
  Identifier("String")
  RANGLE(">")
  LPAREN("(")
  QUOTE_OPEN(""")
  QUOTE_CLOSE(""")
  COMMA(",")
  Identifier("y")
  RPAREN(")")
  NL("\n")
  Identifier("z")
  ASSIGNMENT("=")
  Identifier("A")
  LANGLE("<")
  Identifier("Double")
  COMMA(",")
  Identifier("CharSequence")
  RANGLE(">")
  LPAREN("(")
  QUOTE_OPEN(""")
  QUOTE_CLOSE(""")
  COMMA(",")
  Identifier("y")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  EOF("<EOF>")
