File: nullForOptionalOrElse.kt - eea3a9d459c382d4c84a45d02a2ad171
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
    importHeader
      IMPORT("import")
      identifier
        simpleIdentifier
          Identifier("java")
        DOT(".")
        simpleIdentifier
          Identifier("util")
      DOT(".")
      MULT("*")
      semi
        NL("\n")
    importHeader
      IMPORT("import")
      identifier
        simpleIdentifier
          Identifier("java")
        DOT(".")
        simpleIdentifier
          Identifier("util")
        DOT(".")
        simpleIdentifier
          Identifier("stream")
        DOT(".")
        simpleIdentifier
          Identifier("Stream")
      semi
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        receiverType
          nullableType
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Stream")
                  typeArguments
                    LANGLE("<")
                    typeProjection
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("T")
                    RANGLE(">")
            quest
              QUEST_NO_WS("?")
        DOT(".")
        simpleIdentifier
          Identifier("getIfSingle")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          NL("\n")
          expression
            expression
              thisExpression
                THIS("this")
            unarySuffix
              navigationSuffix
                memberAccessOperator
                  safeNav
                    QUEST_NO_WS("?")
                    DOT(".")
                simpleIdentifier
                  Identifier("map")
            unarySuffix
              callSuffix
                annotatedLambda
                  lambdaLiteral
                    LCURL("{")
                    statements
                      statement
                        expression
                          expression
                            simpleIdentifier
                              Identifier("Optional")
                          unarySuffix
                            navigationSuffix
                              memberAccessOperator
                                DOT(".")
                              simpleIdentifier
                                Identifier("ofNullable")
                          unarySuffix
                            callSuffix
                              valueArguments
                                LPAREN("(")
                                valueArgument
                                  expression
                                    simpleIdentifier
                                      Identifier("it")
                                RPAREN(")")
                    RCURL("}")
            unarySuffix
              navigationSuffix
                NL("\n")
                memberAccessOperator
                  safeNav
                    QUEST_NO_WS("?")
                    DOT(".")
                simpleIdentifier
                  Identifier("reduce")
            unarySuffix
              callSuffix
                valueArguments
                  LPAREN("(")
                  valueArgument
                    expression
                      expression
                        simpleIdentifier
                          Identifier("Optional")
                      unarySuffix
                        navigationSuffix
                          memberAccessOperator
                            DOT(".")
                          simpleIdentifier
                            Identifier("empty")
                      unarySuffix
                        callSuffix
                          valueArguments
                            LPAREN("(")
                            RPAREN(")")
                  RPAREN(")")
                annotatedLambda
                  lambdaLiteral
                    LCURL("{")
                    lambdaParameters
                      lambdaParameter
                        variableDeclaration
                          simpleIdentifier
                            Identifier("_")
                      COMMA(",")
                      lambdaParameter
                        variableDeclaration
                          simpleIdentifier
                            Identifier("_")
                    ARROW("->")
                    statements
                      statement
                        expression
                          expression
                            simpleIdentifier
                              Identifier("Optional")
                          unarySuffix
                            navigationSuffix
                              memberAccessOperator
                                DOT(".")
                              simpleIdentifier
                                Identifier("empty")
                          unarySuffix
                            callSuffix
                              valueArguments
                                LPAREN("(")
                                RPAREN(")")
                    RCURL("}")
            unarySuffix
              navigationSuffix
                NL("\n")
                memberAccessOperator
                  safeNav
                    QUEST_NO_WS("?")
                    DOT(".")
                simpleIdentifier
                  Identifier("orElse")
            unarySuffix
              callSuffix
                valueArguments
                  LPAREN("(")
                  valueArgument
                    expression
                      literalConstant
                        NullLiteral("null")
                  RPAREN(")")
    semis
      NL("\n")
  EOF("<EOF>")
