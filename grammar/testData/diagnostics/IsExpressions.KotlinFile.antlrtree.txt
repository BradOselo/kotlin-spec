File: IsExpressions.KotlinFile.kt - 921b40cab3833d2806f514eb57672a7f
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  IF("if")
  LPAREN("(")
  IntegerLiteral("1")
  IS("is")
  Identifier("Int")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  IF("if")
  LPAREN("(")
  IntegerLiteral("1")
  IS("is")
  Identifier("Boolean")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  Identifier("A")
  DOT(".")
  Identifier("create")
  LPAREN("(")
  RPAREN(")")
  IS("is")
  Identifier("A")
  NL("\n")
  Identifier("A")
  DOT(".")
  Identifier("create")
  LPAREN("(")
  RPAREN(")")
  IS("is")
  Identifier("A")
  QUEST_NO_WS("?")
  NL("\n")
  NL("\n")
  Identifier("unresolved")
  IS("is")
  Identifier("A")
  NL("\n")
  Identifier("unresolved")
  IS("is")
  Identifier("A")
  QUEST_NO_WS("?")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("x")
        ASSIGNMENT("=")
        expression
          expression
            simpleIdentifier
              Identifier("foo")
          unarySuffix
            callSuffix
              valueArguments
                LPAREN("(")
                RPAREN(")")
    semis
      NL("\n")
  Identifier("x")
  AS("as")
  Identifier("String")
  NL("\n")
  Identifier("x")
  IS("is")
  Identifier("String")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Any")
        functionBody
          ASSIGNMENT("=")
          expression
            stringLiteral
              lineStringLiteral
                QUOTE_OPEN(""")
                QUOTE_CLOSE(""")
    semis
      NL("\n")
      NL("\n")
  EOF("<EOF>")
