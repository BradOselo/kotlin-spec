File: visibleClassVsQualifiedClass.kt
  NL("\n")
  NL("\n")
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("a")
    semi
      NL("\n")
      NL("\n")
  importList
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("b")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("a_b")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      statements
                      RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
      NL("\n")
  PACKAGE("package")
  Identifier("some")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("a")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                classDeclaration
                  CLASS("class")
                  simpleIdentifier
                    Identifier("b")
                  classBody
                    LCURL("{")
                    NL("\n")
                    classMemberDeclarations
                      classMemberDeclaration
                        declaration
                          functionDeclaration
                            FUN("fun")
                            simpleIdentifier
                              Identifier("some_ab")
                            functionValueParameters
                              LPAREN("(")
                              RPAREN(")")
                            functionBody
                              block
                                LCURL("{")
                                statements
                                RCURL("}")
                      semis
                        NL("\n")
                    RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
      NL("\n")
  PACKAGE("package")
  Identifier("other")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("a")
        classBody
          LCURL("{")
          classMemberDeclarations
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("a_")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("a")
          DOT(".")
          LANGLE("<")
          EXCL_NO_WS("!")
          Identifier("UNRESOLVED_REFERENCE")
          EXCL_NO_WS("!")
          RANGLE(">")
          Identifier("b")
          LANGLE("<")
          EXCL_NO_WS("!")
          RANGLE(">")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_ELEMENT_WITH_ERROR_TYPE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("a_")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_ELEMENT_WITH_ERROR_TYPE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("a_b")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  NL("\n")
  VAL("val")
  Identifier("a_2")
  ASSIGNMENT("=")
  Identifier("a")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNRESOLVED_REFERENCE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("b")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_ELEMENT_WITH_ERROR_TYPE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("a_2")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_ELEMENT_WITH_ERROR_TYPE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("a_b")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_ELEMENT_WITH_ERROR_TYPE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("a_2")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_ELEMENT_WITH_ERROR_TYPE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("some_ab")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_ELEMENT_WITH_ERROR_TYPE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("a_2")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("DEBUG_INFO_ELEMENT_WITH_ERROR_TYPE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("a_")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  PACKAGE("package")
  Identifier("other2")
  NL("\n")
  NL("\n")
  CLASS("class")
  Identifier("a")
  LCURL("{")
  NL("\n")
  CLASS("class")
  Identifier("b")
  LCURL("{")
  NL("\n")
  FUN("fun")
  Identifier("other2_ab")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  FUN("fun")
  Identifier("test")
  LPAREN("(")
  Identifier("_ab")
  COLON(":")
  Identifier("a")
  DOT(".")
  Identifier("b")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("_ab")
  DOT(".")
  Identifier("other2_ab")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  NL("\n")
  VAL("val")
  Identifier("_ab2")
  ASSIGNMENT("=")
  Identifier("a")
  DOT(".")
  Identifier("b")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  Identifier("_ab2")
  DOT(".")
  Identifier("other2_ab")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  PACKAGE("package")
  Identifier("some")
  NL("\n")
  NL("\n")
  FUN("fun")
  Identifier("test")
  LPAREN("(")
  Identifier("_ab")
  COLON(":")
  Identifier("a")
  DOT(".")
  Identifier("b")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("_ab")
  DOT(".")
  Identifier("some_ab")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  NL("\n")
  VAL("val")
  Identifier("_ab2")
  ASSIGNMENT("=")
  Identifier("a")
  DOT(".")
  Identifier("b")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  Identifier("_ab2")
  DOT(".")
  Identifier("some_ab")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  RCURL("}")
