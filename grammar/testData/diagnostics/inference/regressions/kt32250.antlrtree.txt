File: kt32250.kt - 62a306d2e8795823c6112e52bca39897
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("I")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("foo")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            classModifier
              DATA("data")
        CLASS("class")
        simpleIdentifier
          Identifier("Pair")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("X")
          COMMA(",")
          typeParameter
            simpleIdentifier
              Identifier("Y")
          RANGLE(">")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("fst")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("X")
            COMMA(",")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("snd")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Y")
            RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("A")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              simpleIdentifier
                Identifier("f")
              COLON(":")
              type
                nullableType
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("Pair")
                        typeArguments
                          LANGLE("<")
                          typeProjection
                            type
                              typeReference
                                userType
                                  simpleUserType
                                    simpleIdentifier
                                      Identifier("Int")
                          COMMA(",")
                          typeProjection
                            type
                              functionType
                                functionTypeParameters
                                  LPAREN("(")
                                  type
                                    typeReference
                                      userType
                                        simpleUserType
                                          simpleIdentifier
                                            Identifier("I")
                                  RPAREN(")")
                                ARROW("->")
                                type
                                  typeReference
                                    userType
                                      simpleUserType
                                        simpleIdentifier
                                          Identifier("Unit")
                          RANGLE(">")
                  quest
                    QUEST_WS("? ")
              ASSIGNMENT("=")
              expression
                literalConstant
                  NullLiteral("null")
            RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("B")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              simpleIdentifier
                Identifier("f")
              COLON(":")
              type
                nullableType
                  parenthesizedType
                    LPAREN("(")
                    type
                      functionType
                        functionTypeParameters
                          LPAREN("(")
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("I")
                          RPAREN(")")
                        ARROW("->")
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Unit")
                    RPAREN(")")
                  quest
                    QUEST_WS("? ")
              ASSIGNMENT("=")
              expression
                literalConstant
                  NullLiteral("null")
            RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("main")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("cond")
                    ASSIGNMENT("=")
                    expression
                      literalConstant
                        BooleanLiteral("true")
              semis
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("A")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        valueArgument
                          expression
                            ifExpression
                              IF("if")
                              LPAREN("(")
                              expression
                                simpleIdentifier
                                  Identifier("cond")
                              RPAREN(")")
                              controlStructureBody
                                block
                                  LCURL("{")
                                  NL("\n")
                                  statements
                                    statement
                                      expression
                                        expression
                                          simpleIdentifier
                                            Identifier("Pair")
                                        unarySuffix
                                          callSuffix
                                            valueArguments
                                              LPAREN("(")
                                              valueArgument
                                                expression
                                                  literalConstant
                                                    IntegerLiteral("1")
                                              COMMA(",")
                                              valueArgument
                                                expression
                                                  functionLiteral
                                                    lambdaLiteral
                                                      LCURL("{")
                                                      lambdaParameters
                                                        lambdaParameter
                                                          variableDeclaration
                                                            simpleIdentifier
                                                              Identifier("baz")
                                                      ARROW("->")
                                                      statements
                                                        statement
                                                          expression
                                                            expression
                                                              simpleIdentifier
                                                                Identifier("baz")
                                                            unarySuffix
                                                              navigationSuffix
                                                                memberAccessOperator
                                                                  DOT(".")
                                                                simpleIdentifier
                                                                  Identifier("foo")
                                                            unarySuffix
                                                              callSuffix
                                                                valueArguments
                                                                  LPAREN("(")
                                                                  RPAREN(")")
                                                      RCURL("}")
                                              RPAREN(")")
                                    semis
                                      NL("\n")
                                  RCURL("}")
                              ELSE("else")
                              controlStructureBody
                                block
                                  LCURL("{")
                                  NL("\n")
                                  statements
                                    statement
                                      expression
                                        literalConstant
                                          NullLiteral("null")
                                    semis
                                      NL("\n")
                                  RCURL("}")
                        RPAREN(")")
              semis
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("B")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        valueArgument
                          expression
                            ifExpression
                              IF("if")
                              LPAREN("(")
                              expression
                                simpleIdentifier
                                  Identifier("cond")
                              RPAREN(")")
                              controlStructureBody
                                block
                                  LCURL("{")
                                  NL("\n")
                                  statements
                                    statement
                                      expression
                                        functionLiteral
                                          lambdaLiteral
                                            LCURL("{")
                                            lambdaParameters
                                              lambdaParameter
                                                variableDeclaration
                                                  simpleIdentifier
                                                    Identifier("baz")
                                            ARROW("->")
                                            statements
                                              statement
                                                expression
                                                  expression
                                                    simpleIdentifier
                                                      Identifier("baz")
                                                  unarySuffix
                                                    navigationSuffix
                                                      memberAccessOperator
                                                        DOT(".")
                                                      simpleIdentifier
                                                        Identifier("foo")
                                                  unarySuffix
                                                    callSuffix
                                                      valueArguments
                                                        LPAREN("(")
                                                        RPAREN(")")
                                            RCURL("}")
                                    semis
                                      NL("\n")
                                  RCURL("}")
                              ELSE("else")
                              controlStructureBody
                                block
                                  LCURL("{")
                                  NL("\n")
                                  statements
                                    statement
                                      expression
                                        literalConstant
                                          NullLiteral("null")
                                    semis
                                      NL("\n")
                                  RCURL("}")
                        RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
