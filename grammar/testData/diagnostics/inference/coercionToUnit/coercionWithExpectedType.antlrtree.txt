File: coercionWithExpectedType.kt - 30fce24454b58f2e0409ccbead974d14
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("materialize")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("T")
        functionBody
          ASSIGNMENT("=")
          expression
            expression
              simpleIdentifier
                Identifier("TODO")
            unarySuffix
              callSuffix
                valueArguments
                  LPAREN("(")
                  RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("a")
          COLON(":")
          type
            functionType
              functionTypeParameters
                LPAREN("(")
                RPAREN(")")
              ARROW("->")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Unit")
        ASSIGNMENT("=")
        expression
          unaryPrefix
            label
              simpleIdentifier
                Identifier("l")
              AT_NO_WS("@")
          expression
            functionLiteral
              lambdaLiteral
                LCURL("{")
                NL("\n")
                NL("\n")
                statements
                  statement
                    expression
                      ifExpression
                        IF("if")
                        LPAREN("(")
                        expression
                          literalConstant
                            BooleanLiteral("true")
                        RPAREN(")")
                        controlStructureBody
                          statement
                            expression
                              jumpExpression
                                RETURN_AT("return@l")
                                expression
                                  expression
                                    simpleIdentifier
                                      Identifier("materialize")
                                  unarySuffix
                                    callSuffix
                                      valueArguments
                                        LPAREN("(")
                                        RPAREN(")")
                  semis
                    NL("\n")
                    NL("\n")
                    NL("\n")
                    NL("\n")
                  statement
                    expression
                      ifExpression
                        IF("if")
                        LPAREN("(")
                        expression
                          literalConstant
                            BooleanLiteral("true")
                        RPAREN(")")
                        controlStructureBody
                          statement
                            expression
                              literalConstant
                                IntegerLiteral("42")
                  semis
                    NL("\n")
                RCURL("}")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("b")
          COLON(":")
          type
            functionType
              functionTypeParameters
                LPAREN("(")
                RPAREN(")")
              ARROW("->")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Unit")
        ASSIGNMENT("=")
        expression
          unaryPrefix
            label
              simpleIdentifier
                Identifier("l")
              AT_NO_WS("@")
          expression
            functionLiteral
              lambdaLiteral
                LCURL("{")
                NL("\n")
                NL("\n")
                statements
                  statement
                    expression
                      ifExpression
                        IF("if")
                        LPAREN("(")
                        expression
                          literalConstant
                            BooleanLiteral("true")
                        RPAREN(")")
                        controlStructureBody
                          statement
                            expression
                              jumpExpression
                                RETURN_AT("return@l")
                                expression
                                  stringLiteral
                                    lineStringLiteral
                                      QUOTE_OPEN(""")
                                      lineStringContent
                                        LineStrText("hello")
                                      QUOTE_CLOSE(""")
                  semis
                    NL("\n")
                    NL("\n")
                    NL("\n")
                  statement
                    expression
                      stringLiteral
                        lineStringLiteral
                          QUOTE_OPEN(""")
                          lineStringContent
                            LineStrText("hello")
                          QUOTE_CLOSE(""")
                  semis
                    NL("\n")
                RCURL("}")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("c")
          COLON(":")
          type
            functionType
              functionTypeParameters
                LPAREN("(")
                RPAREN(")")
              ARROW("->")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Unit")
        ASSIGNMENT("=")
        expression
          functionLiteral
            lambdaLiteral
              LCURL("{")
              NL("\n")
              NL("\n")
              NL("\n")
              statements
                statement
                  expression
                    expression
                      simpleIdentifier
                        Identifier("materialize")
                    unarySuffix
                      callSuffix
                        valueArguments
                          LPAREN("(")
                          RPAREN(")")
                semis
                  NL("\n")
              RCURL("}")
        NL("\n")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
