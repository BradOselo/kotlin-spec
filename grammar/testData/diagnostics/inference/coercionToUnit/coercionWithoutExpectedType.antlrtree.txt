File: coercionWithoutExpectedType.kt - 3f0ebddbbaa7c17a179d209198ca300e
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("materialize")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("T")
        functionBody
          ASSIGNMENT("=")
          expression
            expression
              simpleIdentifier
                Identifier("TODO")
            unarySuffix
              callSuffix
                valueArguments
                  LPAREN("(")
                  RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("implicitCoercion")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("a")
                    ASSIGNMENT("=")
                    expression
                      functionLiteral
                        lambdaLiteral
                          LCURL("{")
                          NL("\n")
                          NL("\n")
                          statements
                            statement
                              expression
                                ifExpression
                                  IF("if")
                                  LPAREN("(")
                                  expression
                                    literalConstant
                                      BooleanLiteral("true")
                                  RPAREN(")")
                                  controlStructureBody
                                    statement
                                      expression
                                        literalConstant
                                          IntegerLiteral("42")
                            semis
                              NL("\n")
                          RCURL("}")
                    NL("\n")
              semis
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("b")
                    ASSIGNMENT("=")
                    expression
                      unaryPrefix
                        label
                          simpleIdentifier
                            Identifier("l")
                          AT_NO_WS("@")
                      expression
                        functionLiteral
                          lambdaLiteral
                            LCURL("{")
                            NL("\n")
                            statements
                              statement
                                expression
                                  jumpExpression
                                    RETURN_AT("return@l")
                              semis
                                NL("\n")
                            RCURL("}")
                    NL("\n")
              semis
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("c")
                    ASSIGNMENT("=")
                    expression
                      unaryPrefix
                        label
                          simpleIdentifier
                            Identifier("l")
                          AT_NO_WS("@")
                      expression
                        functionLiteral
                          lambdaLiteral
                            LCURL("{")
                            NL("\n")
                            NL("\n")
                            statements
                              statement
                                expression
                                  jumpExpression
                                    RETURN_AT("return@l")
                                    expression
                                      expression
                                        simpleIdentifier
                                          Identifier("materialize")
                                      unarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            RPAREN(")")
                              semis
                                NL("\n")
                            RCURL("}")
                    NL("\n")
            RCURL("}")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
