File: kt31969.kt - 67caa67161e233b866367c75b43b391e
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        CLASS("class")
        simpleIdentifier
          Identifier("View")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("target")
                    ASSIGNMENT("=")
                    expression
                      expression
                        expression
                          expression
                            simpleIdentifier
                              Identifier("foo")
                          unarySuffix
                            typeArguments
                              LANGLE("<")
                              typeProjection
                                type
                                  typeReference
                                    userType
                                      simpleUserType
                                        simpleIdentifier
                                          Identifier("View")
                              RANGLE(">")
                          unarySuffix
                            callSuffix
                              valueArguments
                                LPAREN("(")
                                RPAREN(")")
                        elvis
                          QUEST_NO_WS("?")
                          COLON(":")
                        expression
                          expression
                            simpleIdentifier
                              Identifier("foo")
                          unarySuffix
                            callSuffix
                              valueArguments
                                LPAREN("(")
                                RPAREN(")")
                      elvis
                        QUEST_NO_WS("?")
                        COLON(":")
                      expression
                        expression
                          simpleIdentifier
                            Identifier("run")
                        unarySuffix
                          callSuffix
                            annotatedLambda
                              lambdaLiteral
                                LCURL("{")
                                statements
                                RCURL("}")
                    NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
            COLON(":")
            type
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("View")
          RANGLE(">")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          nullableType
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("T")
            quest
              QUEST_WS("? ")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      literalConstant
                        NullLiteral("null")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
