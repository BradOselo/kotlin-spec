File: lambdaArgumentWithLabel.kt - a60754e536b740840dd5e80f135ca575
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("x1")
          COLON(":")
          type
            functionType
              functionTypeParameters
                LPAREN("(")
                type
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("String")
                RPAREN(")")
              ARROW("->")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Unit")
        ASSIGNMENT("=")
        expression
          expression
            simpleIdentifier
              Identifier("run")
          unarySuffix
            callSuffix
              annotatedLambda
                lambdaLiteral
                  LCURL("{")
                  NL("\n")
                  statements
                    statement
                      label
                        simpleIdentifier
                          Identifier("lambda")
                        AT_NO_WS("@")
                      expression
                        functionLiteral
                          lambdaLiteral
                            LCURL("{")
                            lambdaParameters
                              lambdaParameter
                                variableDeclaration
                                  simpleIdentifier
                                    Identifier("foo")
                            ARROW("->")
                            NL("\n")
                            statements
                              statement
                                expression
                                  expression
                                    simpleIdentifier
                                      Identifier("bar")
                                  unarySuffix
                                    callSuffix
                                      valueArguments
                                        LPAREN("(")
                                        valueArgument
                                          expression
                                            simpleIdentifier
                                              Identifier("foo")
                                        RPAREN(")")
                              semis
                                NL("\n")
                            RCURL("}")
                    semis
                      NL("\n")
                  RCURL("}")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("x2")
          COLON(":")
          type
            functionType
              functionTypeParameters
                LPAREN("(")
                type
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("String")
                RPAREN(")")
              ARROW("->")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Unit")
        ASSIGNMENT("=")
        expression
          expression
            simpleIdentifier
              Identifier("run")
          unarySuffix
            callSuffix
              annotatedLambda
                lambdaLiteral
                  LCURL("{")
                  NL("\n")
                  statements
                    statement
                      expression
                        parenthesizedExpression
                          LPAREN("(")
                          expression
                            functionLiteral
                              lambdaLiteral
                                LCURL("{")
                                lambdaParameters
                                  lambdaParameter
                                    variableDeclaration
                                      simpleIdentifier
                                        Identifier("foo")
                                ARROW("->")
                                NL("\n")
                                statements
                                  statement
                                    expression
                                      expression
                                        simpleIdentifier
                                          Identifier("bar")
                                      unarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            valueArgument
                                              expression
                                                simpleIdentifier
                                                  Identifier("foo")
                                            RPAREN(")")
                                  semis
                                    NL("\n")
                                RCURL("}")
                          RPAREN(")")
                    semis
                      NL("\n")
                  RCURL("}")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("x3")
          COLON(":")
          type
            functionType
              functionTypeParameters
                LPAREN("(")
                type
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("String")
                RPAREN(")")
              ARROW("->")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Unit")
        ASSIGNMENT("=")
        expression
          expression
            simpleIdentifier
              Identifier("run")
          unarySuffix
            callSuffix
              annotatedLambda
                lambdaLiteral
                  LCURL("{")
                  NL("\n")
                  statements
                    statement
                      expression
                        parenthesizedExpression
                          LPAREN("(")
                          expression
                            unaryPrefix
                              label
                                simpleIdentifier
                                  Identifier("lambda")
                                AT_NO_WS("@")
                            expression
                              functionLiteral
                                lambdaLiteral
                                  LCURL("{")
                                  lambdaParameters
                                    lambdaParameter
                                      variableDeclaration
                                        simpleIdentifier
                                          Identifier("foo")
                                  ARROW("->")
                                  NL("\n")
                                  statements
                                    statement
                                      expression
                                        expression
                                          simpleIdentifier
                                            Identifier("bar")
                                        unarySuffix
                                          callSuffix
                                            valueArguments
                                              LPAREN("(")
                                              valueArgument
                                                expression
                                                  simpleIdentifier
                                                    Identifier("foo")
                                              RPAREN(")")
                                    semis
                                      NL("\n")
                                  RCURL("}")
                          RPAREN(")")
                    semis
                      NL("\n")
                  RCURL("}")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("x4")
          COLON(":")
          type
            functionType
              functionTypeParameters
                LPAREN("(")
                type
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("String")
                RPAREN(")")
              ARROW("->")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Unit")
        ASSIGNMENT("=")
        expression
          expression
            simpleIdentifier
              Identifier("run")
          unarySuffix
            callSuffix
              annotatedLambda
                lambdaLiteral
                  LCURL("{")
                  NL("\n")
                  statements
                    statement
                      expression
                        jumpExpression
                          RETURN_AT("return@run")
                          expression
                            parenthesizedExpression
                              LPAREN("(")
                              expression
                                unaryPrefix
                                  label
                                    simpleIdentifier
                                      Identifier("lambda")
                                    AT_NO_WS("@")
                                expression
                                  functionLiteral
                                    lambdaLiteral
                                      LCURL("{")
                                      lambdaParameters
                                        lambdaParameter
                                          variableDeclaration
                                            simpleIdentifier
                                              Identifier("foo")
                                      ARROW("->")
                                      NL("\n")
                                      statements
                                        statement
                                          expression
                                            expression
                                              simpleIdentifier
                                                Identifier("bar")
                                            unarySuffix
                                              callSuffix
                                                valueArguments
                                                  LPAREN("(")
                                                  valueArgument
                                                    expression
                                                      simpleIdentifier
                                                        Identifier("foo")
                                                  RPAREN(")")
                                        semis
                                          NL("\n")
                                      RCURL("}")
                              RPAREN(")")
                    semis
                      NL("\n")
                  RCURL("}")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("bar")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("s")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("String")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("R")
          RANGLE(">")
        simpleIdentifier
          Identifier("run")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("block")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("R")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("R")
        functionBody
          ASSIGNMENT("=")
          expression
            expression
              simpleIdentifier
                Identifier("block")
            unarySuffix
              callSuffix
                valueArguments
                  LPAREN("(")
                  RPAREN(")")
    semis
      NL("\n")
  EOF("<EOF>")
