File: possibleCycleOnConstraints.kt - ab0bd260b58da3c4568630cc71882ecb
  NL("\n")
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("a")
    semi
      NL("\n")
      NL("\n")
  importList
    importHeader
      IMPORT("import")
      identifier
        simpleIdentifier
          Identifier("java")
        DOT(".")
        simpleIdentifier
          Identifier("util")
      DOT(".")
      MULT("*")
      semi
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("g")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("f")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("List")
                          typeArguments
                            LANGLE("<")
                            typeProjection
                              type
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("T")
                            RANGLE(">")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("T")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("x")
                    ASSIGNMENT("=")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("g")
                      unarySuffix
                        callSuffix
                          annotatedLambda
                            lambdaLiteral
                              LCURL("{")
                              statements
                                statement
                                  expression
                                    expression
                                      simpleIdentifier
                                        Identifier("Collections")
                                    unarySuffix
                                      navigationSuffix
                                        memberAccessOperator
                                          DOT(".")
                                        simpleIdentifier
                                          Identifier("emptyList")
                                    unarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          RPAREN(")")
                              RCURL("}")
                    NL("\n")
              semis
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("y")
                    ASSIGNMENT("=")
                    expression
                      expression
                        expression
                          simpleIdentifier
                            Identifier("g")
                        comparisonOperator
                          LANGLE("<")
                        expression
                          simpleIdentifier
                            Identifier("Int")
                      comparisonOperator
                        RANGLE(">")
                      expression
                        functionLiteral
                          lambdaLiteral
                            LCURL("{")
                            statements
                              statement
                                expression
                                  expression
                                    simpleIdentifier
                                      Identifier("Collections")
                                  unarySuffix
                                    navigationSuffix
                                      memberAccessOperator
                                        DOT(".")
                                      simpleIdentifier
                                        Identifier("emptyList")
                                  unarySuffix
                                    callSuffix
                                      valueArguments
                                        LPAREN("(")
                                        RPAREN(")")
                            RCURL("}")
              semis
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("z")
                      COLON(":")
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("List")
                              typeArguments
                                LANGLE("<")
                                typeProjection
                                  type
                                    typeReference
                                      userType
                                        simpleUserType
                                          simpleIdentifier
                                            Identifier("Int")
                                RANGLE(">")
                    ASSIGNMENT("=")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("g")
                      unarySuffix
                        callSuffix
                          annotatedLambda
                            lambdaLiteral
                              LCURL("{")
                              statements
                                statement
                                  expression
                                    expression
                                      simpleIdentifier
                                        Identifier("Collections")
                                    unarySuffix
                                      navigationSuffix
                                        memberAccessOperator
                                          DOT(".")
                                        simpleIdentifier
                                          Identifier("emptyList")
                                    unarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          RPAREN(")")
                              RCURL("}")
                    NL("\n")
            RCURL("}")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
