File: inferInFunctionLiteralsWithReturn.kt - 3c9bff351f88c5ae6b5feda62f1945b5
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("n")
    semi
      NL("\n")
      NL("\n")
      NL("\n")
  importList
    importHeader
      IMPORT("import")
      identifier
        simpleIdentifier
          Identifier("java")
        DOT(".")
        simpleIdentifier
          Identifier("util")
      DOT(".")
      MULT("*")
      semi
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("expected")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("t")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("T")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("f")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("T")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("T")
        functionBody
          ASSIGNMENT("=")
          expression
            simpleIdentifier
              Identifier("t")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("arrayList")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("ArrayList")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Int")
                        RANGLE(">")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("list")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("List")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Int")
                        RANGLE(">")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("t")
                    ASSIGNMENT("=")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("expected")
                      unarySuffix
                        callSuffix
                          valueArguments
                            LPAREN("(")
                            valueArgument
                              expression
                                simpleIdentifier
                                  Identifier("arrayList")
                            COMMA(",")
                            valueArgument
                              expression
                                unaryPrefix
                                  label
                                    simpleIdentifier
                                      Identifier("l")
                                    AT_POST_WS("@ ")
                                expression
                                  functionLiteral
                                    lambdaLiteral
                                      LCURL("{")
                                      statements
                                        statement
                                          expression
                                            jumpExpression
                                              RETURN_AT("return@l")
                                              expression
                                                expression
                                                  simpleIdentifier
                                                    Identifier("list")
                                                unarySuffix
                                                  navigationSuffix
                                                    memberAccessOperator
                                                      DOT(".")
                                                    simpleIdentifier
                                                      Identifier("reverse")
                                                unarySuffix
                                                  callSuffix
                                                    valueArguments
                                                      LPAREN("(")
                                                      RPAREN(")")
                                      RCURL("}")
                            RPAREN(")")
                    NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        receiverType
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("List")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                  RANGLE(">")
        DOT(".")
        simpleIdentifier
          Identifier("reverse")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("List")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                  RANGLE(">")
        functionBody
          ASSIGNMENT("=")
          expression
            thisExpression
              THIS("this")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
