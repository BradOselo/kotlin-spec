File: lambdaReturnArgumentCall.kt - 5db96460a44b55f7118b962d7ab0ba30
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("First")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("Second")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("A")
        COLON(":")
        delegationSpecifiers
          annotatedDelegationSpecifier
            delegationSpecifier
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("First")
          COMMA(",")
          annotatedDelegationSpecifier
            delegationSpecifier
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Second")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("B")
        COLON(":")
        delegationSpecifiers
          annotatedDelegationSpecifier
            delegationSpecifier
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("First")
          COMMA(",")
          annotatedDelegationSpecifier
            delegationSpecifier
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Second")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("S")
          RANGLE(">")
        simpleIdentifier
          Identifier("intersect")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameterModifiers
              parameterModifier
                VARARG("vararg")
            parameter
              simpleIdentifier
                Identifier("elements")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("S")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("S")
        functionBody
          ASSIGNMENT("=")
          expression
            expression
              simpleIdentifier
                Identifier("TODO")
            unarySuffix
              callSuffix
                valueArguments
                  LPAREN("(")
                  RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("runIntersect")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("arg")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("A")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("arg2")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("A")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            expression
              simpleIdentifier
                Identifier("run")
            unarySuffix
              callSuffix
                annotatedLambda
                  lambdaLiteral
                    LCURL("{")
                    NL("\n")
                    statements
                      statement
                        expression
                          ifExpression
                            IF("if")
                            LPAREN("(")
                            expression
                              expression
                                simpleIdentifier
                                  Identifier("arg")
                              isOperator
                                NOT_IS("!is ")
                              type
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("B")
                            RPAREN(")")
                            controlStructureBody
                              statement
                                expression
                                  jumpExpression
                                    THROW("throw")
                                    expression
                                      expression
                                        simpleIdentifier
                                          Identifier("Exception")
                                      unarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            RPAREN(")")
                      semis
                        NL("\n")
                      statement
                        expression
                          ifExpression
                            IF("if")
                            LPAREN("(")
                            expression
                              expression
                                simpleIdentifier
                                  Identifier("arg2")
                              isOperator
                                NOT_IS("!is ")
                              type
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("B")
                            RPAREN(")")
                            controlStructureBody
                              statement
                                expression
                                  jumpExpression
                                    THROW("throw")
                                    expression
                                      expression
                                        simpleIdentifier
                                          Identifier("Exception")
                                      unarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            RPAREN(")")
                      semis
                        NL("\n")
                      statement
                        expression
                          expression
                            simpleIdentifier
                              Identifier("intersect")
                          unarySuffix
                            callSuffix
                              valueArguments
                                LPAREN("(")
                                valueArgument
                                  expression
                                    simpleIdentifier
                                      Identifier("arg")
                                COMMA(",")
                                valueArgument
                                  expression
                                    simpleIdentifier
                                      Identifier("arg2")
                                RPAREN(")")
                      semis
                        NL("\n")
                    RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("arg")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("A")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("runIntersect")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        valueArgument
                          expression
                            simpleIdentifier
                              Identifier("arg")
                        COMMA(",")
                        valueArgument
                          expression
                            simpleIdentifier
                              Identifier("arg")
                        RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
