File: abstractDelegatedProperty.kt - 87537f3adbaffc9f3e671f60d1de17ff
  NL("\n")
  NL("\n")
  packageHeader
  importList
    importHeader
      IMPORT("import")
      identifier
        simpleIdentifier
          Identifier("kotlin")
        DOT(".")
        simpleIdentifier
          Identifier("reflect")
        DOT(".")
        simpleIdentifier
          Identifier("KProperty")
      semi
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            inheritanceModifier
              ABSTRACT("abstract")
        CLASS("class")
        simpleIdentifier
          Identifier("A")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                propertyDeclaration
                  modifiers
                    modifier
                      inheritanceModifier
                        ABSTRACT("abstract")
                  VAL("val")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("a")
                    COLON(":")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Int")
                  propertyDelegate
                    BY("by")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("Delegate")
                      unarySuffix
                        callSuffix
                          valueArguments
                            LPAREN("(")
                            RPAREN(")")
                  NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Delegate")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      functionModifier
                        OPERATOR("operator")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("getValue")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("t")
                        COLON(":")
                        type
                          nullableType
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Any")
                            quest
                              QUEST_NO_WS("?")
                    COMMA(",")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("p")
                        COLON(":")
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("KProperty")
                                typeArguments
                                  LANGLE("<")
                                  typeProjection
                                    MULT("*")
                                  RANGLE(">")
                    RPAREN(")")
                  COLON(":")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Int")
                  functionBody
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          expression
                            jumpExpression
                              RETURN("return")
                              expression
                                literalConstant
                                  IntegerLiteral("1")
                        semis
                          NL("\n")
                      RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
