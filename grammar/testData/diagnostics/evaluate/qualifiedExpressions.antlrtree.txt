File: qualifiedExpressions.kt - 4d282b0fdcfa5267c0e0990806e677f4
  NL("\n")
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("example")
      DOT(".")
      simpleIdentifier
        Identifier("ns")
    semi
      NL("\n")
  importList
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("y")
          COLON(":")
          type
            nullableType
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Any")
              quest
                QUEST_WS("? ")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      literalConstant
                                        IntegerLiteral("2")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  PACKAGE("package")
  Identifier("example")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("x")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    IF("if")
                                    LPAREN("(")
        Identifier("example")
        DOT(".")
        Identifier("ns")
        DOT(".")
        Identifier("y")
        IS("is")
        Identifier("Int")
        RPAREN(")")
        LANGLE("<")
        EXCL_NO_WS("!")
        Identifier("DEBUG_INFO_SMARTCAST")
        EXCL_NO_WS("!")
        RANGLE(">")
        Identifier("example")
        DOT(".")
        Identifier("ns")
        DOT(".")
        Identifier("y")
        LANGLE("<")
        EXCL_NO_WS("!")
        RANGLE(">")
        ELSE("else")
        IntegerLiteral("2")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
