File: inferenceForSignedAndUnsignedTypes.kt - db07c57c8547832323be3ea33fe44cf1
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("id")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("T")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("T")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    genericCallLikeComparison
                      infixOperation
                        elvisExpression
                          infixFunctionCall
                            rangeExpression
                              additiveExpression
                                multiplicativeExpression
                                  asExpression
                                    prefixUnaryExpression
                                      postfixUnaryExpression
                                        primaryExpression
                                          simpleIdentifier
                                            Identifier("x")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("K")
          RANGLE(">")
        simpleIdentifier
          Identifier("select")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("K")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("y")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("K")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("K")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    genericCallLikeComparison
                      infixOperation
                        elvisExpression
                          infixFunctionCall
                            rangeExpression
                              additiveExpression
                                multiplicativeExpression
                                  asExpression
                                    prefixUnaryExpression
                                      postfixUnaryExpression
                                        primaryExpression
                                          simpleIdentifier
                                            Identifier("TODO")
                                        postfixUnarySuffix
                                          callSuffix
                                            valueArguments
                                              LPAREN("(")
                                              RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("takeUByte")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("u")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("UByte")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("TYPE_MISMATCH")
  LCURL("{")
  Identifier("NI")
  RCURL("}")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("select")
  LPAREN("(")
  IntegerLiteral("1")
  COMMA(",")
  UnsignedLiteral("1u")
  RPAREN(")")
  Identifier("checkType")
  LCURL("{")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNRESOLVED_REFERENCE_WRONG_RECEIVER")
  LCURL("{")
  Identifier("NI")
  RCURL("}")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("_")
  LANGLE("<")
  Identifier("Comparable")
  LANGLE("<")
  MULT("*")
  RANGLE(">")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  RCURL("}")
  NL("\n")
  Identifier("takeUByte")
  LPAREN("(")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("TYPE_INFERENCE_EXPECTED_TYPE_MISMATCH")
  LCURL("{")
  Identifier("OI")
  RCURL("}")
  COMMA(",")
  Identifier("TYPE_MISMATCH")
  LCURL("{")
  Identifier("NI")
  RCURL("}")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("id")
  LPAREN("(")
  IntegerLiteral("1")
  RPAREN(")")
  RPAREN(")")
  NL("\n")
  NL("\n")
  IntegerLiteral("1")
  ADD("+")
  UnsignedLiteral("1u")
  NL("\n")
  LPAREN("(")
  UnsignedLiteral("1u")
  ADD("+")
  IntegerLiteral("1")
  RPAREN(")")
  Identifier("checkType")
  LCURL("{")
  Identifier("_")
  LANGLE("<")
  Identifier("UInt")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  RCURL("}")
  NL("\n")
  NL("\n")
  Identifier("id")
  LANGLE("<")
  Identifier("UInt")
  RANGLE(">")
  LPAREN("(")
  IntegerLiteral("1")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  EOF("<EOF>")
