File: conversionOfSignedToUnsigned.test.kt - 98885c6e5ac60d8f4f55af5c48a5691d
  packageHeader
  importList
    importHeader
      IMPORT("import")
      identifier
        simpleIdentifier
          Identifier("kotlin")
        DOT(".")
        simpleIdentifier
          INTERNAL("internal")
        DOT(".")
        simpleIdentifier
          Identifier("ImplicitIntegerCoercion")
      semi
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("ImplicitIntegerCoercion")
            NL("\n")
          modifier
            propertyModifier
              CONST("const")
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("IMPLICIT_INT")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("255")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("ImplicitIntegerCoercion")
            NL("\n")
          modifier
            propertyModifier
              CONST("const")
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("EXPLICIT_INT")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("255")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("ImplicitIntegerCoercion")
            NL("\n")
          modifier
            propertyModifier
              CONST("const")
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("LONG_CONST")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          LongLiteral("255L")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("ImplicitIntegerCoercion")
            NL("\n")
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("NON_CONST")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("255")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("ImplicitIntegerCoercion")
            NL("\n")
          modifier
            propertyModifier
              CONST("const")
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("BIGGER_THAN_UBYTE")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("256")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("ImplicitIntegerCoercion")
            NL("\n")
          modifier
            propertyModifier
              CONST("const")
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("UINT_CONST")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  genericCallLikeComparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          UnsignedLiteral("42u")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("takeUByte")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameterModifiers
              annotation
                singleAnnotation
                  AT_NO_WS("@")
                  unescapedAnnotation
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("ImplicitIntegerCoercion")
            parameter
              simpleIdentifier
                Identifier("u")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("UByte")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("takeUShort")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameterModifiers
              annotation
                singleAnnotation
                  AT_NO_WS("@")
                  unescapedAnnotation
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("ImplicitIntegerCoercion")
            parameter
              simpleIdentifier
                Identifier("u")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("UShort")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("takeUInt")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameterModifiers
              annotation
                singleAnnotation
                  AT_NO_WS("@")
                  unescapedAnnotation
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("ImplicitIntegerCoercion")
            parameter
              simpleIdentifier
                Identifier("u")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("UInt")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("takeULong")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameterModifiers
              annotation
                singleAnnotation
                  AT_NO_WS("@")
                  unescapedAnnotation
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("ImplicitIntegerCoercion")
            parameter
              simpleIdentifier
                Identifier("u")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("ULong")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("takeUBytes")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameterModifiers
              annotation
                singleAnnotation
                  AT_NO_WS("@")
                  unescapedAnnotation
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("ImplicitIntegerCoercion")
              parameterModifier
                VARARG("vararg")
            parameter
              simpleIdentifier
                Identifier("u")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("UByte")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("takeLong")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameterModifiers
              annotation
                singleAnnotation
                  AT_NO_WS("@")
                  unescapedAnnotation
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("ImplicitIntegerCoercion")
            parameter
              simpleIdentifier
                Identifier("l")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Long")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("takeUIntWithoutAnnotaion")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("u")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("UInt")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("takeIntWithoutAnnotation")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("i")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("takeUByte")
  LPAREN("(")
  Identifier("IMPLICIT_INT")
  RPAREN(")")
  NL("\n")
  Identifier("takeUByte")
  LPAREN("(")
  Identifier("EXPLICIT_INT")
  RPAREN(")")
  NL("\n")
  NL("\n")
  Identifier("takeUShort")
  LPAREN("(")
  Identifier("IMPLICIT_INT")
  RPAREN(")")
  NL("\n")
  Identifier("takeUShort")
  LPAREN("(")
  Identifier("BIGGER_THAN_UBYTE")
  RPAREN(")")
  NL("\n")
  NL("\n")
  Identifier("takeUInt")
  LPAREN("(")
  Identifier("IMPLICIT_INT")
  RPAREN(")")
  NL("\n")
  NL("\n")
  Identifier("takeULong")
  LPAREN("(")
  Identifier("IMPLICIT_INT")
  RPAREN(")")
  NL("\n")
  NL("\n")
  Identifier("takeUBytes")
  LPAREN("(")
  Identifier("IMPLICIT_INT")
  COMMA(",")
  Identifier("EXPLICIT_INT")
  COMMA(",")
  UnsignedLiteral("42u")
  RPAREN(")")
  NL("\n")
  NL("\n")
  Identifier("takeLong")
  LPAREN("(")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("TYPE_MISMATCH")
  LCURL("{")
  Identifier("NI")
  RCURL("}")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("IMPLICIT_INT")
  RPAREN(")")
  NL("\n")
  NL("\n")
  Identifier("takeIntWithoutAnnotation")
  LPAREN("(")
  Identifier("IMPLICIT_INT")
  RPAREN(")")
  NL("\n")
  NL("\n")
  Identifier("takeUIntWithoutAnnotaion")
  LPAREN("(")
  Identifier("UINT_CONST")
  RPAREN(")")
  NL("\n")
  NL("\n")
  Identifier("takeUByte")
  LPAREN("(")
  Identifier("LONG_CONST")
  RPAREN(")")
  NL("\n")
  Identifier("takeUByte")
  LPAREN("(")
  Identifier("NON_CONST")
  RPAREN(")")
  NL("\n")
  Identifier("takeUByte")
  LPAREN("(")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("TYPE_MISMATCH")
  LCURL("{")
  Identifier("NI")
  RCURL("}")
  COMMA(",")
  Identifier("TYPE_MISMATCH")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("BIGGER_THAN_UBYTE")
  RPAREN(")")
  NL("\n")
  Identifier("takeUByte")
  LPAREN("(")
  Identifier("UINT_CONST")
  RPAREN(")")
  NL("\n")
  Identifier("takeUIntWithoutAnnotaion")
  LPAREN("(")
  Identifier("IMPLICIT_INT")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  EOF("<EOF>")
