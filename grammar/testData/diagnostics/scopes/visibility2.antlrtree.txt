File: visibility2.kt - aad0e09f64ba0500265c53b292d3ce57
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("a")
    semi
      NL("\n")
      NL("\n")
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            visibilityModifier
              PRIVATE("private")
          modifier
            inheritanceModifier
              OPEN("open")
        CLASS("class")
        simpleIdentifier
          Identifier("A")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("bar")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      statements
                      RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            visibilityModifier
              PRIVATE("private")
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          EXCL_NO_WS("!")
          typeParameter
            simpleIdentifier
              Identifier("EXPOSED_FUNCTION_RETURN_TYPE")
          EXCL_NO_WS("!")
          RANGLE(">")
        receiverType
          Identifier("makeA")
          LANGLE("<")
          EXCL_NO_WS("!")
          RANGLE(">")
          LPAREN("(")
          RPAREN(")")
          ASSIGNMENT("=")
          Identifier("A")
          LPAREN("(")
          RPAREN(")")
        NL("\n")
        NL("\n")
        DOT("<missing '.'>")
        simpleIdentifier
          PRIVATE("private")
  topLevelObject
    declaration
      objectDeclaration
        OBJECT("object")
        simpleIdentifier
          Identifier("PO")
        classBody
          LCURL("{")
          classMemberDeclarations
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
      NL("\n")
  PACKAGE("package")
  Identifier("b")
  NL("\n")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("INVISIBLE_REFERENCE")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("A")
  QUOTE_CLOSE(""")
  COMMA(",")
  QUOTE_OPEN(""")
  LineStrText("private")
  QUOTE_CLOSE(""")
  COMMA(",")
  QUOTE_OPEN(""")
  LineStrText("file")
  QUOTE_CLOSE(""")
  RPAREN(")")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("A")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("INVISIBLE_REFERENCE")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("foo")
  QUOTE_CLOSE(""")
  COMMA(",")
  QUOTE_OPEN(""")
  LineStrText("private")
  QUOTE_CLOSE(""")
  COMMA(",")
  QUOTE_OPEN(""")
  LineStrText("file")
  QUOTE_CLOSE(""")
  RPAREN(")")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("foo")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("makeA")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("INVISIBLE_REFERENCE")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("PO")
  QUOTE_CLOSE(""")
  COMMA(",")
  QUOTE_OPEN(""")
  LineStrText("private")
  QUOTE_CLOSE(""")
  COMMA(",")
  QUOTE_OPEN(""")
  LineStrText("file")
  QUOTE_CLOSE(""")
  RPAREN(")")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("PO")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("y")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("makeA")
                                    postfixUnarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          RPAREN(")")
        NL("\n")
        Identifier("y")
        DOT(".")
        LANGLE("<")
        EXCL_NO_WS("!")
        Identifier("INVISIBLE_MEMBER")
        LPAREN("(")
        QUOTE_OPEN(""")
        LineStrText("A")
        QUOTE_CLOSE(""")
        COMMA(",")
        QUOTE_OPEN(""")
        LineStrText("private")
        QUOTE_CLOSE(""")
        COMMA(",")
        QUOTE_OPEN(""")
        LineStrText("file")
        QUOTE_CLOSE(""")
        RPAREN(")")
        EXCL_NO_WS("!")
        RANGLE(">")
        Identifier("bar")
        LANGLE("<")
        EXCL_NO_WS("!")
        RANGLE(">")
        LPAREN("(")
        RPAREN(")")
    semis
      NL("\n")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("INVISIBLE_MEMBER")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("foo")
  QUOTE_CLOSE(""")
  COMMA(",")
  QUOTE_OPEN(""")
  LineStrText("private")
  QUOTE_CLOSE(""")
  COMMA(",")
  QUOTE_OPEN(""")
  LineStrText("file")
  QUOTE_CLOSE(""")
  RPAREN(")")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("foo")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("u")
          COLON(":")
          LANGLE("<")
          EXCL_NO_WS("!")
          Identifier("INVISIBLE_REFERENCE")
          LPAREN("(")
          QUOTE_OPEN(""")
          LineStrText("A")
          QUOTE_CLOSE(""")
          COMMA(",")
          QUOTE_OPEN(""")
          LineStrText("private")
          QUOTE_CLOSE(""")
          COMMA(",")
          QUOTE_OPEN(""")
          LineStrText("file")
          QUOTE_CLOSE(""")
          RPAREN(")")
          EXCL_NO_WS("!")
          RANGLE(">")
          Identifier("A")
          LANGLE("<")
          EXCL_NO_WS("!")
          RANGLE(">")
        ASSIGNMENT("=")
        LANGLE("<")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  unaryPrefix
                                    prefixUnaryOperator
                                      excl
                                        EXCL_NO_WS("!")
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("INVISIBLE_MEMBER")
                                    postfixUnarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          valueArgument
                                            expression
                                              disjunction
                                                conjunction
                                                  equality
                                                    comparison
                                                      infixOperation
                                                        elvisExpression
                                                          infixFunctionCall
                                                            rangeExpression
                                                              additiveExpression
                                                                multiplicativeExpression
                                                                  asExpression
                                                                    prefixUnaryExpression
                                                                      postfixUnaryExpression
                                                                        primaryExpression
                                                                          stringLiteral
                                                                            lineStringLiteral
                                                                              QUOTE_OPEN(""")
                                                                              lineStringContent
                                                                                LineStrText("A")
                                                                              QUOTE_CLOSE(""")
                                          COMMA(",")
                                          valueArgument
                                            expression
                                              disjunction
                                                conjunction
                                                  equality
                                                    comparison
                                                      infixOperation
                                                        elvisExpression
                                                          infixFunctionCall
                                                            rangeExpression
                                                              additiveExpression
                                                                multiplicativeExpression
                                                                  asExpression
                                                                    prefixUnaryExpression
                                                                      postfixUnaryExpression
                                                                        primaryExpression
                                                                          stringLiteral
                                                                            lineStringLiteral
                                                                              QUOTE_OPEN(""")
                                                                              lineStringContent
                                                                                LineStrText("private")
                                                                              QUOTE_CLOSE(""")
                                          COMMA(",")
                                          valueArgument
                                            expression
                                              disjunction
                                                conjunction
                                                  equality
                                                    comparison
                                                      infixOperation
                                                        elvisExpression
                                                          infixFunctionCall
                                                            rangeExpression
                                                              additiveExpression
                                                                multiplicativeExpression
                                                                  asExpression
                                                                    prefixUnaryExpression
                                                                      postfixUnaryExpression
                                                                        primaryExpression
                                                                          stringLiteral
                                                                            lineStringLiteral
                                                                              QUOTE_OPEN(""")
                                                                              lineStringContent
                                                                                LineStrText("file")
                                                                              QUOTE_CLOSE(""")
                                          RPAREN(")")
        EXCL_NO_WS("!")
        RANGLE(">")
        Identifier("A")
        LANGLE("<")
        EXCL_NO_WS("!")
        RANGLE(">")
        LPAREN("(")
        RPAREN(")")
    semis
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("a")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("java")
                DOT(".")
                simpleUserType
                  simpleIdentifier
                    Identifier("util")
                DOT(".")
                simpleUserType
                  simpleIdentifier
                    Identifier("Arrays")
        DOT(".")
        LANGLE("<")
        EXCL_NO_WS("!")
        Identifier("INVISIBLE_REFERENCE")
        LPAREN("(")
        QUOTE_OPEN(""")
        LineStrText("ArrayList")
        QUOTE_CLOSE(""")
        COMMA(",")
        QUOTE_OPEN(""")
        LineStrText("private")
        QUOTE_CLOSE(""")
        COMMA(",")
        QUOTE_OPEN(""")
        LineStrText("'Arrays'")
        QUOTE_CLOSE(""")
        RPAREN(")")
        EXCL_NO_WS("!")
        RANGLE(">")
        Identifier("ArrayList")
        LANGLE("<")
        EXCL_NO_WS("!")
        RANGLE(">")
        LANGLE("<")
        Identifier("Int")
        RANGLE(">")
    semis
      SEMICOLON(";")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("po")
        ASSIGNMENT("=")
        LANGLE("<")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  unaryPrefix
                                    prefixUnaryOperator
                                      excl
                                        EXCL_NO_WS("!")
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("INVISIBLE_MEMBER")
                                    postfixUnarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          valueArgument
                                            expression
                                              disjunction
                                                conjunction
                                                  equality
                                                    comparison
                                                      infixOperation
                                                        elvisExpression
                                                          infixFunctionCall
                                                            rangeExpression
                                                              additiveExpression
                                                                multiplicativeExpression
                                                                  asExpression
                                                                    prefixUnaryExpression
                                                                      postfixUnaryExpression
                                                                        primaryExpression
                                                                          stringLiteral
                                                                            lineStringLiteral
                                                                              QUOTE_OPEN(""")
                                                                              lineStringContent
                                                                                LineStrText("PO")
                                                                              QUOTE_CLOSE(""")
                                          COMMA(",")
                                          valueArgument
                                            expression
                                              disjunction
                                                conjunction
                                                  equality
                                                    comparison
                                                      infixOperation
                                                        elvisExpression
                                                          infixFunctionCall
                                                            rangeExpression
                                                              additiveExpression
                                                                multiplicativeExpression
                                                                  asExpression
                                                                    prefixUnaryExpression
                                                                      postfixUnaryExpression
                                                                        primaryExpression
                                                                          stringLiteral
                                                                            lineStringLiteral
                                                                              QUOTE_OPEN(""")
                                                                              lineStringContent
                                                                                LineStrText("private")
                                                                              QUOTE_CLOSE(""")
                                          COMMA(",")
                                          valueArgument
                                            expression
                                              disjunction
                                                conjunction
                                                  equality
                                                    comparison
                                                      infixOperation
                                                        elvisExpression
                                                          infixFunctionCall
                                                            rangeExpression
                                                              additiveExpression
                                                                multiplicativeExpression
                                                                  asExpression
                                                                    prefixUnaryExpression
                                                                      postfixUnaryExpression
                                                                        primaryExpression
                                                                          stringLiteral
                                                                            lineStringLiteral
                                                                              QUOTE_OPEN(""")
                                                                              lineStringContent
                                                                                LineStrText("file")
                                                                              QUOTE_CLOSE(""")
                                          RPAREN(")")
        EXCL_NO_WS("!")
        RANGLE(">")
        Identifier("PO")
        LANGLE("<")
        EXCL_NO_WS("!")
        RANGLE(">")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("B")
        COLON(":")
        LANGLE("<")
        EXCL_NO_WS("!")
        Identifier("EXPOSED_SUPER_CLASS")
        EXCL_NO_WS("!")
        RANGLE(">")
        LANGLE("<")
        EXCL_NO_WS("!")
        Identifier("INVISIBLE_MEMBER")
        LPAREN("(")
        QUOTE_OPEN(""")
        LineStrText("A")
        QUOTE_CLOSE(""")
        COMMA(",")
        QUOTE_OPEN(""")
        LineStrText("private")
        QUOTE_CLOSE(""")
        COMMA(",")
        QUOTE_OPEN(""")
        LineStrText("file")
        QUOTE_CLOSE(""")
        RPAREN(")")
        COMMA(",")
        Identifier("INVISIBLE_REFERENCE")
        LPAREN("(")
        QUOTE_OPEN(""")
        LineStrText("A")
        QUOTE_CLOSE(""")
        COMMA(",")
        QUOTE_OPEN(""")
        LineStrText("private")
        QUOTE_CLOSE(""")
        COMMA(",")
        QUOTE_OPEN(""")
        LineStrText("file")
        QUOTE_CLOSE(""")
        RPAREN(")")
        EXCL_NO_WS("!")
        RANGLE(">")
        Identifier("A")
        LANGLE("<")
        EXCL_NO_WS("!")
        RANGLE(">")
        LPAREN("(")
        RPAREN(")")
        LANGLE("<")
        EXCL_NO_WS("!")
        RANGLE(">")
        LCURL("{")
        RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Q")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                classDeclaration
                  CLASS("class")
                  simpleIdentifier
                    Identifier("W")
                  classBody
                    LCURL("{")
                    NL("\n")
                    classMemberDeclarations
                      classMemberDeclaration
                        declaration
                          functionDeclaration
                            FUN("fun")
                            simpleIdentifier
                              Identifier("foo")
                            functionValueParameters
                              LPAREN("(")
                              RPAREN(")")
                            functionBody
                              block
                                LCURL("{")
                                NL("\n")
                                statements
                                  statement
                                    declaration
                                      propertyDeclaration
                                        VAL("val")
                                        variableDeclaration
                                          simpleIdentifier
                                            Identifier("y")
                                        ASSIGNMENT("=")
                                        expression
                                          disjunction
                                            conjunction
                                              equality
                                                comparison
                                                  infixOperation
                                                    elvisExpression
                                                      infixFunctionCall
                                                        rangeExpression
                                                          additiveExpression
                                                            multiplicativeExpression
                                                              asExpression
                                                                prefixUnaryExpression
                                                                  postfixUnaryExpression
                                                                    primaryExpression
                                                                      simpleIdentifier
                                                                        Identifier("makeA")
                                                                    postfixUnarySuffix
                                                                      callSuffix
                                                                        valueArguments
                                                                          LPAREN("(")
                                                                          RPAREN(")")
                                        NL("\n")
                                RCURL("}")
                      semis
                        NL("\n")
                    RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("NewClass")
        COLON(":")
        delegationSpecifiers
          annotatedDelegationSpecifier
            delegationSpecifier
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("java")
                DOT(".")
                simpleUserType
                  simpleIdentifier
                    Identifier("util")
                DOT(".")
                simpleUserType
                  simpleIdentifier
                    Identifier("ArrayList")
  LANGLE("<")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("PLATFORM_CLASS_MAPPED_TO_KOTLIN")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("Integer")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            visibilityModifier
              PUBLIC("public")
          modifier
            memberModifier
              OVERRIDE("override")
        FUN("fun")
        simpleIdentifier
          Identifier("toString")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        stringLiteral
                                          lineStringLiteral
                                            QUOTE_OPEN(""")
                                            lineStringContent
                                              LineStrText("a")
                                            QUOTE_CLOSE(""")
    semis
      NL("\n")
  RCURL("}")
  NL("\n")
  EOF("<EOF>")
