File: characterIsNotANumber.kt - 13ec7a773f81db0d50f4b2a8cc16f3aa
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("n")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Number")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            simpleIdentifier
              Identifier("n")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("foo")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        valueArgument
                          expression
                            literalConstant
                              CharacterLiteral("'a'")
                        RPAREN(")")
              semis
                NL("\n")
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("c")
                    ASSIGNMENT("=")
                    expression
                      literalConstant
                        CharacterLiteral("'c'")
              semis
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("foo")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        valueArgument
                          expression
                            simpleIdentifier
                              Identifier("c")
                        RPAREN(")")
              semis
                NL("\n")
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("d")
                      COLON(":")
                      type
                        nullableType
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Char")
                          quest
                            QUEST_WS("? ")
                    ASSIGNMENT("=")
                    expression
                      literalConstant
                        CharacterLiteral("'d'")
              semis
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("foo")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        valueArgument
                          expression
                            expression
                              simpleIdentifier
                                Identifier("d")
                            unarySuffix
                              postfixUnaryOperator
                                EXCL_NO_WS("!")
                                excl
                                  EXCL_NO_WS("!")
                        RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
