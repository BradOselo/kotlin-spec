File: namedArguments.kt - e516e98c853f1337a4c68269b3871ccc
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            platformModifier
              EXPECT("expect")
        CLASS("class")
        simpleIdentifier
          Identifier("Foo")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              simpleIdentifier
                Identifier("zzz")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
            RPAREN(")")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              secondaryConstructor
                CONSTRUCTOR("constructor")
                functionValueParameters
                  LPAREN("(")
                  functionValueParameter
                    parameter
                      simpleIdentifier
                        Identifier("aaa")
                      COLON(":")
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Boolean")
                  RPAREN(")")
                NL("\n")
                NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("f1")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("xxx")
                        COLON(":")
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("String")
                    RPAREN(")")
                  COLON(":")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("String")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            platformModifier
              EXPECT("expect")
        FUN("fun")
        simpleIdentifier
          Identifier("f2")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("xxx")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
          RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testCommon")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("Foo")
  LPAREN("(")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("OI")
  SEMICOLON(";")
  Identifier("NAMED_ARGUMENTS_NOT_ALLOWED")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("zzz")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  ASSIGNMENT("=")
  IntegerLiteral("0")
  RPAREN(")")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("f")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("Foo")
        LPAREN("(")
        LANGLE("<")
        EXCL_NO_WS("!")
        Identifier("OI")
    semis
      SEMICOLON(";")
  Identifier("NAMED_ARGUMENTS_NOT_ALLOWED")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("aaa")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  ASSIGNMENT("=")
  BooleanLiteral("true")
  RPAREN(")")
  NL("\n")
  Identifier("f")
  DOT(".")
  Identifier("f1")
  LPAREN("(")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("OI")
  SEMICOLON(";")
  Identifier("NAMED_ARGUMENTS_NOT_ALLOWED")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("xxx")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  ASSIGNMENT("=")
  QUOTE_OPEN(""")
  QUOTE_CLOSE(""")
  RPAREN(")")
  NL("\n")
  Identifier("f2")
  LPAREN("(")
  Identifier("xxx")
  ASSIGNMENT("=")
  IntegerLiteral("42")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            platformModifier
              ACTUAL("actual")
        CLASS("class")
        simpleIdentifier
          Identifier("Foo")
        primaryConstructor
          modifiers
            modifier
              platformModifier
                ACTUAL("actual")
          CONSTRUCTOR("constructor")
          classParameters
            LPAREN("(")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("aaa")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Boolean")
            RPAREN(")")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              secondaryConstructor
                modifiers
                  modifier
                    platformModifier
                      ACTUAL("actual")
                CONSTRUCTOR("constructor")
                functionValueParameters
                  LPAREN("(")
                  functionValueParameter
                    parameter
                      simpleIdentifier
                        Identifier("zzz")
                      COLON(":")
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Int")
                  RPAREN(")")
                COLON(":")
                constructorDelegationCall
                  THIS("this")
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("zzz")
                              equalityOperator
                                EQEQ("==")
                              comparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    literalConstant
                                                      IntegerLiteral("0")
                    RPAREN(")")
                NL("\n")
                NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      platformModifier
                        ACTUAL("actual")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("f1")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("xxx")
                        COLON(":")
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("String")
                    RPAREN(")")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  simpleIdentifier
                                                    Identifier("xxx")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            platformModifier
              ACTUAL("actual")
        FUN("fun")
        simpleIdentifier
          Identifier("f2")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("xxx")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testPlatform")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              simpleIdentifier
                                                Identifier("Foo")
                                            postfixUnarySuffix
                                              callSuffix
                                                valueArguments
                                                  LPAREN("(")
                                                  valueArgument
                                                    simpleIdentifier
                                                      Identifier("zzz")
                                                    ASSIGNMENT("=")
                                                    expression
                                                      disjunction
                                                        conjunction
                                                          equality
                                                            comparison
                                                              infixOperation
                                                                elvisExpression
                                                                  infixFunctionCall
                                                                    rangeExpression
                                                                      additiveExpression
                                                                        multiplicativeExpression
                                                                          asExpression
                                                                            prefixUnaryExpression
                                                                              postfixUnaryExpression
                                                                                primaryExpression
                                                                                  literalConstant
                                                                                    IntegerLiteral("0")
                                                  RPAREN(")")
              semis
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("f")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  simpleIdentifier
                                                    Identifier("Foo")
                                                postfixUnarySuffix
                                                  callSuffix
                                                    valueArguments
                                                      LPAREN("(")
                                                      valueArgument
                                                        simpleIdentifier
                                                          Identifier("aaa")
                                                        ASSIGNMENT("=")
                                                        expression
                                                          disjunction
                                                            conjunction
                                                              equality
                                                                comparison
                                                                  infixOperation
                                                                    elvisExpression
                                                                      infixFunctionCall
                                                                        rangeExpression
                                                                          additiveExpression
                                                                            multiplicativeExpression
                                                                              asExpression
                                                                                prefixUnaryExpression
                                                                                  postfixUnaryExpression
                                                                                    primaryExpression
                                                                                      literalConstant
                                                                                        BooleanLiteral("true")
                                                      RPAREN(")")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              simpleIdentifier
                                                Identifier("f")
                                            postfixUnarySuffix
                                              navigationSuffix
                                                memberAccessOperator
                                                  DOT(".")
                                                simpleIdentifier
                                                  Identifier("f1")
                                            postfixUnarySuffix
                                              callSuffix
                                                valueArguments
                                                  LPAREN("(")
                                                  valueArgument
                                                    simpleIdentifier
                                                      Identifier("xxx")
                                                    ASSIGNMENT("=")
                                                    expression
                                                      disjunction
                                                        conjunction
                                                          equality
                                                            comparison
                                                              infixOperation
                                                                elvisExpression
                                                                  infixFunctionCall
                                                                    rangeExpression
                                                                      additiveExpression
                                                                        multiplicativeExpression
                                                                          asExpression
                                                                            prefixUnaryExpression
                                                                              postfixUnaryExpression
                                                                                primaryExpression
                                                                                  stringLiteral
                                                                                    lineStringLiteral
                                                                                      QUOTE_OPEN(""")
                                                                                      QUOTE_CLOSE(""")
                                                  RPAREN(")")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              simpleIdentifier
                                                Identifier("f2")
                                            postfixUnarySuffix
                                              callSuffix
                                                valueArguments
                                                  LPAREN("(")
                                                  valueArgument
                                                    simpleIdentifier
                                                      Identifier("xxx")
                                                    ASSIGNMENT("=")
                                                    expression
                                                      disjunction
                                                        conjunction
                                                          equality
                                                            comparison
                                                              infixOperation
                                                                elvisExpression
                                                                  infixFunctionCall
                                                                    rangeExpression
                                                                      additiveExpression
                                                                        multiplicativeExpression
                                                                          asExpression
                                                                            prefixUnaryExpression
                                                                              postfixUnaryExpression
                                                                                primaryExpression
                                                                                  literalConstant
                                                                                    IntegerLiteral("42")
                                                  RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
