File: resolutionGenericCallableWithNullableTypes.kt - b4825ada3f98a9af59fd224b4f12ab5e
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                nullableType
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("Int")
                  quest
                    QUEST_NO_WS("?")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("y")
              COLON(":")
              type
                nullableType
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("String")
                  quest
                    QUEST_NO_WS("?")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("z")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Boolean")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("baz")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("element")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Unit")
          RPAREN(")")
        COLON(":")
        type
          nullableType
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("T")
            quest
              QUEST_WS("? ")
        functionBody
          ASSIGNMENT("=")
          expression
            literalConstant
              NullLiteral("null")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test1")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("a1")
                      COLON(":")
                      type
                        nullableType
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Int")
                          quest
                            QUEST_WS("? ")
                    ASSIGNMENT("=")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("baz")
                      unarySuffix
                        callSuffix
                          valueArguments
                            LPAREN("(")
                            valueArgument
                              expression
                                callableReference
                                  COLONCOLON("::")
                                  simpleIdentifier
                                    Identifier("foo")
                            RPAREN(")")
              semis
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("a2")
                      COLON(":")
                      type
                        nullableType
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("String")
                          quest
                            QUEST_WS("? ")
                    ASSIGNMENT("=")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("baz")
                      unarySuffix
                        callSuffix
                          valueArguments
                            LPAREN("(")
                            valueArgument
                              expression
                                callableReference
                                  COLONCOLON("::")
                                  simpleIdentifier
                                    Identifier("foo")
                            RPAREN(")")
              semis
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("a3")
                      COLON(":")
                      type
                        nullableType
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Boolean")
                          quest
                            QUEST_WS("? ")
                    ASSIGNMENT("=")
                    expression
                      expression
                        expression
                          simpleIdentifier
                            Identifier("baz")
                        comparisonOperator
                          LANGLE("<")
                        expression
                          simpleIdentifier
                            Identifier("Boolean")
                      comparisonOperator
                        RANGLE(">")
                      expression
                        parenthesizedExpression
                          LPAREN("(")
                          expression
                            callableReference
                              COLONCOLON("::")
                              simpleIdentifier
                                Identifier("foo")
                          RPAREN(")")
                    NL("\n")
              semis
                NL("\n")
              statement
                expression
                  expression
                    expression
                      simpleIdentifier
                        Identifier("baz")
                    comparisonOperator
                      LANGLE("<")
                    expression
                      simpleIdentifier
                        Identifier("Int")
                  comparisonOperator
                    RANGLE(">")
                  expression
                    expression
                      parenthesizedExpression
                        LPAREN("(")
                        expression
                          callableReference
                            COLONCOLON("::")
                            simpleIdentifier
                              Identifier("foo")
                        RPAREN(")")
                    unarySuffix
                      navigationSuffix
                        memberAccessOperator
                          DOT(".")
                        simpleIdentifier
                          Identifier("checkType")
                    unarySuffix
                      callSuffix
                        annotatedLambda
                          lambdaLiteral
                            LCURL("{")
                            statements
                              statement
                                expression
                                  expression
                                    simpleIdentifier
                                      Identifier("_")
                                  unarySuffix
                                    typeArguments
                                      LANGLE("<")
                                      typeProjection
                                        type
                                          nullableType
                                            typeReference
                                              userType
                                                simpleUserType
                                                  simpleIdentifier
                                                    Identifier("Int")
                                            quest
                                              QUEST_NO_WS("?")
                                      RANGLE(">")
                                  unarySuffix
                                    callSuffix
                                      valueArguments
                                        LPAREN("(")
                                        RPAREN(")")
                            RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  expression
                    expression
                      simpleIdentifier
                        Identifier("baz")
                    comparisonOperator
                      LANGLE("<")
                    expression
                      simpleIdentifier
                        Identifier("String")
                  comparisonOperator
                    RANGLE(">")
                  expression
                    expression
                      parenthesizedExpression
                        LPAREN("(")
                        expression
                          callableReference
                            COLONCOLON("::")
                            simpleIdentifier
                              Identifier("foo")
                        RPAREN(")")
                    unarySuffix
                      navigationSuffix
                        memberAccessOperator
                          DOT(".")
                        simpleIdentifier
                          Identifier("checkType")
                    unarySuffix
                      callSuffix
                        annotatedLambda
                          lambdaLiteral
                            LCURL("{")
                            statements
                              statement
                                expression
                                  expression
                                    simpleIdentifier
                                      Identifier("_")
                                  unarySuffix
                                    typeArguments
                                      LANGLE("<")
                                      typeProjection
                                        type
                                          nullableType
                                            typeReference
                                              userType
                                                simpleUserType
                                                  simpleIdentifier
                                                    Identifier("String")
                                            quest
                                              QUEST_NO_WS("?")
                                      RANGLE(">")
                                  unarySuffix
                                    callSuffix
                                      valueArguments
                                        LPAREN("(")
                                        RPAREN(")")
                            RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  expression
                    expression
                      simpleIdentifier
                        Identifier("baz")
                    comparisonOperator
                      LANGLE("<")
                    expression
                      simpleIdentifier
                        Identifier("Boolean")
                  comparisonOperator
                    RANGLE(">")
                  expression
                    expression
                      parenthesizedExpression
                        LPAREN("(")
                        expression
                          callableReference
                            COLONCOLON("::")
                            simpleIdentifier
                              Identifier("foo")
                        RPAREN(")")
                    unarySuffix
                      navigationSuffix
                        memberAccessOperator
                          DOT(".")
                        simpleIdentifier
                          Identifier("checkType")
                    unarySuffix
                      callSuffix
                        annotatedLambda
                          lambdaLiteral
                            LCURL("{")
                            statements
                              statement
                                expression
                                  expression
                                    simpleIdentifier
                                      Identifier("_")
                                  unarySuffix
                                    typeArguments
                                      LANGLE("<")
                                      typeProjection
                                        type
                                          nullableType
                                            typeReference
                                              userType
                                                simpleUserType
                                                  simpleIdentifier
                                                    Identifier("Boolean")
                                            quest
                                              QUEST_NO_WS("?")
                                      RANGLE(">")
                                  unarySuffix
                                    callSuffix
                                      valueArguments
                                        LPAREN("(")
                                        RPAREN(")")
                            RCURL("}")
              semis
                NL("\n")
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("b1")
                      COLON(":")
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Int")
                    ASSIGNMENT("=")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("baz")
                      unarySuffix
                        callSuffix
                          valueArguments
                            LPAREN("(")
                            valueArgument
                              expression
                                callableReference
                                  COLONCOLON("::")
                                  simpleIdentifier
                                    Identifier("foo")
                            RPAREN(")")
              semis
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("b2")
                      COLON(":")
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("String")
                    ASSIGNMENT("=")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("baz")
                      unarySuffix
                        callSuffix
                          valueArguments
                            LPAREN("(")
                            valueArgument
                              expression
                                callableReference
                                  COLONCOLON("::")
                                  simpleIdentifier
                                    Identifier("foo")
                            RPAREN(")")
              semis
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("b3")
                      COLON(":")
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Boolean")
                    ASSIGNMENT("=")
                    expression
                      expression
                        simpleIdentifier
                          Identifier("baz")
                      unarySuffix
                        callSuffix
                          valueArguments
                            LPAREN("(")
                            valueArgument
                              expression
                                callableReference
                                  COLONCOLON("::")
                                  simpleIdentifier
                                    Identifier("foo")
                            RPAREN(")")
                    NL("\n")
            RCURL("}")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
