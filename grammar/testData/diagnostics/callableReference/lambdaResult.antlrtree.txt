File: lambdaResult.kt - 5cc45f3005a92b6a407a3a3e8fd00add
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("Inv")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("E")
          RANGLE(">")
        receiverType
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Inv")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("E")
                  RANGLE(">")
        DOT(".")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("handler")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    RPAREN(")")
                  ARROW("->")
                  type
                    parenthesizedType
                      LPAREN("(")
                      type
                        functionType
                          functionTypeParameters
                            LPAREN("(")
                            parameter
                              simpleIdentifier
                                Identifier("command")
                              COLON(":")
                              type
                                typeReference
                                  userType
                                    simpleUserType
                                      simpleIdentifier
                                        Identifier("E")
                            RPAREN(")")
                          ARROW("->")
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Unit")
                      RPAREN(")")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("bar")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("bar")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("String")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("bar1")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("arg")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo1")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("f")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    RPAREN(")")
                  ARROW("->")
                  type
                    functionType
                      functionTypeParameters
                        LPAREN("(")
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Int")
                        RPAREN(")")
                      ARROW("->")
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Unit")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            stringLiteral
              lineStringLiteral
                QUOTE_OPEN(""")
                QUOTE_CLOSE(""")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("main")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Inv")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Int")
                        RANGLE(">")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("x")
                  unarySuffix
                    navigationSuffix
                      memberAccessOperator
                        DOT(".")
                      simpleIdentifier
                        Identifier("foo")
                  unarySuffix
                    typeArguments
                      LANGLE("<")
                      typeProjection
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Int")
                      RANGLE(">")
                  unarySuffix
                    callSuffix
                      annotatedLambda
                        lambdaLiteral
                          LCURL("{")
                          NL("\n")
                          statements
                            statement
                              expression
                                ifExpression
                                  IF("if")
                                  LPAREN("(")
                                  expression
                                    expression
                                      expression
                                        simpleIdentifier
                                          Identifier("x")
                                      unarySuffix
                                        navigationSuffix
                                          memberAccessOperator
                                            DOT(".")
                                          simpleIdentifier
                                            Identifier("hashCode")
                                      unarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            RPAREN(")")
                                    equalityOperator
                                      EQEQ("==")
                                    expression
                                      literalConstant
                                        IntegerLiteral("0")
                                  RPAREN(")")
                                  controlStructureBody
                                    statement
                                      expression
                                        jumpExpression
                                          RETURN_AT("return@foo")
                                          expression
                                            expression
                                              callableReference
                                                COLONCOLON("::")
                                                simpleIdentifier
                                                  Identifier("bar")
                                            unarySuffix
                                              navigationSuffix
                                                NL("\n")
                                                NL("\n")
                                                memberAccessOperator
                                                  COLONCOLON("::")
                                                simpleIdentifier
                                                  Identifier("bar")
                            semis
                              NL("\n")
                          RCURL("}")
              semis
                NL("\n")
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("x")
                  unarySuffix
                    navigationSuffix
                      memberAccessOperator
                        DOT(".")
                      simpleIdentifier
                        Identifier("foo")
                  unarySuffix
                    callSuffix
                      annotatedLambda
                        lambdaLiteral
                          LCURL("{")
                          NL("\n")
                          statements
                            statement
                              expression
                                ifExpression
                                  IF("if")
                                  LPAREN("(")
                                  expression
                                    expression
                                      expression
                                        simpleIdentifier
                                          Identifier("x")
                                      unarySuffix
                                        navigationSuffix
                                          memberAccessOperator
                                            DOT(".")
                                          simpleIdentifier
                                            Identifier("hashCode")
                                      unarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            RPAREN(")")
                                    equalityOperator
                                      EQEQ("==")
                                    expression
                                      literalConstant
                                        IntegerLiteral("0")
                                  RPAREN(")")
                                  controlStructureBody
                                    statement
                                      expression
                                        jumpExpression
                                          RETURN_AT("return@foo")
                                          expression
                                            expression
                                              callableReference
                                                COLONCOLON("::")
                                                simpleIdentifier
                                                  Identifier("bar")
                                            unarySuffix
                                              navigationSuffix
                                                NL("\n")
                                                NL("\n")
                                                memberAccessOperator
                                                  COLONCOLON("::")
                                                simpleIdentifier
                                                  Identifier("bar")
                            semis
                              NL("\n")
                          RCURL("}")
              semis
                NL("\n")
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("foo1")
                  unarySuffix
                    callSuffix
                      annotatedLambda
                        lambdaLiteral
                          LCURL("{")
                          NL("\n")
                          statements
                            statement
                              expression
                                callableReference
                                  COLONCOLON("::")
                                  simpleIdentifier
                                    Identifier("bar1")
                            semis
                              NL("\n")
                          RCURL("}")
              semis
                NL("\n")
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("foo1")
                  unarySuffix
                    callSuffix
                      annotatedLambda
                        lambdaLiteral
                          LCURL("{")
                          NL("\n")
                          statements
                            statement
                              expression
                                jumpExpression
                                  RETURN_AT("return@foo1")
                                  expression
                                    callableReference
                                      COLONCOLON("::")
                                      simpleIdentifier
                                        Identifier("bar1")
                            semis
                              NL("\n")
                          RCURL("}")
              semis
                NL("\n")
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("foo1")
                  unarySuffix
                    callSuffix
                      annotatedLambda
                        lambdaLiteral
                          LCURL("{")
                          NL("\n")
                          statements
                            statement
                              expression
                                ifExpression
                                  IF("if")
                                  LPAREN("(")
                                  expression
                                    expression
                                      expression
                                        simpleIdentifier
                                          Identifier("x")
                                      unarySuffix
                                        navigationSuffix
                                          memberAccessOperator
                                            DOT(".")
                                          simpleIdentifier
                                            Identifier("hashCode")
                                      unarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            RPAREN(")")
                                    equalityOperator
                                      EQEQ("==")
                                    expression
                                      literalConstant
                                        IntegerLiteral("0")
                                  RPAREN(")")
                                  controlStructureBody
                                    statement
                                      expression
                                        jumpExpression
                                          RETURN_AT("return@foo1")
                                          expression
                                            expression
                                              callableReference
                                                COLONCOLON("::")
                                                simpleIdentifier
                                                  Identifier("bar")
                                            unarySuffix
                                              navigationSuffix
                                                NL("\n")
                                                NL("\n")
                                                memberAccessOperator
                                                  COLONCOLON("::")
                                                simpleIdentifier
                                                  Identifier("bar")
                            semis
                              NL("\n")
                          RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
