File: kt9985.kt - 5eaf445b19a9bcb8809cb77c387c6755
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            visibilityModifier
              PUBLIC("public")
        CLASS("class")
        simpleIdentifier
          Identifier("B")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("String")
      Identifier("gav")
      LPAREN("(")
      RPAREN(")")
      LCURL("{")
    semis
      NL("\n")
  RETURN("return")
  QUOTE_OPEN(""")
  QUOTE_CLOSE(""")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
      Identifier("static")
      LANGLE("<")
      Identifier("T")
      RANGLE(">")
      Identifier("B")
      LANGLE("<")
      Identifier("T")
      RANGLE(">")
      Identifier("create")
      LPAREN("(")
      RPAREN(")")
      LCURL("{")
    semis
      NL("\n")
  RETURN("return")
  Identifier("new")
  Identifier("B")
  LPAREN("(")
  RPAREN(")")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("A")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("gav")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  stringLiteral
                                                    lineStringLiteral
                                                      QUOTE_OPEN(""")
                                                      QUOTE_CLOSE(""")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("R")
          RANGLE(">")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("R")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        simpleIdentifier
                                          Identifier("x")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        receiverType
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("A")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                  RANGLE(">")
        DOT(".")
        simpleIdentifier
          Identifier("bar")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        stringLiteral
                                          lineStringLiteral
                                            QUOTE_OPEN(""")
                                            QUOTE_CLOSE(""")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        receiverType
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("B")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                  RANGLE(">")
        DOT(".")
        simpleIdentifier
          Identifier("bar")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        stringLiteral
                                          lineStringLiteral
                                            QUOTE_OPEN(""")
                                            QUOTE_CLOSE(""")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("l")
              COLON(":")
              type
                nullableType
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("A")
                        typeArguments
                          LANGLE("<")
                          typeProjection
                            type
                              typeReference
                                userType
                                  simpleUserType
                                    simpleIdentifier
                                      Identifier("String")
                          RANGLE(">")
                  quest
                    QUEST_NO_WS("?")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  NL("\n")
  Identifier("foo")
  LPAREN("(")
  Identifier("l")
  QUEST_NO_WS("?")
  DOT(".")
  Identifier("bar")
  LPAREN("(")
  RPAREN(")")
  RPAREN(")")
  Identifier("checkType")
  LCURL("{")
  Identifier("_")
  LANGLE("<")
  Identifier("String")
  QUEST_NO_WS("?")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  RCURL("}")
  NL("\n")
  Identifier("foo")
  LPAREN("(")
  Identifier("l")
  QUEST_NO_WS("?")
  DOT(".")
  Identifier("gav")
  LPAREN("(")
  RPAREN(")")
  RPAREN(")")
  Identifier("checkType")
  LCURL("{")
  Identifier("_")
  LANGLE("<")
  Identifier("String")
  QUEST_NO_WS("?")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  RCURL("}")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("l")
  EXCL_EQ("!=")
  NullLiteral("null")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("foo")
  LPAREN("(")
  Identifier("l")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNNECESSARY_SAFE_CALL")
  EXCL_NO_WS("!")
  RANGLE(">")
  QUEST_NO_WS("?")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("bar")
  LPAREN("(")
  RPAREN(")")
  RPAREN(")")
  Identifier("checkType")
  LCURL("{")
  Identifier("_")
  LANGLE("<")
  Identifier("String")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  RCURL("}")
  NL("\n")
  Identifier("foo")
  LPAREN("(")
  Identifier("l")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNNECESSARY_SAFE_CALL")
  EXCL_NO_WS("!")
  RANGLE(">")
  QUEST_NO_WS("?")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("gav")
  LPAREN("(")
  RPAREN(")")
  RPAREN(")")
  Identifier("checkType")
  LCURL("{")
  Identifier("_")
  LANGLE("<")
  Identifier("String")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("fooNotNull")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("l")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("A")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("String")
                        RANGLE(">")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  NL("\n")
  Identifier("foo")
  LPAREN("(")
  Identifier("l")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNNECESSARY_SAFE_CALL")
  EXCL_NO_WS("!")
  RANGLE(">")
  QUEST_NO_WS("?")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("bar")
  LPAREN("(")
  RPAREN(")")
  RPAREN(")")
  Identifier("checkType")
  LCURL("{")
  Identifier("_")
  LANGLE("<")
  Identifier("String")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  RCURL("}")
  NL("\n")
  Identifier("foo")
  LPAREN("(")
  Identifier("l")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNNECESSARY_SAFE_CALL")
  EXCL_NO_WS("!")
  RANGLE(">")
  QUEST_NO_WS("?")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("gav")
  LPAREN("(")
  RPAREN(")")
  RPAREN(")")
  Identifier("checkType")
  LCURL("{")
  Identifier("_")
  LANGLE("<")
  Identifier("String")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("bar")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("l")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  simpleIdentifier
                                                    Identifier("B")
                                                postfixUnarySuffix
                                                  navigationSuffix
                                                    memberAccessOperator
                                                      DOT(".")
                                                    simpleIdentifier
                                                      Identifier("create")
                                                postfixUnarySuffix
                                                  typeArguments
                                                    LANGLE("<")
                                                    typeProjection
                                                      type
                                                        typeReference
                                                          userType
                                                            simpleUserType
                                                              simpleIdentifier
                                                                Identifier("String")
                                                    RANGLE(">")
                                                postfixUnarySuffix
                                                  callSuffix
                                                    valueArguments
                                                      LPAREN("(")
                                                      RPAREN(")")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              simpleIdentifier
                                                Identifier("foo")
                                            postfixUnarySuffix
                                              callSuffix
                                                valueArguments
                                                  LPAREN("(")
                                                  valueArgument
                                                    expression
                                                      disjunction
                                                        conjunction
                                                          equality
                                                            comparison
                                                              infixOperation
                                                                elvisExpression
                                                                  infixFunctionCall
                                                                    rangeExpression
                                                                      additiveExpression
                                                                        multiplicativeExpression
                                                                          asExpression
                                                                            prefixUnaryExpression
                                                                              postfixUnaryExpression
                                                                                primaryExpression
                                                                                  simpleIdentifier
                                                                                    Identifier("l")
                                                                                postfixUnarySuffix
                                                                                  navigationSuffix
                                                                                    memberAccessOperator
                                                                                      safeNav
                                                                                        QUEST_NO_WS("?")
                                                                                        DOT(".")
                                                                                    simpleIdentifier
                                                                                      Identifier("bar")
                                                                                postfixUnarySuffix
                                                                                  callSuffix
                                                                                    valueArguments
                                                                                      LPAREN("(")
                                                                                      RPAREN(")")
                                                  RPAREN(")")
                                simpleIdentifier
                                  Identifier("checkType")
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              functionLiteral
                                                lambdaLiteral
                                                  LCURL("{")
                                                  statements
                                                    statement
                                                      expression
                                                        disjunction
                                                          conjunction
                                                            equality
                                                              comparison
                                                                infixOperation
                                                                  elvisExpression
                                                                    infixFunctionCall
                                                                      rangeExpression
                                                                        additiveExpression
                                                                          multiplicativeExpression
                                                                            asExpression
                                                                              prefixUnaryExpression
                                                                                postfixUnaryExpression
                                                                                  primaryExpression
                                                                                    simpleIdentifier
                                                                                      Identifier("_")
                                                                                  postfixUnarySuffix
                                                                                    typeArguments
                                                                                      LANGLE("<")
                                                                                      typeProjection
                                                                                        type
                                                                                          nullableType
                                                                                            typeReference
                                                                                              userType
                                                                                                simpleUserType
                                                                                                  simpleIdentifier
                                                                                                    Identifier("String")
                                                                                            quest
                                                                                              QUEST_NO_WS("?")
                                                                                      RANGLE(">")
                                                                                  postfixUnarySuffix
                                                                                    callSuffix
                                                                                      valueArguments
                                                                                        LPAREN("(")
                                                                                        RPAREN(")")
                                                  RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              simpleIdentifier
                                                Identifier("foo")
                                            postfixUnarySuffix
                                              callSuffix
                                                valueArguments
                                                  LPAREN("(")
                                                  valueArgument
                                                    expression
                                                      disjunction
                                                        conjunction
                                                          equality
                                                            comparison
                                                              infixOperation
                                                                elvisExpression
                                                                  infixFunctionCall
                                                                    rangeExpression
                                                                      additiveExpression
                                                                        multiplicativeExpression
                                                                          asExpression
                                                                            prefixUnaryExpression
                                                                              postfixUnaryExpression
                                                                                primaryExpression
                                                                                  simpleIdentifier
                                                                                    Identifier("l")
                                                                                postfixUnarySuffix
                                                                                  navigationSuffix
                                                                                    memberAccessOperator
                                                                                      safeNav
                                                                                        QUEST_NO_WS("?")
                                                                                        DOT(".")
                                                                                    simpleIdentifier
                                                                                      Identifier("gav")
                                                                                postfixUnarySuffix
                                                                                  callSuffix
                                                                                    valueArguments
                                                                                      LPAREN("(")
                                                                                      RPAREN(")")
                                                  RPAREN(")")
                                simpleIdentifier
                                  Identifier("checkType")
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              functionLiteral
                                                lambdaLiteral
                                                  LCURL("{")
                                                  statements
                                                    statement
                                                      expression
                                                        disjunction
                                                          conjunction
                                                            equality
                                                              comparison
                                                                infixOperation
                                                                  elvisExpression
                                                                    infixFunctionCall
                                                                      rangeExpression
                                                                        additiveExpression
                                                                          multiplicativeExpression
                                                                            asExpression
                                                                              prefixUnaryExpression
                                                                                postfixUnaryExpression
                                                                                  primaryExpression
                                                                                    simpleIdentifier
                                                                                      Identifier("_")
                                                                                  postfixUnarySuffix
                                                                                    typeArguments
                                                                                      LANGLE("<")
                                                                                      typeProjection
                                                                                        type
                                                                                          nullableType
                                                                                            typeReference
                                                                                              userType
                                                                                                simpleUserType
                                                                                                  simpleIdentifier
                                                                                                    Identifier("String")
                                                                                            quest
                                                                                              QUEST_NO_WS("?")
                                                                                      RANGLE(">")
                                                                                  postfixUnarySuffix
                                                                                    callSuffix
                                                                                      valueArguments
                                                                                        LPAREN("(")
                                                                                        RPAREN(")")
                                                  RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  EOF("<EOF>")
