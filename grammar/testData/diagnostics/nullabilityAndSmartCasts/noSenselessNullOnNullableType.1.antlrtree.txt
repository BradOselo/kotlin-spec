File: noSenselessNullOnNullableType.1.kt - b594eb080d18957258d3836111c7560c
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("bar")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            whenExpression
              WHEN("when")
              whenSubject
                LPAREN("(")
                expression
                  expression
                    simpleIdentifier
                      Identifier("A")
                  unarySuffix
                    navigationSuffix
                      memberAccessOperator
                        DOT(".")
                      simpleIdentifier
                        Identifier("foo")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        RPAREN(")")
                RPAREN(")")
              LCURL("{")
              NL("\n")
              whenEntry
                whenCondition
                  expression
                    literalConstant
                      NullLiteral("null")
                ARROW("->")
                controlStructureBody
                  statement
                    expression
                      stringLiteral
                        lineStringLiteral
                          QUOTE_OPEN(""")
                          lineStringContent
                            LineStrText("null")
                          QUOTE_CLOSE(""")
                semi
                  NL("\n")
              whenEntry
                ELSE("else")
                ARROW("->")
                controlStructureBody
                  statement
                    expression
                      stringLiteral
                        lineStringLiteral
                          QUOTE_OPEN(""")
                          lineStringContent
                            LineStrText("else")
                          QUOTE_CLOSE(""")
                semi
                  NL("\n")
              RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
            COLON(":")
            type
              nullableType
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Number")
                quest
                  QUEST_NO_WS("?")
          RANGLE(">")
        simpleIdentifier
          Identifier("baz")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("t")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("T")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            whenExpression
              WHEN("when")
              whenSubject
                LPAREN("(")
                expression
                  simpleIdentifier
                    Identifier("t")
                RPAREN(")")
              LCURL("{")
              NL("\n")
              whenEntry
                whenCondition
                  typeTest
                    isOperator
                      IS("is")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Int")
                ARROW("->")
                controlStructureBody
                  statement
                    expression
                      stringLiteral
                        lineStringLiteral
                          QUOTE_OPEN(""")
                          lineStringContent
                            LineStrText("int")
                          QUOTE_CLOSE(""")
                semi
                  NL("\n")
              whenEntry
                whenCondition
                  typeTest
                    isOperator
                      IS("is")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Long")
                ARROW("->")
                controlStructureBody
                  statement
                    expression
                      stringLiteral
                        lineStringLiteral
                          QUOTE_OPEN(""")
                          lineStringContent
                            LineStrText("long")
                          QUOTE_CLOSE(""")
                semi
                  NL("\n")
              whenEntry
                whenCondition
                  expression
                    literalConstant
                      NullLiteral("null")
                ARROW("->")
                controlStructureBody
                  statement
                    expression
                      stringLiteral
                        lineStringLiteral
                          QUOTE_OPEN(""")
                          lineStringContent
                            LineStrText("null")
                          QUOTE_CLOSE(""")
                semi
                  NL("\n")
              whenEntry
                ELSE("else")
                ARROW("->")
                controlStructureBody
                  statement
                    expression
                      stringLiteral
                        lineStringLiteral
                          QUOTE_OPEN(""")
                          lineStringContent
                            LineStrText("else")
                          QUOTE_CLOSE(""")
                semi
                  NL("\n")
              RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
