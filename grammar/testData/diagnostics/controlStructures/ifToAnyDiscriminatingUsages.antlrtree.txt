File: ifToAnyDiscriminatingUsages.kt - c60cff637f319c92b6a4318e203fa8bb
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("println")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Any")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("fooGeneric")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("T")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testResultOfLambda1")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          NL("\n")
          expression
            expression
              simpleIdentifier
                Identifier("run")
            unarySuffix
              callSuffix
                annotatedLambda
                  lambdaLiteral
                    LCURL("{")
                    NL("\n")
                    statements
                      statement
                        expression
                          ifExpression
                            IF("if")
                            LPAREN("(")
                            expression
                              literalConstant
                                BooleanLiteral("true")
                            RPAREN(")")
                            controlStructureBody
                              statement
                                expression
                                  literalConstant
                                    IntegerLiteral("42")
                            ELSE("else")
                            controlStructureBody
                              statement
                                expression
                                  expression
                                    simpleIdentifier
                                      Identifier("println")
                                  unarySuffix
                                    callSuffix
                                      valueArguments
                                        LPAREN("(")
                                        RPAREN(")")
                      semis
                        NL("\n")
                    RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testResultOfLambda2")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          NL("\n")
          expression
            expression
              simpleIdentifier
                Identifier("run")
            unarySuffix
              callSuffix
                annotatedLambda
                  lambdaLiteral
                    LCURL("{")
                    NL("\n")
                    statements
                      statement
                        expression
                          ifExpression
                            IF("if")
                            LPAREN("(")
                            expression
                              literalConstant
                                BooleanLiteral("true")
                            RPAREN(")")
                            controlStructureBody
                              statement
                                expression
                                  literalConstant
                                    IntegerLiteral("42")
                            ELSE("else")
                            controlStructureBody
                              statement
                                expression
                                  ifExpression
                                    IF("if")
                                    LPAREN("(")
                                    expression
                                      literalConstant
                                        BooleanLiteral("true")
                                    RPAREN(")")
                                    controlStructureBody
                                      statement
                                        expression
                                          literalConstant
                                            IntegerLiteral("42")
                                    ELSE("else")
                                    controlStructureBody
                                      statement
                                        expression
                                          expression
                                            simpleIdentifier
                                              Identifier("println")
                                          unarySuffix
                                            callSuffix
                                              valueArguments
                                                LPAREN("(")
                                                RPAREN(")")
                      semis
                        NL("\n")
                    RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testResultOfAnonFun1")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          NL("\n")
          expression
            expression
              simpleIdentifier
                Identifier("run")
            unarySuffix
              callSuffix
                valueArguments
                  LPAREN("(")
                  valueArgument
                    expression
                      functionLiteral
                        anonymousFunction
                          FUN("fun")
                          parametersWithOptionalType
                            LPAREN("(")
                            RPAREN(")")
                          functionBody
                            ASSIGNMENT("=")
                            expression
                              ifExpression
                                IF("if")
                                LPAREN("(")
                                expression
                                  literalConstant
                                    BooleanLiteral("true")
                                RPAREN(")")
                                controlStructureBody
                                  statement
                                    expression
                                      literalConstant
                                        IntegerLiteral("42")
                                ELSE("else")
                                controlStructureBody
                                  statement
                                    expression
                                      expression
                                        simpleIdentifier
                                          Identifier("println")
                                      unarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            RPAREN(")")
                  RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testResultOfAnonFun2")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          NL("\n")
          expression
            expression
              simpleIdentifier
                Identifier("run")
            unarySuffix
              callSuffix
                valueArguments
                  LPAREN("(")
                  valueArgument
                    expression
                      functionLiteral
                        anonymousFunction
                          FUN("fun")
                          parametersWithOptionalType
                            LPAREN("(")
                            RPAREN(")")
                          functionBody
                            block
                              LCURL("{")
                              NL("\n")
                              statements
                                statement
                                  expression
                                    ifExpression
                                      IF("if")
                                      LPAREN("(")
                                      expression
                                        literalConstant
                                          BooleanLiteral("true")
                                      RPAREN(")")
                                      controlStructureBody
                                        statement
                                          expression
                                            literalConstant
                                              IntegerLiteral("42")
                                      ELSE("else")
                                      controlStructureBody
                                        statement
                                          expression
                                            expression
                                              simpleIdentifier
                                                Identifier("println")
                                            unarySuffix
                                              callSuffix
                                                valueArguments
                                                  LPAREN("(")
                                                  RPAREN(")")
                                semis
                                  NL("\n")
                              RCURL("}")
                  RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testReturnFromAnonFun")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          NL("\n")
          expression
            expression
              simpleIdentifier
                Identifier("run")
            unarySuffix
              callSuffix
                valueArguments
                  LPAREN("(")
                  valueArgument
                    expression
                      functionLiteral
                        anonymousFunction
                          FUN("fun")
                          parametersWithOptionalType
                            LPAREN("(")
                            RPAREN(")")
                          functionBody
                            block
                              LCURL("{")
                              NL("\n")
                              statements
                                statement
                                  expression
                                    jumpExpression
                                      RETURN("return")
                                      expression
                                        ifExpression
                                          IF("if")
                                          LPAREN("(")
                                          expression
                                            literalConstant
                                              BooleanLiteral("true")
                                          RPAREN(")")
                                          controlStructureBody
                                            statement
                                              expression
                                                literalConstant
                                                  IntegerLiteral("42")
                                          ELSE("else")
                                          controlStructureBody
                                            statement
                                              expression
                                                expression
                                                  simpleIdentifier
                                                    Identifier("println")
                                                unarySuffix
                                                  callSuffix
                                                    valueArguments
                                                      LPAREN("(")
                                                      RPAREN(")")
                                semis
                                  NL("\n")
                              RCURL("}")
                  RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testReturn1")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          NL("\n")
          expression
            expression
              simpleIdentifier
                Identifier("run")
            unarySuffix
              callSuffix
                annotatedLambda
                  lambdaLiteral
                    LCURL("{")
                    NL("\n")
                    statements
                      statement
                        expression
                          jumpExpression
                            RETURN("return")
                            expression
                              ifExpression
                                IF("if")
                                LPAREN("(")
                                expression
                                  literalConstant
                                    BooleanLiteral("true")
                                RPAREN(")")
                                controlStructureBody
                                  statement
                                    expression
                                      literalConstant
                                        IntegerLiteral("42")
                                NL("\n")
                                ELSE("else")
                                controlStructureBody
                                  statement
                                    expression
                                      expression
                                        simpleIdentifier
                                          Identifier("println")
                                      unarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            RPAREN(")")
                      semis
                        NL("\n")
                    RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testReturn2")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          NL("\n")
          expression
            expression
              simpleIdentifier
                Identifier("run")
            unarySuffix
              callSuffix
                annotatedLambda
                  lambdaLiteral
                    LCURL("{")
                    NL("\n")
                    statements
                      statement
                        expression
                          jumpExpression
                            RETURN("return")
                            expression
                              ifExpression
                                IF("if")
                                LPAREN("(")
                                expression
                                  literalConstant
                                    BooleanLiteral("true")
                                RPAREN(")")
                                controlStructureBody
                                  statement
                                    expression
                                      literalConstant
                                        IntegerLiteral("42")
                                NL("\n")
                                ELSE("else")
                                controlStructureBody
                                  statement
                                    expression
                                      ifExpression
                                        IF("if")
                                        LPAREN("(")
                                        expression
                                          literalConstant
                                            BooleanLiteral("true")
                                        RPAREN(")")
                                        controlStructureBody
                                          statement
                                            expression
                                              literalConstant
                                                IntegerLiteral("42")
                                        NL("\n")
                                        ELSE("else")
                                        controlStructureBody
                                          statement
                                            expression
                                              expression
                                                simpleIdentifier
                                                  Identifier("println")
                                              unarySuffix
                                                callSuffix
                                                  valueArguments
                                                    LPAREN("(")
                                                    RPAREN(")")
                      semis
                        NL("\n")
                    RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testUsage1")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          NL("\n")
          expression
            ifExpression
              IF("if")
              LPAREN("(")
              expression
                literalConstant
                  BooleanLiteral("true")
              RPAREN(")")
              controlStructureBody
                statement
                  expression
                    literalConstant
                      IntegerLiteral("42")
              NL("\n")
              ELSE("else")
              controlStructureBody
                statement
                  expression
                    expression
                      simpleIdentifier
                        Identifier("println")
                    unarySuffix
                      callSuffix
                        valueArguments
                          LPAREN("(")
                          RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testUsage2")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          NL("\n")
          expression
            expression
              simpleIdentifier
                Identifier("foo")
            unarySuffix
              callSuffix
                valueArguments
                  LPAREN("(")
                  valueArgument
                    expression
                      ifExpression
                        IF("if")
                        LPAREN("(")
                        expression
                          literalConstant
                            BooleanLiteral("true")
                        RPAREN(")")
                        controlStructureBody
                          statement
                            expression
                              literalConstant
                                IntegerLiteral("42")
                        ELSE("else")
                        controlStructureBody
                          statement
                            expression
                              expression
                                simpleIdentifier
                                  Identifier("println")
                              unarySuffix
                                callSuffix
                                  valueArguments
                                    LPAREN("(")
                                    RPAREN(")")
                  RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testUsage2Generic")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          NL("\n")
          expression
            expression
              simpleIdentifier
                Identifier("fooGeneric")
            unarySuffix
              callSuffix
                valueArguments
                  LPAREN("(")
                  valueArgument
                    expression
                      ifExpression
                        IF("if")
                        LPAREN("(")
                        expression
                          literalConstant
                            BooleanLiteral("true")
                        RPAREN(")")
                        controlStructureBody
                          statement
                            expression
                              literalConstant
                                IntegerLiteral("42")
                        ELSE("else")
                        controlStructureBody
                          statement
                            expression
                              expression
                                simpleIdentifier
                                  Identifier("println")
                              unarySuffix
                                callSuffix
                                  valueArguments
                                    LPAREN("(")
                                    RPAREN(")")
                  RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("testUsage3")
        ASSIGNMENT("=")
        NL("\n")
        expression
          ifExpression
            IF("if")
            LPAREN("(")
            expression
              literalConstant
                BooleanLiteral("true")
            RPAREN(")")
            controlStructureBody
              statement
                expression
                  literalConstant
                    IntegerLiteral("42")
            NL("\n")
            ELSE("else")
            controlStructureBody
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("println")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        RPAREN(")")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("testUsage4")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Any")
        getter
          GET("get")
          LPAREN("(")
          RPAREN(")")
          functionBody
            ASSIGNMENT("=")
            NL("\n")
            expression
              ifExpression
                IF("if")
                LPAREN("(")
                expression
                  literalConstant
                    BooleanLiteral("true")
                RPAREN(")")
                controlStructureBody
                  statement
                    expression
                      literalConstant
                        IntegerLiteral("42")
                ELSE("else")
                controlStructureBody
                  statement
                    expression
                      expression
                        simpleIdentifier
                          Identifier("println")
                      unarySuffix
                        callSuffix
                          valueArguments
                            LPAREN("(")
                            RPAREN(")")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
