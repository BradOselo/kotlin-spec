File: notAFunctionLabel_after.kt - 68fc699e2c5dcb4983f69012ad35eee7
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                constructorInvocation
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Target")
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        expression
                          simpleIdentifier
                            Identifier("AnnotationTarget")
                        unarySuffix
                          navigationSuffix
                            memberAccessOperator
                              DOT(".")
                            simpleIdentifier
                              Identifier("EXPRESSION")
                    RPAREN(")")
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                constructorInvocation
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Retention")
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        expression
                          simpleIdentifier
                            Identifier("AnnotationRetention")
                        unarySuffix
                          navigationSuffix
                            memberAccessOperator
                              DOT(".")
                            simpleIdentifier
                              Identifier("SOURCE")
                    RPAREN(")")
            NL("\n")
          modifier
            classModifier
              ANNOTATION("annotation")
        CLASS("class")
        simpleIdentifier
          Identifier("Ann")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testFunctionName")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  jumpExpression
                    RETURN_AT("return@testFunctionName")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testHighOrderFunctionName")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("run")
                  unarySuffix
                    callSuffix
                      annotatedLambda
                        lambdaLiteral
                          LCURL("{")
                          NL("\n")
                          statements
                            statement
                              expression
                                jumpExpression
                                  RETURN_AT("return@run")
                            semis
                              NL("\n")
                          RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testLambdaLabel")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          NL("\n")
          expression
            unaryPrefix
              label
                simpleIdentifier
                  Identifier("lambda")
                AT_POST_WS("@ ")
            expression
              functionLiteral
                lambdaLiteral
                  LCURL("{")
                  NL("\n")
                  statements
                    statement
                      expression
                        jumpExpression
                          RETURN_AT("return@lambda")
                    semis
                      NL("\n")
                  RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testParenthesizedLambdaLabel")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          NL("\n")
          expression
            unaryPrefix
              label
                simpleIdentifier
                  Identifier("lambda")
                AT_POST_WS("@ ")
            expression
              parenthesizedExpression
                LPAREN("(")
                expression
                  functionLiteral
                    lambdaLiteral
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          expression
                            jumpExpression
                              RETURN_AT("return@lambda")
                        semis
                          NL("\n")
                      RCURL("}")
                RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testAnnotatedLambdaLabel")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          NL("\n")
          expression
            unaryPrefix
              label
                simpleIdentifier
                  Identifier("lambda")
                AT_POST_WS("@ ")
            unaryPrefix
              annotation
                singleAnnotation
                  AT_NO_WS("@")
                  unescapedAnnotation
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("Ann")
            expression
              functionLiteral
                lambdaLiteral
                  LCURL("{")
                  NL("\n")
                  statements
                    statement
                      expression
                        jumpExpression
                          RETURN_AT("return@lambda")
                    semis
                      NL("\n")
                  RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testLambdaMultipleLabels1")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          NL("\n")
          expression
            unaryPrefix
              label
                simpleIdentifier
                  Identifier("lambda1")
                AT_POST_WS("@ ")
            unaryPrefix
              label
                simpleIdentifier
                  Identifier("lambda2")
                AT_POST_WS("@ ")
            expression
              functionLiteral
                lambdaLiteral
                  LCURL("{")
                  NL("\n")
                  statements
                    statement
                      expression
                        jumpExpression
                          RETURN_AT("return@lambda1")
                    semis
                      NL("\n")
                  RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testLambdaMultipleLabels2")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          NL("\n")
          expression
            unaryPrefix
              label
                simpleIdentifier
                  Identifier("lambda1")
                AT_POST_WS("@ ")
            unaryPrefix
              label
                simpleIdentifier
                  Identifier("lambda2")
                AT_POST_WS("@ ")
            expression
              functionLiteral
                lambdaLiteral
                  LCURL("{")
                  NL("\n")
                  statements
                    statement
                      expression
                        jumpExpression
                          RETURN_AT("return@lambda2")
                    semis
                      NL("\n")
                  RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testAnonymousFunctionLabel")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          NL("\n")
          expression
            unaryPrefix
              label
                simpleIdentifier
                  Identifier("anonFun")
                AT_POST_WS("@ ")
            expression
              functionLiteral
                anonymousFunction
                  FUN("fun")
                  parametersWithOptionalType
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          expression
                            jumpExpression
                              RETURN_AT("return@anonFun")
                        semis
                          NL("\n")
                      RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testLoopLabelInReturn")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("xs")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("List")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Int")
                        RANGLE(">")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                label
                  simpleIdentifier
                    Identifier("L")
                  AT_POST_WS("@ ")
                loopStatement
                  forStatement
                    FOR("for")
                    LPAREN("(")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("x")
                    IN("in")
                    expression
                      simpleIdentifier
                        Identifier("xs")
                    RPAREN(")")
                    controlStructureBody
                      block
                        LCURL("{")
                        NL("\n")
                        statements
                          statement
                            expression
                              ifExpression
                                IF("if")
                                LPAREN("(")
                                expression
                                  expression
                                    simpleIdentifier
                                      Identifier("x")
                                  comparisonOperator
                                    RANGLE(">")
                                  expression
                                    literalConstant
                                      IntegerLiteral("0")
                                RPAREN(")")
                                controlStructureBody
                                  statement
                                    expression
                                      jumpExpression
                                        RETURN_AT("return@L")
                          semis
                            NL("\n")
                        RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testValLabelInReturn")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                label
                  simpleIdentifier
                    Identifier("L")
                  AT_POST_WS("@ ")
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("fn")
                    ASSIGNMENT("=")
                    expression
                      functionLiteral
                        lambdaLiteral
                          LCURL("{")
                          statements
                            statement
                              expression
                                jumpExpression
                                  RETURN_AT("return@L")
                          RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("fn")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testHighOrderFunctionCallLabelInReturn")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                label
                  simpleIdentifier
                    Identifier("L")
                  AT_POST_WS("@ ")
                expression
                  expression
                    simpleIdentifier
                      Identifier("run")
                  unarySuffix
                    callSuffix
                      annotatedLambda
                        lambdaLiteral
                          LCURL("{")
                          NL("\n")
                          statements
                            statement
                              expression
                                jumpExpression
                                  RETURN_AT("return@L")
                            semis
                              NL("\n")
                          RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
