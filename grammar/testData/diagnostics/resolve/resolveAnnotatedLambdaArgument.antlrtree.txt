File: resolveAnnotatedLambdaArgument.kt - 17a10c3f9e1d353bdcce0315e55f6681
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                constructorInvocation
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Target")
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        expression
                          simpleIdentifier
                            Identifier("AnnotationTarget")
                        unarySuffix
                          navigationSuffix
                            memberAccessOperator
                              DOT(".")
                            simpleIdentifier
                              Identifier("EXPRESSION")
                    RPAREN(")")
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                constructorInvocation
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Retention")
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        expression
                          simpleIdentifier
                            Identifier("AnnotationRetention")
                        unarySuffix
                          navigationSuffix
                            memberAccessOperator
                              DOT(".")
                            simpleIdentifier
                              Identifier("SOURCE")
                    RPAREN(")")
          annotation
            singleAnnotation
              AT_PRE_WS("\n@")
              unescapedAnnotation
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Repeatable")
            NL("\n")
          modifier
            classModifier
              ANNOTATION("annotation")
        CLASS("class")
        simpleIdentifier
          Identifier("Ann")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("bar")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("block")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Int")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  expression
                    expression
                      simpleIdentifier
                        Identifier("bar")
                    comparisonOperator
                      LANGLE("<")
                    expression
                      simpleIdentifier
                        Identifier("Int")
                  comparisonOperator
                    RANGLE(">")
                  expression
                    unaryPrefix
                      annotation
                        singleAnnotation
                          AT_PRE_WS(" @")
                          unescapedAnnotation
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Ann")
                    unaryPrefix
                      annotation
                        multiAnnotation
                          AT_PRE_WS(" @")
                          LSQUARE("[")
                          unescapedAnnotation
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Ann")
                          RSQUARE("]")
                    expression
                      functionLiteral
                        lambdaLiteral
                          LCURL("{")
                          lambdaParameters
                            lambdaParameter
                              variableDeclaration
                                simpleIdentifier
                                  Identifier("x")
                          ARROW("->")
                          statements
                            statement
                              expression
                                simpleIdentifier
                                  Identifier("x")
                          RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  expression
                    expression
                      simpleIdentifier
                        Identifier("bar")
                    comparisonOperator
                      LANGLE("<")
                    expression
                      simpleIdentifier
                        Identifier("Int")
                  comparisonOperator
                    RANGLE(">")
                  expression
                    unaryPrefix
                      annotation
                        singleAnnotation
                          AT_PRE_WS(" @")
                          unescapedAnnotation
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Ann")
                    unaryPrefix
                      annotation
                        multiAnnotation
                          AT_PRE_WS(" @")
                          LSQUARE("[")
                          unescapedAnnotation
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Ann")
                          RSQUARE("]")
                    unaryPrefix
                      label
                        simpleIdentifier
                          Identifier("label")
                        AT_NO_WS("@")
                    expression
                      functionLiteral
                        lambdaLiteral
                          LCURL("{")
                          lambdaParameters
                            lambdaParameter
                              variableDeclaration
                                simpleIdentifier
                                  Identifier("x")
                          ARROW("->")
                          statements
                            statement
                              expression
                                simpleIdentifier
                                  Identifier("x")
                          RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
