File: extensionReceiverAndVarargs.kt - c3642ae2d96b1d86fbea45fdf4358925
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      objectDeclaration
        OBJECT("object")
        simpleIdentifier
          Identifier("Right")
    semis
      NL("\n")
  topLevelObject
    declaration
      objectDeclaration
        OBJECT("object")
        simpleIdentifier
          Identifier("Wrong")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("IA")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("IB")
        COLON(":")
        delegationSpecifiers
          annotatedDelegationSpecifier
            delegationSpecifier
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("IA")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        receiverType
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("IA")
        DOT(".")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameterModifiers
              parameterModifier
                VARARG("vararg")
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            simpleIdentifier
              Identifier("Wrong")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        receiverType
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("IB")
        DOT(".")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameterModifiers
              parameterModifier
                VARARG("vararg")
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            simpleIdentifier
              Identifier("Right")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("CC")
        COLON(":")
        delegationSpecifiers
          annotatedDelegationSpecifier
            delegationSpecifier
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("IB")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("test7")
        ASSIGNMENT("=")
        expression
          expression
            simpleIdentifier
              Identifier("CC")
          unarySuffix
            callSuffix
              valueArguments
                LPAREN("(")
                RPAREN(")")
          unarySuffix
            navigationSuffix
              memberAccessOperator
                DOT(".")
              simpleIdentifier
                Identifier("foo")
          unarySuffix
            callSuffix
              valueArguments
                LPAREN("(")
                valueArgument
                  expression
                    literalConstant
                      IntegerLiteral("1")
                COMMA(",")
                valueArgument
                  expression
                    literalConstant
                      IntegerLiteral("2")
                COMMA(",")
                valueArgument
                  expression
                    literalConstant
                      IntegerLiteral("3")
                RPAREN(")")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
