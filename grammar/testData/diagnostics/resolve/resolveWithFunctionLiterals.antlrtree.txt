File: resolveWithFunctionLiterals.kt - f1e04c3d9e03aa4c3e68f0a67dd3018b
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      objectDeclaration
        OBJECT("object")
        simpleIdentifier
          Identifier("A")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAL("val")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("iii")
                  ASSIGNMENT("=")
                  expression
                    literalConstant
                      IntegerLiteral("42")
                  NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
      NL("\n")
      NL("\n")
      NL("\n")
      NL("\n")
      NL("\n")
      NL("\n")
      NL("\n")
      NL("\n")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("i")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("f")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Int")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Int")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            expression
              simpleIdentifier
                Identifier("f")
            unarySuffix
              callSuffix
                valueArguments
                  LPAREN("(")
                  valueArgument
                    expression
                      simpleIdentifier
                        Identifier("i")
                  RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("foo")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        valueArgument
                          expression
                            literalConstant
                              IntegerLiteral("1")
                        RPAREN(")")
                      annotatedLambda
                        lambdaLiteral
                          LCURL("{")
                          lambdaParameters
                            lambdaParameter
                              variableDeclaration
                                simpleIdentifier
                                  Identifier("x1")
                                COLON(":")
                                type
                                  typeReference
                                    userType
                                      simpleUserType
                                        simpleIdentifier
                                          Identifier("Int")
                          ARROW("->")
                          NL("\n")
                          statements
                            statement
                              expression
                                expression
                                  simpleIdentifier
                                    Identifier("foo")
                                unarySuffix
                                  callSuffix
                                    valueArguments
                                      LPAREN("(")
                                      valueArgument
                                        expression
                                          literalConstant
                                            IntegerLiteral("2")
                                      RPAREN(")")
                                    annotatedLambda
                                      lambdaLiteral
                                        LCURL("{")
                                        lambdaParameters
                                          lambdaParameter
                                            variableDeclaration
                                              simpleIdentifier
                                                Identifier("x2")
                                              COLON(":")
                                              type
                                                typeReference
                                                  userType
                                                    simpleUserType
                                                      simpleIdentifier
                                                        Identifier("Int")
                                        ARROW("->")
                                        NL("\n")
                                        statements
                                          statement
                                            expression
                                              expression
                                                simpleIdentifier
                                                  Identifier("foo")
                                              unarySuffix
                                                callSuffix
                                                  valueArguments
                                                    LPAREN("(")
                                                    valueArgument
                                                      expression
                                                        literalConstant
                                                          IntegerLiteral("3")
                                                    RPAREN(")")
                                                  annotatedLambda
                                                    lambdaLiteral
                                                      LCURL("{")
                                                      lambdaParameters
                                                        lambdaParameter
                                                          variableDeclaration
                                                            simpleIdentifier
                                                              Identifier("x3")
                                                            COLON(":")
                                                            type
                                                              typeReference
                                                                userType
                                                                  simpleUserType
                                                                    simpleIdentifier
                                                                      Identifier("Int")
                                                      ARROW("->")
                                                      NL("\n")
                                                      statements
                                                        statement
                                                          expression
                                                            expression
                                                              simpleIdentifier
                                                                Identifier("foo")
                                                            unarySuffix
                                                              callSuffix
                                                                valueArguments
                                                                  LPAREN("(")
                                                                  valueArgument
                                                                    expression
                                                                      literalConstant
                                                                        IntegerLiteral("4")
                                                                  RPAREN(")")
                                                                annotatedLambda
                                                                  lambdaLiteral
                                                                    LCURL("{")
                                                                    lambdaParameters
                                                                      lambdaParameter
                                                                        variableDeclaration
                                                                          simpleIdentifier
                                                                            Identifier("x4")
                                                                          COLON(":")
                                                                          type
                                                                            typeReference
                                                                              userType
                                                                                simpleUserType
                                                                                  simpleIdentifier
                                                                                    Identifier("Int")
                                                                    ARROW("->")
                                                                    NL("\n")
                                                                    statements
                                                                      statement
                                                                        expression
                                                                          expression
                                                                            simpleIdentifier
                                                                              Identifier("foo")
                                                                          unarySuffix
                                                                            callSuffix
                                                                              valueArguments
                                                                                LPAREN("(")
                                                                                valueArgument
                                                                                  expression
                                                                                    literalConstant
                                                                                      IntegerLiteral("5")
                                                                                RPAREN(")")
                                                                              annotatedLambda
                                                                                lambdaLiteral
                                                                                  LCURL("{")
                                                                                  lambdaParameters
                                                                                    lambdaParameter
                                                                                      variableDeclaration
                                                                                        simpleIdentifier
                                                                                          Identifier("x5")
                                                                                        COLON(":")
                                                                                        type
                                                                                          typeReference
                                                                                            userType
                                                                                              simpleUserType
                                                                                                simpleIdentifier
                                                                                                  Identifier("Int")
                                                                                  ARROW("->")
                                                                                  NL("\n")
                                                                                  statements
                                                                                    statement
                                                                                      expression
                                                                                        expression
                                                                                          expression
                                                                                            expression
                                                                                              expression
                                                                                                expression
                                                                                                  simpleIdentifier
                                                                                                    Identifier("x1")
                                                                                                additiveOperator
                                                                                                  ADD("+")
                                                                                                expression
                                                                                                  simpleIdentifier
                                                                                                    Identifier("x2")
                                                                                              additiveOperator
                                                                                                ADD("+")
                                                                                              expression
                                                                                                simpleIdentifier
                                                                                                  Identifier("x3")
                                                                                            additiveOperator
                                                                                              ADD("+")
                                                                                            expression
                                                                                              simpleIdentifier
                                                                                                Identifier("x4")
                                                                                          additiveOperator
                                                                                            ADD("+")
                                                                                          expression
                                                                                            simpleIdentifier
                                                                                              Identifier("x5")
                                                                                        additiveOperator
                                                                                          ADD("+")
                                                                                        expression
                                                                                          expression
                                                                                            simpleIdentifier
                                                                                              Identifier("A")
                                                                                          unarySuffix
                                                                                            navigationSuffix
                                                                                              memberAccessOperator
                                                                                                DOT(".")
                                                                                              simpleIdentifier
                                                                                                Identifier("iii")
                                                                                    semis
                                                                                      NL("\n")
                                                                                  RCURL("}")
                                                                      semis
                                                                        NL("\n")
                                                                    RCURL("}")
                                                        semis
                                                          NL("\n")
                                                      RCURL("}")
                                          semis
                                            NL("\n")
                                        RCURL("}")
                            semis
                              NL("\n")
                          RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
