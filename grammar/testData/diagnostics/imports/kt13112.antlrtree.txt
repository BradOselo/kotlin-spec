File: kt13112.kt - 581cf21c4582e14917f0e1f7b034864a
  NL("\n")
  NL("\n")
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("anotherpackage")
    semi
      NL("\n")
      NL("\n")
  importList
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("IInterfaceInput")
        typeParameters
          LANGLE("<")
          typeParameter
            typeParameterModifiers
              typeParameterModifier
                varianceModifier
                  IN("in")
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("doSomething")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("input")
                        COLON(":")
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("T")
                    RPAREN(")")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
      NL("\n")
  PACKAGE("package")
  Identifier("anotherpackage")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("IInterfaceOutput")
        typeParameters
          LANGLE("<")
          typeParameter
            typeParameterModifiers
              typeParameterModifier
                varianceModifier
                  OUT("out")
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("doSomething")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  COLON(":")
                  type
                    nullableType
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                      quest
                        QUEST_NO_WS("?")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
      NL("\n")
  PACKAGE("package")
  Identifier("mypackage")
  DOT(".")
  Identifier("nestedpackage")
  NL("\n")
  NL("\n")
  IMPORT("import")
  Identifier("mypackage")
  DOT(".")
  Identifier("nestedpackage")
  DOT(".")
  Identifier("Bar")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNRESOLVED_REFERENCE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("Baz")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  IMPORT("import")
  Identifier("anotherpackage")
  DOT(".")
  Identifier("IInterfaceInput")
  NL("\n")
  IMPORT("import")
  Identifier("anotherpackage")
  DOT(".")
  Identifier("IInterfaceOutput")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Foo")
        primaryConstructor
          classParameters
            LPAREN("(")
            RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("FooNest")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("bar")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("Bar")
                                    postfixUnarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          RPAREN(")")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("myFun")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("List")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Baz")
                  RANGLE(">")
  LCURL("{")
  NL("\n")
  RETURN("return")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("UNRESOLVED_REFERENCE")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("listOf")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  LPAREN("(")
  Identifier("bar")
  DOT(".")
  Identifier("doSomething")
  LPAREN("(")
  RPAREN(")")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Bar")
        primaryConstructor
          classParameters
            LPAREN("(")
            RPAREN(")")
        COLON(":")
        delegationSpecifiers
          annotatedDelegationSpecifier
            delegationSpecifier
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("IInterfaceInput")
                  typeArguments
                    LANGLE("<")
                    typeProjection
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Baz")
                    RANGLE(">")
          COMMA(",")
          annotatedDelegationSpecifier
            delegationSpecifier
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("IInterfaceOutput")
                  typeArguments
                    LANGLE("<")
                    typeProjection
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Baz")
                    RANGLE(">")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      memberModifier
                        OVERRIDE("override")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("doSomething")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("input")
                        COLON(":")
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Baz")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          expression
                            disjunction
                              conjunction
                                equality
                                  comparison
                                    infixOperation
                                      elvisExpression
                                        infixFunctionCall
                                          rangeExpression
                                            additiveExpression
                                              multiplicativeExpression
                                                asExpression
                                                  prefixUnaryExpression
                                                    postfixUnaryExpression
                                                      primaryExpression
                                                        jumpExpression
                                                          THROW("throw")
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    infixOperation
                                                                      elvisExpression
                                                                        infixFunctionCall
                                                                          rangeExpression
                                                                            additiveExpression
                                                                              multiplicativeExpression
                                                                                asExpression
                                                                                  prefixUnaryExpression
                                                                                    postfixUnaryExpression
                                                                                      primaryExpression
                                                                                        simpleIdentifier
                                                                                          Identifier("UnsupportedOperationException")
                                                                                      postfixUnarySuffix
                                                                                        callSuffix
                                                                                          valueArguments
                                                                                            LPAREN("(")
                                                                                            valueArgument
                                                                                              expression
                                                                                                disjunction
                                                                                                  conjunction
                                                                                                    equality
                                                                                                      comparison
                                                                                                        infixOperation
                                                                                                          elvisExpression
                                                                                                            infixFunctionCall
                                                                                                              rangeExpression
                                                                                                                additiveExpression
                                                                                                                  multiplicativeExpression
                                                                                                                    asExpression
                                                                                                                      prefixUnaryExpression
                                                                                                                        postfixUnaryExpression
                                                                                                                          primaryExpression
                                                                                                                            stringLiteral
                                                                                                                              lineStringLiteral
                                                                                                                                QUOTE_OPEN(""")
                                                                                                                                lineStringContent
                                                                                                                                  LineStrText("not implemented")
                                                                                                                                QUOTE_CLOSE(""")
                                                                                            RPAREN(")")
                        semis
                          NL("\n")
                      RCURL("}")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      memberModifier
                        OVERRIDE("override")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("doSomething")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  COLON(":")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Baz")
                  functionBody
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          expression
                            disjunction
                              conjunction
                                equality
                                  comparison
                                    infixOperation
                                      elvisExpression
                                        infixFunctionCall
                                          rangeExpression
                                            additiveExpression
                                              multiplicativeExpression
                                                asExpression
                                                  prefixUnaryExpression
                                                    postfixUnaryExpression
                                                      primaryExpression
                                                        jumpExpression
                                                          THROW("throw")
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    infixOperation
                                                                      elvisExpression
                                                                        infixFunctionCall
                                                                          rangeExpression
                                                                            additiveExpression
                                                                              multiplicativeExpression
                                                                                asExpression
                                                                                  prefixUnaryExpression
                                                                                    postfixUnaryExpression
                                                                                      primaryExpression
                                                                                        simpleIdentifier
                                                                                          Identifier("UnsupportedOperationException")
                                                                                      postfixUnarySuffix
                                                                                        callSuffix
                                                                                          valueArguments
                                                                                            LPAREN("(")
                                                                                            valueArgument
                                                                                              expression
                                                                                                disjunction
                                                                                                  conjunction
                                                                                                    equality
                                                                                                      comparison
                                                                                                        infixOperation
                                                                                                          elvisExpression
                                                                                                            infixFunctionCall
                                                                                                              rangeExpression
                                                                                                                additiveExpression
                                                                                                                  multiplicativeExpression
                                                                                                                    asExpression
                                                                                                                      prefixUnaryExpression
                                                                                                                        postfixUnaryExpression
                                                                                                                          primaryExpression
                                                                                                                            stringLiteral
                                                                                                                              lineStringLiteral
                                                                                                                                QUOTE_OPEN(""")
                                                                                                                                lineStringContent
                                                                                                                                  LineStrText("not implemented")
                                                                                                                                QUOTE_CLOSE(""")
                                                                                            RPAREN(")")
                        semis
                          NL("\n")
                      RCURL("}")
            semis
              NL("\n")
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            classModifier
              DATA("data")
        CLASS("class")
        simpleIdentifier
          Identifier("Baz")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("myField")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
            RPAREN(")")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
