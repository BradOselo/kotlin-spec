File: ImportClassClash.kt - fe85c1e370a68b9e757db571dcd523ce
  NL("\n")
  NL("\n")
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("a")
    semi
      NL("\n")
      NL("\n")
  importList
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("someFun")
        primaryConstructor
          classParameters
            LPAREN("(")
            RPAREN(")")
        classBody
          LCURL("{")
          classMemberDeclarations
          RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("someFun")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("i")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("someVal")
        primaryConstructor
          classParameters
            LPAREN("(")
            RPAREN(")")
        classBody
          LCURL("{")
          classMemberDeclarations
          RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        receiverType
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        DOT(".")
        variableDeclaration
          simpleIdentifier
            Identifier("someVal")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        getter
          GETTER("get")
          LPAREN("(")
          RPAREN(")")
          functionBody
            ASSIGNMENT("=")
            expression
              disjunction
                conjunction
                  equality
                    comparison
                      infixOperation
                        elvisExpression
                          infixFunctionCall
                            rangeExpression
                              additiveExpression
                                multiplicativeExpression
                                  asExpression
                                    prefixUnaryExpression
                                      postfixUnaryExpression
                                        primaryExpression
                                          literalConstant
                                            IntegerLiteral("3")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("A")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("B")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  PACKAGE("package")
  Identifier("b")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("someFun")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("someVal")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("someAll")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("A")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("B")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
      NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("CONFLICTING_IMPORT")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("someFun")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  IMPORT("import")
  Identifier("b")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("CONFLICTING_IMPORT")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("someFun")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("CONFLICTING_IMPORT")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("someVal")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  IMPORT("import")
  Identifier("b")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("CONFLICTING_IMPORT")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("someVal")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("A")
  NL("\n")
  IMPORT("import")
  Identifier("b")
  DOT(".")
  Identifier("A")
  NL("\n")
  NL("\n")
  NL("\n")
  IMPORT("import")
  Identifier("b")
  DOT(".")
  MULT("*")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("B")
  NL("\n")
  NL("\n")
  NL("\n")
  PACKAGE("package")
  Identifier("b")
  NL("\n")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("B")
  NL("\n")
  NL("\n")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("CONFLICTING_IMPORT")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("B")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  NL("\n")
  IMPORT("import")
  Identifier("b")
  DOT(".")
  LANGLE("<")
  EXCL_NO_WS("!")
  Identifier("CONFLICTING_IMPORT")
  EXCL_NO_WS("!")
  RANGLE(">")
  Identifier("B")
  LANGLE("<")
  EXCL_NO_WS("!")
  RANGLE(">")
  EOF("<EOF>")
