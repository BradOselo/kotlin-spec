File: lambdaAsArgument.kt - d6a839af0e0e3e773d845e5260aae7d2
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        receiverType
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("A")
        DOT(".")
        simpleIdentifier
          Identifier("foobar")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            literalConstant
              IntegerLiteral("3")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("A")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("foo")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      literalConstant
                        IntegerLiteral("1")
            semis
              NL("\n")
            classMemberDeclaration
              secondaryConstructor
                CONSTRUCTOR("constructor")
                functionValueParameters
                  LPAREN("(")
                  functionValueParameter
                    parameter
                      simpleIdentifier
                        Identifier("x")
                      COLON(":")
                      type
                        functionType
                          functionTypeParameters
                            LPAREN("(")
                            RPAREN(")")
                          ARROW("->")
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Int")
                  RPAREN(")")
                NL("\n")
            classMemberDeclaration
              secondaryConstructor
                CONSTRUCTOR("constructor")
                functionValueParameters
                  LPAREN("(")
                  RPAREN(")")
                COLON(":")
                constructorDelegationCall
                  THIS("this")
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        functionLiteral
                          lambdaLiteral
                            LCURL("{")
                            NL("\n")
                            statements
                              statement
                                expression
                                  expression
                                    expression
                                      expression
                                        expression
                                          simpleIdentifier
                                            Identifier("foo")
                                        unarySuffix
                                          callSuffix
                                            valueArguments
                                              LPAREN("(")
                                              RPAREN(")")
                                      additiveOperator
                                        ADD("+")
                                      NL("\n")
                                      expression
                                        expression
                                          thisExpression
                                            THIS("this")
                                        unarySuffix
                                          navigationSuffix
                                            memberAccessOperator
                                              DOT(".")
                                            simpleIdentifier
                                              Identifier("foo")
                                        unarySuffix
                                          callSuffix
                                            valueArguments
                                              LPAREN("(")
                                              RPAREN(")")
                                    additiveOperator
                                      ADD("+")
                                    NL("\n")
                                    expression
                                      expression
                                        thisExpression
                                          THIS_AT("this@A")
                                      unarySuffix
                                        navigationSuffix
                                          memberAccessOperator
                                            DOT(".")
                                          simpleIdentifier
                                            Identifier("foo")
                                      unarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            RPAREN(")")
                                  additiveOperator
                                    ADD("+")
                                  NL("\n")
                                  expression
                                    expression
                                      simpleIdentifier
                                        Identifier("foobar")
                                    unarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          RPAREN(")")
                              semis
                                NL("\n")
                            RCURL("}")
                    RPAREN(")")
                NL("\n")
          RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
