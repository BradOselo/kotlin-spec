File: FunctionReturnTypes.kt - 24f042aef92c9186d64a81c4d52318a2
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("none")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("unitEmptyInfer")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("unitEmpty")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Unit")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("unitEmptyReturn")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Unit")
        functionBody
          block
            LCURL("{")
            statements
              statement
                expression
                  jumpExpression
                    RETURN("return")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("unitIntReturn")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Unit")
        functionBody
          block
            LCURL("{")
            statements
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      literalConstant
                        IntegerLiteral("1")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("unitUnitReturn")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Unit")
        functionBody
          block
            LCURL("{")
            statements
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      simpleIdentifier
                        Identifier("Unit")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test1")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Any")
        functionBody
          ASSIGNMENT("=")
          expression
            functionLiteral
              lambdaLiteral
                LCURL("{")
                statements
                  statement
                    expression
                      jumpExpression
                        RETURN("return")
                RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test2")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Any")
        functionBody
          ASSIGNMENT("=")
          expression
            unaryPrefix
              label
                simpleIdentifier
                  Identifier("a")
                AT_POST_WS("@ ")
            expression
              functionLiteral
                lambdaLiteral
                  LCURL("{")
                  statements
                    statement
                      expression
                        jumpExpression
                          RETURN_AT("return@a")
                          expression
                            literalConstant
                              IntegerLiteral("1")
                  RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test3")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Any")
        functionBody
          block
            LCURL("{")
            statements
              statement
                expression
                  jumpExpression
                    RETURN("return")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test4")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          functionType
            functionTypeParameters
              LPAREN("(")
              RPAREN(")")
            ARROW("->")
            type
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Unit")
        functionBody
          ASSIGNMENT("=")
          expression
            functionLiteral
              lambdaLiteral
                LCURL("{")
                statements
                  statement
                    expression
                      jumpExpression
                        RETURN_AT("return@test4")
                RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test5")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Any")
        functionBody
          ASSIGNMENT("=")
          expression
            unaryPrefix
              label
                simpleIdentifier
                  Identifier("l")
                AT_NO_WS("@")
            expression
              functionLiteral
                lambdaLiteral
                  LCURL("{")
                  statements
                    statement
                      expression
                        jumpExpression
                          RETURN_AT("return@l")
                  RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test6")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Any")
        functionBody
          ASSIGNMENT("=")
          expression
            functionLiteral
              lambdaLiteral
                LCURL("{")
                statements
                  statement
                    expression
                      jumpExpression
                        RETURN("return")
                        expression
                          literalConstant
                            IntegerLiteral("1")
                RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("bbb")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      literalConstant
                        IntegerLiteral("1")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("expr")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("StringBuilder")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("c")
                    ASSIGNMENT("=")
                    expression
                      literalConstant
                        CharacterLiteral("'a'")
              semis
                NL("\n")
              statement
                expression
                  whenExpression
                    WHEN("when")
                    whenSubject
                      LPAREN("(")
                      expression
                        simpleIdentifier
                          Identifier("c")
                      RPAREN(")")
                    LCURL("{")
                    NL("\n")
                    whenEntry
                      whenCondition
                        expression
                          expression
                            literalConstant
                              IntegerLiteral("0")
                          unarySuffix
                            navigationSuffix
                              memberAccessOperator
                                DOT(".")
                              simpleIdentifier
                                Identifier("toChar")
                          unarySuffix
                            callSuffix
                              valueArguments
                                LPAREN("(")
                                RPAREN(")")
                      ARROW("->")
                      controlStructureBody
                        statement
                          expression
                            jumpExpression
                              THROW("throw")
                              expression
                                expression
                                  simpleIdentifier
                                    Identifier("Exception")
                                unarySuffix
                                  callSuffix
                                    valueArguments
                                      LPAREN("(")
                                      valueArgument
                                        expression
                                          stringLiteral
                                            lineStringLiteral
                                              QUOTE_OPEN(""")
                                              lineStringContent
                                                LineStrText("zero")
                                              QUOTE_CLOSE(""")
                                      RPAREN(")")
                      semi
                        NL("\n")
                    whenEntry
                      ELSE("else")
                      ARROW("->")
                      controlStructureBody
                        statement
                          expression
                            jumpExpression
                              THROW("throw")
                              expression
                                expression
                                  simpleIdentifier
                                    Identifier("Exception")
                                unarySuffix
                                  callSuffix
                                    valueArguments
                                      LPAREN("(")
                                      valueArgument
                                        expression
                                          expression
                                            stringLiteral
                                              lineStringLiteral
                                                QUOTE_OPEN(""")
                                                lineStringContent
                                                  LineStrText("nonzero")
                                                QUOTE_CLOSE(""")
                                          additiveOperator
                                            ADD("+")
                                          expression
                                            simpleIdentifier
                                              Identifier("c")
                                      RPAREN(")")
                      semi
                        NL("\n")
                    RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("unitShort")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Unit")
        functionBody
          ASSIGNMENT("=")
          expression
            simpleIdentifier
              Identifier("Unit")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("unitShortConv")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Unit")
        functionBody
          ASSIGNMENT("=")
          expression
            literalConstant
              IntegerLiteral("1")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("unitShortNull")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Unit")
        functionBody
          ASSIGNMENT("=")
          expression
            literalConstant
              NullLiteral("null")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("intEmpty")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("intShortInfer")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            literalConstant
              IntegerLiteral("1")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("intShort")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          ASSIGNMENT("=")
          expression
            literalConstant
              IntegerLiteral("1")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("intBlock")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            statements
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      literalConstant
                        IntegerLiteral("1")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("intBlock1")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            statements
              statement
                expression
                  literalConstant
                    IntegerLiteral("1")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("intString")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          ASSIGNMENT("=")
          expression
            stringLiteral
              lineStringLiteral
                QUOTE_OPEN(""")
                lineStringContent
                  LineStrText("s")
                QUOTE_CLOSE(""")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("intFunctionLiteral")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          ASSIGNMENT("=")
          expression
            functionLiteral
              lambdaLiteral
                LCURL("{")
                statements
                  statement
                    expression
                      literalConstant
                        IntegerLiteral("10")
                RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockReturnUnitMismatch")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            statements
              statement
                expression
                  jumpExpression
                    RETURN("return")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockReturnValueTypeMismatch")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            statements
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      literalConstant
                        RealLiteral("3.4")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockReturnValueTypeMatch")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            statements
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      literalConstant
                        IntegerLiteral("1")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockReturnValueTypeMismatchUnit")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            statements
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      simpleIdentifier
                        Identifier("Unit")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockAndAndMismatch")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  expression
                    literalConstant
                      BooleanLiteral("true")
                  CONJ("&&")
                  expression
                    literalConstant
                      BooleanLiteral("false")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockAndAndMismatch1")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      expression
                        literalConstant
                          BooleanLiteral("true")
                      CONJ("&&")
                      expression
                        literalConstant
                          BooleanLiteral("false")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockAndAndMismatch2")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  expression
                    parenthesizedExpression
                      LPAREN("(")
                      expression
                        jumpExpression
                          RETURN("return")
                          expression
                            literalConstant
                              BooleanLiteral("true")
                      RPAREN(")")
                  CONJ("&&")
                  expression
                    parenthesizedExpression
                      LPAREN("(")
                      expression
                        jumpExpression
                          RETURN("return")
                          expression
                            literalConstant
                              BooleanLiteral("false")
                      RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockAndAndMismatch3")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  expression
                    literalConstant
                      BooleanLiteral("true")
                  DISJ("||")
                  expression
                    literalConstant
                      BooleanLiteral("false")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockAndAndMismatch4")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      expression
                        literalConstant
                          BooleanLiteral("true")
                      DISJ("||")
                      expression
                        literalConstant
                          BooleanLiteral("false")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockAndAndMismatch5")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  expression
                    parenthesizedExpression
                      LPAREN("(")
                      expression
                        jumpExpression
                          RETURN("return")
                          expression
                            literalConstant
                              BooleanLiteral("true")
                      RPAREN(")")
                  DISJ("||")
                  expression
                    parenthesizedExpression
                      LPAREN("(")
                      expression
                        jumpExpression
                          RETURN("return")
                          expression
                            literalConstant
                              BooleanLiteral("false")
                      RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockReturnValueTypeMatch1")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      ifExpression
                        IF("if")
                        LPAREN("(")
                        expression
                          expression
                            literalConstant
                              IntegerLiteral("1")
                          comparisonOperator
                            RANGLE(">")
                          expression
                            literalConstant
                              IntegerLiteral("2")
                        RPAREN(")")
                        controlStructureBody
                          statement
                            expression
                              literalConstant
                                RealLiteral("1.0")
                        ELSE("else")
                        controlStructureBody
                          statement
                            expression
                              literalConstant
                                RealLiteral("2.0")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockReturnValueTypeMatch2")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      ifExpression
                        IF("if")
                        LPAREN("(")
                        expression
                          expression
                            literalConstant
                              IntegerLiteral("1")
                          comparisonOperator
                            RANGLE(">")
                          expression
                            literalConstant
                              IntegerLiteral("2")
                        RPAREN(")")
                        controlStructureBody
                          statement
                            expression
                              literalConstant
                                IntegerLiteral("1")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockReturnValueTypeMatch3")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      ifExpression
                        IF("if")
                        LPAREN("(")
                        expression
                          expression
                            literalConstant
                              IntegerLiteral("1")
                          comparisonOperator
                            RANGLE(">")
                          expression
                            literalConstant
                              IntegerLiteral("2")
                        RPAREN(")")
                        ELSE("else")
                        controlStructureBody
                          statement
                            expression
                              literalConstant
                                IntegerLiteral("1")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockReturnValueTypeMatch4")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  ifExpression
                    IF("if")
                    LPAREN("(")
                    expression
                      expression
                        literalConstant
                          IntegerLiteral("1")
                      comparisonOperator
                        RANGLE(">")
                      expression
                        literalConstant
                          IntegerLiteral("2")
                    RPAREN(")")
                    NL("\n")
                    controlStructureBody
                      statement
                        expression
                          jumpExpression
                            RETURN("return")
                            expression
                              literalConstant
                                RealLiteral("1.0")
                    NL("\n")
                    ELSE("else")
                    controlStructureBody
                      statement
                        expression
                          jumpExpression
                            RETURN("return")
                            expression
                              literalConstant
                                RealLiteral("2.0")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockReturnValueTypeMatch5")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  ifExpression
                    IF("if")
                    LPAREN("(")
                    expression
                      expression
                        literalConstant
                          IntegerLiteral("1")
                      comparisonOperator
                        RANGLE(">")
                      expression
                        literalConstant
                          IntegerLiteral("2")
                    RPAREN(")")
                    NL("\n")
                    controlStructureBody
                      statement
                        expression
                          jumpExpression
                            RETURN("return")
                            expression
                              literalConstant
                                RealLiteral("1.0")
              semis
                NL("\n")
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      literalConstant
                        RealLiteral("2.0")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockReturnValueTypeMatch6")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  ifExpression
                    IF("if")
                    LPAREN("(")
                    expression
                      expression
                        literalConstant
                          IntegerLiteral("1")
                      comparisonOperator
                        RANGLE(">")
                      expression
                        literalConstant
                          IntegerLiteral("2")
                    RPAREN(")")
                    NL("\n")
                    ELSE("else")
                    controlStructureBody
                      statement
                        expression
                          jumpExpression
                            RETURN("return")
                            expression
                              literalConstant
                                RealLiteral("1.0")
              semis
                NL("\n")
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      literalConstant
                        RealLiteral("2.0")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockReturnValueTypeMatch7")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  ifExpression
                    IF("if")
                    LPAREN("(")
                    expression
                      expression
                        literalConstant
                          IntegerLiteral("1")
                      comparisonOperator
                        RANGLE(">")
                      expression
                        literalConstant
                          IntegerLiteral("2")
                    RPAREN(")")
                    NL("\n")
                    controlStructureBody
                      statement
                        expression
                          literalConstant
                            RealLiteral("1.0")
                    NL("\n")
                    ELSE("else")
                    controlStructureBody
                      statement
                        expression
                          literalConstant
                            RealLiteral("2.0")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockReturnValueTypeMatch8")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  ifExpression
                    IF("if")
                    LPAREN("(")
                    expression
                      expression
                        literalConstant
                          IntegerLiteral("1")
                      comparisonOperator
                        RANGLE(">")
                      expression
                        literalConstant
                          IntegerLiteral("2")
                    RPAREN(")")
                    NL("\n")
                    controlStructureBody
                      statement
                        expression
                          literalConstant
                            RealLiteral("1.0")
                    NL("\n")
                    ELSE("else")
                    controlStructureBody
                      statement
                        expression
                          literalConstant
                            RealLiteral("2.0")
              semis
                NL("\n")
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      literalConstant
                        IntegerLiteral("1")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockReturnValueTypeMatch9")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  ifExpression
                    IF("if")
                    LPAREN("(")
                    expression
                      expression
                        literalConstant
                          IntegerLiteral("1")
                      comparisonOperator
                        RANGLE(">")
                      expression
                        literalConstant
                          IntegerLiteral("2")
                    RPAREN(")")
                    NL("\n")
                    controlStructureBody
                      statement
                        expression
                          literalConstant
                            RealLiteral("1.0")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockReturnValueTypeMatch10")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      ifExpression
                        IF("if")
                        LPAREN("(")
                        expression
                          expression
                            literalConstant
                              IntegerLiteral("1")
                          comparisonOperator
                            RANGLE(">")
                          expression
                            literalConstant
                              IntegerLiteral("2")
                        RPAREN(")")
                        NL("\n")
                        controlStructureBody
                          statement
                            expression
                              literalConstant
                                IntegerLiteral("1")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockReturnValueTypeMatch11")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  ifExpression
                    IF("if")
                    LPAREN("(")
                    expression
                      expression
                        literalConstant
                          IntegerLiteral("1")
                      comparisonOperator
                        RANGLE(">")
                      expression
                        literalConstant
                          IntegerLiteral("2")
                    RPAREN(")")
                    NL("\n")
                    ELSE("else")
                    controlStructureBody
                      statement
                        expression
                          literalConstant
                            RealLiteral("1.0")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockReturnValueTypeMatch12")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  ifExpression
                    IF("if")
                    LPAREN("(")
                    expression
                      expression
                        literalConstant
                          IntegerLiteral("1")
                      comparisonOperator
                        RANGLE(">")
                      expression
                        literalConstant
                          IntegerLiteral("2")
                    RPAREN(")")
                    NL("\n")
                    controlStructureBody
                      statement
                        expression
                          jumpExpression
                            RETURN("return")
                            expression
                              literalConstant
                                IntegerLiteral("1")
                    NL("\n")
                    ELSE("else")
                    controlStructureBody
                      statement
                        expression
                          jumpExpression
                            RETURN("return")
                            expression
                              literalConstant
                                RealLiteral("1.0")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockNoReturnIfValDeclaration")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("x")
                    ASSIGNMENT("=")
                    expression
                      literalConstant
                        IntegerLiteral("1")
                    NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockNoReturnIfEmptyIf")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  ifExpression
                    IF("if")
                    LPAREN("(")
                    expression
                      expression
                        literalConstant
                          IntegerLiteral("1")
                      comparisonOperator
                        LANGLE("<")
                      expression
                        literalConstant
                          IntegerLiteral("2")
                    RPAREN(")")
                    controlStructureBody
                      block
                        LCURL("{")
                        statements
                        RCURL("}")
                    ELSE("else")
                    controlStructureBody
                      block
                        LCURL("{")
                        statements
                        RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("blockNoReturnIfUnitInOneBranch")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  ifExpression
                    IF("if")
                    LPAREN("(")
                    expression
                      expression
                        literalConstant
                          IntegerLiteral("1")
                      comparisonOperator
                        LANGLE("<")
                      expression
                        literalConstant
                          IntegerLiteral("2")
                    RPAREN(")")
                    controlStructureBody
                      block
                        LCURL("{")
                        NL("\n")
                        statements
                          statement
                            expression
                              jumpExpression
                                RETURN("return")
                                expression
                                  literalConstant
                                    IntegerLiteral("1")
                          semis
                            NL("\n")
                        RCURL("}")
                    ELSE("else")
                    controlStructureBody
                      block
                        LCURL("{")
                        NL("\n")
                        statements
                          statement
                            expression
                              ifExpression
                                IF("if")
                                LPAREN("(")
                                expression
                                  expression
                                    literalConstant
                                      IntegerLiteral("3")
                                  comparisonOperator
                                    LANGLE("<")
                                  expression
                                    literalConstant
                                      IntegerLiteral("4")
                                RPAREN(")")
                                controlStructureBody
                                  block
                                    LCURL("{")
                                    NL("\n")
                                    statements
                                    RCURL("}")
                                ELSE("else")
                                controlStructureBody
                                  block
                                    LCURL("{")
                                    NL("\n")
                                    statements
                                      statement
                                        expression
                                          jumpExpression
                                            RETURN("return")
                                            expression
                                              literalConstant
                                                IntegerLiteral("2")
                                      semis
                                        NL("\n")
                                    RCURL("}")
                          semis
                            NL("\n")
                        RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("nonBlockReturnIfEmptyIf")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          ASSIGNMENT("=")
          expression
            ifExpression
              IF("if")
              LPAREN("(")
              expression
                expression
                  literalConstant
                    IntegerLiteral("1")
                comparisonOperator
                  LANGLE("<")
                expression
                  literalConstant
                    IntegerLiteral("2")
              RPAREN(")")
              controlStructureBody
                block
                  LCURL("{")
                  statements
                  RCURL("}")
              ELSE("else")
              controlStructureBody
                block
                  LCURL("{")
                  statements
                  RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("nonBlockNoReturnIfUnitInOneBranch")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          ASSIGNMENT("=")
          expression
            ifExpression
              IF("if")
              LPAREN("(")
              expression
                expression
                  literalConstant
                    IntegerLiteral("1")
                comparisonOperator
                  LANGLE("<")
                expression
                  literalConstant
                    IntegerLiteral("2")
              RPAREN(")")
              controlStructureBody
                block
                  LCURL("{")
                  statements
                  RCURL("}")
              ELSE("else")
              controlStructureBody
                statement
                  expression
                    literalConstant
                      IntegerLiteral("2")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("a")
        ASSIGNMENT("=")
        expression
          jumpExpression
            RETURN("return")
            expression
              literalConstant
                IntegerLiteral("1")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("A")
        primaryConstructor
          classParameters
            LPAREN("(")
            RPAREN(")")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
          RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("illegalConstantBody")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          ASSIGNMENT("=")
          expression
            stringLiteral
              lineStringLiteral
                QUOTE_OPEN(""")
                lineStringContent
                  LineStrText("s")
                QUOTE_CLOSE(""")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("illegalConstantBlock")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("String")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      literalConstant
                        IntegerLiteral("1")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("illegalIfBody")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          ASSIGNMENT("=")
          NL("\n")
          expression
            ifExpression
              IF("if")
              LPAREN("(")
              expression
                expression
                  literalConstant
                    IntegerLiteral("1")
                comparisonOperator
                  LANGLE("<")
                expression
                  literalConstant
                    IntegerLiteral("2")
              RPAREN(")")
              controlStructureBody
                statement
                  expression
                    literalConstant
                      CharacterLiteral("'a'")
              ELSE("else")
              controlStructureBody
                block
                  LCURL("{")
                  statements
                    statement
                      expression
                        literalConstant
                          RealLiteral("1.0")
                  RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("illegalIfBlock")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Boolean")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  ifExpression
                    IF("if")
                    LPAREN("(")
                    expression
                      expression
                        literalConstant
                          IntegerLiteral("1")
                      comparisonOperator
                        LANGLE("<")
                      expression
                        literalConstant
                          IntegerLiteral("2")
                    RPAREN(")")
                    NL("\n")
                    controlStructureBody
                      statement
                        expression
                          jumpExpression
                            RETURN("return")
                            expression
                              literalConstant
                                BooleanLiteral("false")
                    NL("\n")
                    ELSE("else")
                    controlStructureBody
                      block
                        LCURL("{")
                        statements
                          statement
                            expression
                              jumpExpression
                                RETURN("return")
                                expression
                                  literalConstant
                                    IntegerLiteral("1")
                        RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("illegalReturnIf")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Char")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      ifExpression
                        IF("if")
                        LPAREN("(")
                        expression
                          expression
                            literalConstant
                              IntegerLiteral("1")
                          comparisonOperator
                            LANGLE("<")
                          expression
                            literalConstant
                              IntegerLiteral("2")
                        RPAREN(")")
                        controlStructureBody
                          statement
                            expression
                              literalConstant
                                CharacterLiteral("'a'")
                        ELSE("else")
                        controlStructureBody
                          block
                            LCURL("{")
                            statements
                              statement
                                expression
                                  literalConstant
                                    IntegerLiteral("1")
                            RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("returnNothing")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Nothing")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  jumpExpression
                    THROW("throw")
                    expression
                      literalConstant
                        IntegerLiteral("1")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("f")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  ifExpression
                    IF("if")
                    LPAREN("(")
                    expression
                      expression
                        literalConstant
                          IntegerLiteral("1")
                      comparisonOperator
                        LANGLE("<")
                      expression
                        literalConstant
                          IntegerLiteral("2")
                    RPAREN(")")
                    controlStructureBody
                      block
                        LCURL("{")
                        statements
                          statement
                            expression
                              jumpExpression
                                RETURN("return")
                                expression
                                  literalConstant
                                    IntegerLiteral("1")
                        RCURL("}")
                    ELSE("else")
                    controlStructureBody
                      statement
                        expression
                          expression
                            simpleIdentifier
                              Identifier("returnNothing")
                          unarySuffix
                            callSuffix
                              valueArguments
                                LPAREN("(")
                                RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("f1")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          ASSIGNMENT("=")
          expression
            ifExpression
              IF("if")
              LPAREN("(")
              expression
                expression
                  literalConstant
                    IntegerLiteral("1")
                comparisonOperator
                  LANGLE("<")
                expression
                  literalConstant
                    IntegerLiteral("2")
              RPAREN(")")
              controlStructureBody
                statement
                  expression
                    literalConstant
                      IntegerLiteral("1")
              ELSE("else")
              controlStructureBody
                statement
                  expression
                    expression
                      simpleIdentifier
                        Identifier("returnNothing")
                    unarySuffix
                      callSuffix
                        valueArguments
                          LPAREN("(")
                          RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            visibilityModifier
              PUBLIC("public")
        FUN("fun")
        simpleIdentifier
          Identifier("f2")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            literalConstant
              IntegerLiteral("1")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("B")
        primaryConstructor
          classParameters
            LPAREN("(")
            RPAREN(")")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      visibilityModifier
                        PROTECTED("protected")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("f")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      stringLiteral
                        lineStringLiteral
                          QUOTE_OPEN(""")
                          lineStringContent
                            LineStrText("ss")
                          QUOTE_CLOSE(""")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("testFunctionLiterals")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("endsWithVarDeclaration")
                      COLON(":")
                      type
                        functionType
                          functionTypeParameters
                            LPAREN("(")
                            RPAREN(")")
                          ARROW("->")
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Boolean")
                    ASSIGNMENT("=")
                    expression
                      functionLiteral
                        lambdaLiteral
                          LCURL("{")
                          NL("\n")
                          statements
                            statement
                              declaration
                                propertyDeclaration
                                  VAL("val")
                                  variableDeclaration
                                    simpleIdentifier
                                      Identifier("x")
                                  ASSIGNMENT("=")
                                  expression
                                    literalConstant
                                      IntegerLiteral("2")
                                  NL("\n")
                          RCURL("}")
                    NL("\n")
              semis
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("endsWithAssignment")
                      COLON(":")
                      type
                        functionType
                          functionTypeParameters
                            LPAREN("(")
                            RPAREN(")")
                          ARROW("->")
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Int")
                    ASSIGNMENT("=")
                    expression
                      functionLiteral
                        lambdaLiteral
                          LCURL("{")
                          NL("\n")
                          statements
                            statement
                              declaration
                                propertyDeclaration
                                  VAR("var")
                                  variableDeclaration
                                    simpleIdentifier
                                      Identifier("x")
                                  ASSIGNMENT("=")
                                  expression
                                    literalConstant
                                      IntegerLiteral("1")
                            semis
                              NL("\n")
                            statement
                              assignment
                                directlyAssignableExpression
                                  simpleIdentifier
                                    Identifier("x")
                                ASSIGNMENT("=")
                                expression
                                  literalConstant
                                    IntegerLiteral("333")
                            semis
                              NL("\n")
                          RCURL("}")
                    NL("\n")
              semis
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("endsWithReAssignment")
                      COLON(":")
                      type
                        functionType
                          functionTypeParameters
                            LPAREN("(")
                            RPAREN(")")
                          ARROW("->")
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Int")
                    ASSIGNMENT("=")
                    expression
                      functionLiteral
                        lambdaLiteral
                          LCURL("{")
                          NL("\n")
                          statements
                            statement
                              declaration
                                propertyDeclaration
                                  VAR("var")
                                  variableDeclaration
                                    simpleIdentifier
                                      Identifier("x")
                                  ASSIGNMENT("=")
                                  expression
                                    literalConstant
                                      IntegerLiteral("1")
                            semis
                              NL("\n")
                            statement
                              assignment
                                assignableExpression
                                  simpleIdentifier
                                    Identifier("x")
                                assignmentAndOperator
                                  ADD_ASSIGNMENT("+=")
                                expression
                                  literalConstant
                                    IntegerLiteral("333")
                            semis
                              NL("\n")
                          RCURL("}")
                    NL("\n")
              semis
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("endsWithFunDeclaration")
                      COLON(":")
                      type
                        functionType
                          functionTypeParameters
                            LPAREN("(")
                            RPAREN(")")
                          ARROW("->")
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("String")
                    ASSIGNMENT("=")
                    expression
                      functionLiteral
                        lambdaLiteral
                          LCURL("{")
                          NL("\n")
                          statements
                            statement
                              declaration
                                propertyDeclaration
                                  VAR("var")
                                  variableDeclaration
                                    simpleIdentifier
                                      Identifier("x")
                                  ASSIGNMENT("=")
                                  expression
                                    literalConstant
                                      IntegerLiteral("1")
                            semis
                              NL("\n")
                            statement
                              assignment
                                directlyAssignableExpression
                                  simpleIdentifier
                                    Identifier("x")
                                ASSIGNMENT("=")
                                expression
                                  literalConstant
                                    IntegerLiteral("333")
                            semis
                              NL("\n")
                            statement
                              declaration
                                functionDeclaration
                                  FUN("fun")
                                  simpleIdentifier
                                    Identifier("meow")
                                  functionValueParameters
                                    LPAREN("(")
                                    RPAREN(")")
                                  COLON(":")
                                  type
                                    typeReference
                                      userType
                                        simpleUserType
                                          simpleIdentifier
                                            Identifier("Unit")
                                  functionBody
                                    block
                                      LCURL("{")
                                      statements
                                      RCURL("}")
                            semis
                              NL("\n")
                          RCURL("}")
                    NL("\n")
              semis
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("endsWithObjectDeclaration")
                      COLON(":")
                      type
                        functionType
                          functionTypeParameters
                            LPAREN("(")
                            RPAREN(")")
                          ARROW("->")
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Int")
                    ASSIGNMENT("=")
                    expression
                      functionLiteral
                        lambdaLiteral
                          LCURL("{")
                          NL("\n")
                          statements
                            statement
                              declaration
                                propertyDeclaration
                                  VAR("var")
                                  variableDeclaration
                                    simpleIdentifier
                                      Identifier("x")
                                  ASSIGNMENT("=")
                                  expression
                                    literalConstant
                                      IntegerLiteral("1")
                            semis
                              NL("\n")
                            statement
                              assignment
                                directlyAssignableExpression
                                  simpleIdentifier
                                    Identifier("x")
                                ASSIGNMENT("=")
                                expression
                                  literalConstant
                                    IntegerLiteral("333")
                            semis
                              NL("\n")
                            statement
                              declaration
                                objectDeclaration
                                  OBJECT("object")
                                  simpleIdentifier
                                    Identifier("A")
                                  classBody
                                    LCURL("{")
                                    classMemberDeclarations
                                    RCURL("}")
                            semis
                              NL("\n")
                          RCURL("}")
                    NL("\n")
              semis
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("expectedUnitReturnType1")
                      COLON(":")
                      type
                        functionType
                          functionTypeParameters
                            LPAREN("(")
                            RPAREN(")")
                          ARROW("->")
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Unit")
                    ASSIGNMENT("=")
                    expression
                      functionLiteral
                        lambdaLiteral
                          LCURL("{")
                          NL("\n")
                          statements
                            statement
                              declaration
                                propertyDeclaration
                                  VAL("val")
                                  variableDeclaration
                                    simpleIdentifier
                                      Identifier("x")
                                  ASSIGNMENT("=")
                                  expression
                                    literalConstant
                                      IntegerLiteral("1")
                                  NL("\n")
                          RCURL("}")
                    NL("\n")
              semis
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("expectedUnitReturnType2")
                      COLON(":")
                      type
                        functionType
                          functionTypeParameters
                            LPAREN("(")
                            RPAREN(")")
                          ARROW("->")
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Unit")
                    ASSIGNMENT("=")
                    expression
                      functionLiteral
                        lambdaLiteral
                          LCURL("{")
                          NL("\n")
                          statements
                            statement
                              declaration
                                functionDeclaration
                                  FUN("fun")
                                  simpleIdentifier
                                    Identifier("meow")
                                  functionValueParameters
                                    LPAREN("(")
                                    RPAREN(")")
                                  COLON(":")
                                  type
                                    typeReference
                                      userType
                                        simpleUserType
                                          simpleIdentifier
                                            Identifier("Unit")
                                  functionBody
                                    block
                                      LCURL("{")
                                      statements
                                      RCURL("}")
                            semis
                              NL("\n")
                            statement
                              declaration
                                objectDeclaration
                                  OBJECT("object")
                                  simpleIdentifier
                                    Identifier("A")
                                  classBody
                                    LCURL("{")
                                    classMemberDeclarations
                                    RCURL("}")
                            semis
                              NL("\n")
                          RCURL("}")
                    NL("\n")
                    NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
