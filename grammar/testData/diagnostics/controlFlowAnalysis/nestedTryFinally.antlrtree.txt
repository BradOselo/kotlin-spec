File: nestedTryFinally.kt - 975ebeed236bba5d2e7479f5e89d687a
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("use")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("arg")
              COLON(":")
              type
                nullableType
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("String")
                  quest
                    QUEST_NO_WS("?")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            simpleIdentifier
              Identifier("arg")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("sample")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          nullableType
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("String")
            quest
              QUEST_WS("? ")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  tryExpression
                    TRY("try")
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          expression
                            ifExpression
                              IF("if")
                              LPAREN("(")
                              expression
                                literalConstant
                                  BooleanLiteral("false")
                              RPAREN(")")
                              controlStructureBody
                                block
                                  LCURL("{")
                                  NL("\n")
                                  statements
                                    statement
                                      expression
                                        jumpExpression
                                          RETURN("return")
                                          expression
                                            stringLiteral
                                              lineStringLiteral
                                                QUOTE_OPEN(""")
                                                lineStringContent
                                                  LineStrText("fail")
                                                QUOTE_CLOSE(""")
                                    semis
                                      NL("\n")
                                  RCURL("}")
                              ELSE("else")
                              controlStructureBody
                                block
                                  LCURL("{")
                                  NL("\n")
                                  statements
                                    statement
                                      expression
                                        ifExpression
                                          IF("if")
                                          LPAREN("(")
                                          expression
                                            literalConstant
                                              BooleanLiteral("false")
                                          RPAREN(")")
                                          controlStructureBody
                                            block
                                              LCURL("{")
                                              NL("\n")
                                              statements
                                                statement
                                                  expression
                                                    ifExpression
                                                      IF("if")
                                                      LPAREN("(")
                                                      expression
                                                        literalConstant
                                                          BooleanLiteral("false")
                                                      RPAREN(")")
                                                      controlStructureBody
                                                        block
                                                          LCURL("{")
                                                          NL("\n")
                                                          statements
                                                            statement
                                                              declaration
                                                                propertyDeclaration
                                                                  VAR("var")
                                                                  variableDeclaration
                                                                    simpleIdentifier
                                                                      Identifier("foo")
                                                                    COLON(":")
                                                                    type
                                                                      nullableType
                                                                        typeReference
                                                                          userType
                                                                            simpleUserType
                                                                              simpleIdentifier
                                                                                Identifier("String")
                                                                        quest
                                                                          QUEST_WS("? ")
                                                                  ASSIGNMENT("=")
                                                                  expression
                                                                    literalConstant
                                                                      NullLiteral("null")
                                                            semis
                                                              NL("\n")
                                                            statement
                                                              expression
                                                                tryExpression
                                                                  TRY("try")
                                                                  block
                                                                    LCURL("{")
                                                                    NL("\n")
                                                                    statements
                                                                      statement
                                                                        assignment
                                                                          directlyAssignableExpression
                                                                            simpleIdentifier
                                                                              Identifier("foo")
                                                                          ASSIGNMENT("=")
                                                                          expression
                                                                            stringLiteral
                                                                              lineStringLiteral
                                                                                QUOTE_OPEN(""")
                                                                                lineStringContent
                                                                                  LineStrText("test")
                                                                                QUOTE_CLOSE(""")
                                                                      semis
                                                                        NL("\n")
                                                                    RCURL("}")
                                                                  catchBlock
                                                                    CATCH("catch")
                                                                    LPAREN("(")
                                                                    simpleIdentifier
                                                                      Identifier("e")
                                                                    COLON(":")
                                                                    type
                                                                      typeReference
                                                                        userType
                                                                          simpleUserType
                                                                            simpleIdentifier
                                                                              Identifier("Exception")
                                                                    RPAREN(")")
                                                                    block
                                                                      LCURL("{")
                                                                      NL("\n")
                                                                      statements
                                                                        statement
                                                                          expression
                                                                            jumpExpression
                                                                              RETURN("return")
                                                                              expression
                                                                                stringLiteral
                                                                                  lineStringLiteral
                                                                                    QUOTE_OPEN(""")
                                                                                    lineStringContent
                                                                                      LineStrText("fail")
                                                                                    QUOTE_CLOSE(""")
                                                                        semis
                                                                          NL("\n")
                                                                      RCURL("}")
                                                                  finallyBlock
                                                                    FINALLY("finally")
                                                                    block
                                                                      LCURL("{")
                                                                      NL("\n")
                                                                      statements
                                                                        statement
                                                                          expression
                                                                            expression
                                                                              simpleIdentifier
                                                                                Identifier("use")
                                                                            unarySuffix
                                                                              callSuffix
                                                                                valueArguments
                                                                                  LPAREN("(")
                                                                                  valueArgument
                                                                                    expression
                                                                                      simpleIdentifier
                                                                                        Identifier("foo")
                                                                                  RPAREN(")")
                                                                        semis
                                                                          NL("\n")
                                                                      RCURL("}")
                                                            semis
                                                              NL("\n")
                                                          RCURL("}")
                                                semis
                                                  NL("\n")
                                                statement
                                                  expression
                                                    jumpExpression
                                                      RETURN("return")
                                                      expression
                                                        stringLiteral
                                                          lineStringLiteral
                                                            QUOTE_OPEN(""")
                                                            lineStringContent
                                                              LineStrText("fail")
                                                            QUOTE_CLOSE(""")
                                                semis
                                                  NL("\n")
                                              RCURL("}")
                                    semis
                                      NL("\n")
                                  RCURL("}")
                        semis
                          NL("\n")
                      RCURL("}")
                    finallyBlock
                      FINALLY("finally")
                      block
                        LCURL("{")
                        statements
                        RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      literalConstant
                        NullLiteral("null")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
