File: throwInLambda.kt - d92a7b68557ccae7d5f24361fa76ef1d
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("fn")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          nullableType
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("String")
            quest
              QUEST_WS("? ")
        functionBody
          ASSIGNMENT("=")
          expression
            literalConstant
              NullLiteral("null")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("String")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("x")
                    ASSIGNMENT("=")
                    expression
                      expression
                        expression
                          simpleIdentifier
                            Identifier("fn")
                        unarySuffix
                          callSuffix
                            valueArguments
                              LPAREN("(")
                              RPAREN(")")
                        unarySuffix
                          navigationSuffix
                            memberAccessOperator
                              safeNav
                                QUEST_NO_WS("?")
                                DOT(".")
                            simpleIdentifier
                              Identifier("let")
                        unarySuffix
                          callSuffix
                            annotatedLambda
                              lambdaLiteral
                                LCURL("{")
                                statements
                                  statement
                                    expression
                                      jumpExpression
                                        THROW("throw")
                                        expression
                                          expression
                                            simpleIdentifier
                                              Identifier("Exception")
                                          unarySuffix
                                            callSuffix
                                              valueArguments
                                                LPAREN("(")
                                                RPAREN(")")
                                RCURL("}")
                      elvis
                        QUEST_NO_WS("?")
                        COLON(":")
                      expression
                        stringLiteral
                          lineStringLiteral
                            QUOTE_OPEN(""")
                            lineStringContent
                              LineStrText("unreachable?")
                            QUOTE_CLOSE(""")
              semis
                NL("\n")
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      simpleIdentifier
                        Identifier("x")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("bar")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("String")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("x")
                    ASSIGNMENT("=")
                    expression
                      expression
                        expression
                          simpleIdentifier
                            Identifier("fn")
                        unarySuffix
                          callSuffix
                            valueArguments
                              LPAREN("(")
                              RPAREN(")")
                      elvis
                        QUEST_NO_WS("?")
                        COLON(":")
                      expression
                        jumpExpression
                          RETURN("return")
                          expression
                            stringLiteral
                              lineStringLiteral
                                QUOTE_OPEN(""")
                                QUOTE_CLOSE(""")
              semis
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("y")
                    ASSIGNMENT("=")
                    expression
                      expression
                        expression
                          simpleIdentifier
                            Identifier("x")
                        unarySuffix
                          navigationSuffix
                            memberAccessOperator
                              safeNav
                                QUEST_NO_WS("?")
                                DOT(".")
                            simpleIdentifier
                              Identifier("let")
                        unarySuffix
                          callSuffix
                            annotatedLambda
                              lambdaLiteral
                                LCURL("{")
                                statements
                                  statement
                                    expression
                                      jumpExpression
                                        THROW("throw")
                                        expression
                                          expression
                                            simpleIdentifier
                                              Identifier("Exception")
                                          unarySuffix
                                            callSuffix
                                              valueArguments
                                                LPAREN("(")
                                                RPAREN(")")
                                RCURL("}")
                      elvis
                        QUEST_NO_WS("?")
                        COLON(":")
                      expression
                        stringLiteral
                          lineStringLiteral
                            QUOTE_OPEN(""")
                            lineStringContent
                              LineStrText("unreachable")
                            QUOTE_CLOSE(""")
              semis
                NL("\n")
              statement
                expression
                  jumpExpression
                    RETURN("return")
                    expression
                      simpleIdentifier
                        Identifier("y")
              semis
                NL("\n")
            RCURL("}")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
