File: import.kt - 52c88c1227c6c42c4c3ca9623652944c
  NL("\n")
  NL("\n")
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("package1")
    semi
      NL("\n")
      NL("\n")
  importList
  topLevelObject
    declaration
      typeAlias
        TYPE_ALIAS("typealias")
        simpleIdentifier
          Identifier("S")
        ASSIGNMENT("=")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("String")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  PACKAGE("package")
  Identifier("package2")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      typeAlias
        TYPE_ALIAS("typealias")
        simpleIdentifier
          Identifier("I")
        ASSIGNMENT("=")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Outer")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                typeAlias
                  TYPE_ALIAS("typealias")
                  simpleIdentifier
                    Identifier("A")
                  ASSIGNMENT("=")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Any")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  PACKAGE("package")
  Identifier("package3")
  NL("\n")
  NL("\n")
  IMPORT("import")
  Identifier("package1")
  DOT(".")
  MULT("*")
  NL("\n")
  IMPORT("import")
  Identifier("package2")
  DOT(".")
  Identifier("I")
  NL("\n")
  IMPORT("import")
  Identifier("package2")
  DOT(".")
  Identifier("Outer")
  DOT(".")
  Identifier("A")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("testS")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("S")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      stringLiteral
                                        lineStringLiteral
                                          QUOTE_OPEN(""")
                                          QUOTE_CLOSE(""")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("testI")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("I")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      literalConstant
                                        IntegerLiteral("42")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("testA")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("A")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("Any")
                                    postfixUnarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          RPAREN(")")
        NL("\n")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
