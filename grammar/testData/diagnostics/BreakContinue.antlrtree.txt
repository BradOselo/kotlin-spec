File: BreakContinue.kt - 93ceae9127a5fc6c1b472929a4ed921d
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("C")
        classBody
          LCURL("{")
          NL("\n")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("f")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("a")
                        COLON(":")
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Boolean")
                    COMMA(",")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("b")
                        COLON(":")
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Boolean")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          label
                            simpleIdentifier
                              Identifier("b")
                            AT_POST_WS("@ ")
                          loopStatement
                            whileStatement
                              WHILE("while")
                              LPAREN("(")
                              expression
                                literalConstant
                                  BooleanLiteral("true")
                              RPAREN(")")
                              NL("\n")
                              controlStructureBody
                                statement
                                  label
                                    simpleIdentifier
                                      Identifier("a")
                                    AT_POST_WS("@ ")
                                  expression
                                    functionLiteral
                                      lambdaLiteral
                                        LCURL("{")
                                        NL("\n")
                                        statements
                                          statement
                                            expression
                                              jumpExpression
                                                BREAK_AT("break@f")
                                          semis
                                            NL("\n")
                                          statement
                                            expression
                                              jumpExpression
                                                BREAK("break")
                                          semis
                                            NL("\n")
                                          statement
                                            expression
                                              jumpExpression
                                                BREAK_AT("break@b")
                                          semis
                                            NL("\n")
                                          statement
                                            expression
                                              jumpExpression
                                                BREAK_AT("break@a")
                                          semis
                                            NL("\n")
                                        RCURL("}")
                        semis
                          NL("\n")
                          NL("\n")
                        statement
                          expression
                            jumpExpression
                              CONTINUE("continue")
                        semis
                          NL("\n")
                          NL("\n")
                        statement
                          label
                            simpleIdentifier
                              Identifier("b")
                            AT_POST_WS("@ ")
                          loopStatement
                            whileStatement
                              WHILE("while")
                              LPAREN("(")
                              expression
                                literalConstant
                                  BooleanLiteral("true")
                              RPAREN(")")
                              NL("\n")
                              controlStructureBody
                                statement
                                  label
                                    simpleIdentifier
                                      Identifier("a")
                                    AT_POST_WS("@ ")
                                  expression
                                    functionLiteral
                                      lambdaLiteral
                                        LCURL("{")
                                        NL("\n")
                                        statements
                                          statement
                                            expression
                                              jumpExpression
                                                CONTINUE_AT("continue@f")
                                          semis
                                            NL("\n")
                                          statement
                                            expression
                                              jumpExpression
                                                CONTINUE("continue")
                                          semis
                                            NL("\n")
                                          statement
                                            expression
                                              jumpExpression
                                                CONTINUE_AT("continue@b")
                                          semis
                                            NL("\n")
                                          statement
                                            expression
                                              jumpExpression
                                                CONTINUE_AT("continue@a")
                                          semis
                                            NL("\n")
                                        RCURL("}")
                        semis
                          NL("\n")
                          NL("\n")
                        statement
                          expression
                            jumpExpression
                              BREAK("break")
                        semis
                          NL("\n")
                          NL("\n")
                        statement
                          expression
                            jumpExpression
                              CONTINUE_AT("continue@f")
                        semis
                          NL("\n")
                        statement
                          expression
                            jumpExpression
                              BREAK_AT("break@f")
                        semis
                          NL("\n")
                      RCURL("}")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("containsBreak")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("a")
                        COLON(":")
                        type
                          nullableType
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("String")
                            quest
                              QUEST_NO_WS("?")
                    COMMA(",")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("b")
                        COLON(":")
                        type
                          nullableType
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("String")
                            quest
                              QUEST_NO_WS("?")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          loopStatement
                            whileStatement
                              WHILE("while")
                              LPAREN("(")
                              expression
                                expression
                                  simpleIdentifier
                                    Identifier("a")
                                equalityOperator
                                  EQEQ("==")
                                expression
                                  literalConstant
                                    NullLiteral("null")
                              RPAREN(")")
                              controlStructureBody
                                block
                                  LCURL("{")
                                  NL("\n")
                                  statements
                                    statement
                                      expression
                                        jumpExpression
                                          BREAK("break")
                                    semis
                                      SEMICOLON(";")
                                      NL("\n")
                                  RCURL("}")
                        semis
                          NL("\n")
                        statement
                          expression
                            expression
                              simpleIdentifier
                                Identifier("a")
                            unarySuffix
                              navigationSuffix
                                memberAccessOperator
                                  DOT(".")
                                simpleIdentifier
                                  Identifier("compareTo")
                            unarySuffix
                              callSuffix
                                valueArguments
                                  LPAREN("(")
                                  valueArgument
                                    expression
                                      stringLiteral
                                        lineStringLiteral
                                          QUOTE_OPEN(""")
                                          lineStringContent
                                            LineStrText("2")
                                          QUOTE_CLOSE(""")
                                  RPAREN(")")
                        semis
                          NL("\n")
                      RCURL("}")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("notContainsBreak")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("a")
                        COLON(":")
                        type
                          nullableType
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("String")
                            quest
                              QUEST_NO_WS("?")
                    COMMA(",")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("b")
                        COLON(":")
                        type
                          nullableType
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("String")
                            quest
                              QUEST_NO_WS("?")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          loopStatement
                            whileStatement
                              WHILE("while")
                              LPAREN("(")
                              expression
                                expression
                                  simpleIdentifier
                                    Identifier("a")
                                equalityOperator
                                  EQEQ("==")
                                expression
                                  literalConstant
                                    NullLiteral("null")
                              RPAREN(")")
                              controlStructureBody
                                block
                                  LCURL("{")
                                  NL("\n")
                                  statements
                                    statement
                                      loopStatement
                                        whileStatement
                                          WHILE("while")
                                          LPAREN("(")
                                          expression
                                            expression
                                              simpleIdentifier
                                                Identifier("b")
                                            equalityOperator
                                              EQEQ("==")
                                            expression
                                              literalConstant
                                                NullLiteral("null")
                                          RPAREN(")")
                                          controlStructureBody
                                            block
                                              LCURL("{")
                                              NL("\n")
                                              statements
                                                statement
                                                  expression
                                                    jumpExpression
                                                      BREAK("break")
                                                semis
                                                  SEMICOLON(";")
                                                  NL("\n")
                                              RCURL("}")
                                    semis
                                      NL("\n")
                                  RCURL("}")
                        semis
                          NL("\n")
                        statement
                          expression
                            expression
                              simpleIdentifier
                                Identifier("a")
                            unarySuffix
                              navigationSuffix
                                memberAccessOperator
                                  DOT(".")
                                simpleIdentifier
                                  Identifier("compareTo")
                            unarySuffix
                              callSuffix
                                valueArguments
                                  LPAREN("(")
                                  valueArgument
                                    expression
                                      stringLiteral
                                        lineStringLiteral
                                          QUOTE_OPEN(""")
                                          lineStringContent
                                            LineStrText("2")
                                          QUOTE_CLOSE(""")
                                  RPAREN(")")
                        semis
                          NL("\n")
                      RCURL("}")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("containsBreakWithLabel")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("a")
                        COLON(":")
                        type
                          nullableType
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("String")
                            quest
                              QUEST_NO_WS("?")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          label
                            simpleIdentifier
                              Identifier("loop")
                            AT_POST_WS("@ ")
                          loopStatement
                            whileStatement
                              WHILE("while")
                              LPAREN("(")
                              expression
                                expression
                                  simpleIdentifier
                                    Identifier("a")
                                equalityOperator
                                  EQEQ("==")
                                expression
                                  literalConstant
                                    NullLiteral("null")
                              RPAREN(")")
                              controlStructureBody
                                block
                                  LCURL("{")
                                  NL("\n")
                                  statements
                                    statement
                                      expression
                                        jumpExpression
                                          BREAK_AT("break@loop")
                                    semis
                                      NL("\n")
                                  RCURL("}")
                        semis
                          NL("\n")
                        statement
                          expression
                            expression
                              simpleIdentifier
                                Identifier("a")
                            unarySuffix
                              navigationSuffix
                                memberAccessOperator
                                  safeNav
                                    QUEST_NO_WS("?")
                                    DOT(".")
                                simpleIdentifier
                                  Identifier("compareTo")
                            unarySuffix
                              callSuffix
                                valueArguments
                                  LPAREN("(")
                                  valueArgument
                                    expression
                                      stringLiteral
                                        lineStringLiteral
                                          QUOTE_OPEN(""")
                                          lineStringContent
                                            LineStrText("2")
                                          QUOTE_CLOSE(""")
                                  RPAREN(")")
                        semis
                          NL("\n")
                      RCURL("}")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("containsIllegalBreak")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("a")
                        COLON(":")
                        type
                          nullableType
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("String")
                            quest
                              QUEST_NO_WS("?")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          label
                            simpleIdentifier
                              Identifier("loop")
                            AT_POST_WS("@ ")
                          loopStatement
                            whileStatement
                              WHILE("while")
                              LPAREN("(")
                              expression
                                expression
                                  simpleIdentifier
                                    Identifier("a")
                                equalityOperator
                                  EQEQ("==")
                                expression
                                  literalConstant
                                    NullLiteral("null")
                              RPAREN(")")
                              controlStructureBody
                                block
                                  LCURL("{")
                                  NL("\n")
                                  statements
                                    statement
                                      expression
                                        jumpExpression
                                          BREAK_AT("break@label")
                                    semis
                                      NL("\n")
                                  RCURL("}")
                        semis
                          NL("\n")
                        statement
                          expression
                            expression
                              simpleIdentifier
                                Identifier("a")
                            unarySuffix
                              navigationSuffix
                                memberAccessOperator
                                  DOT(".")
                                simpleIdentifier
                                  Identifier("compareTo")
                            unarySuffix
                              callSuffix
                                valueArguments
                                  LPAREN("(")
                                  valueArgument
                                    expression
                                      stringLiteral
                                        lineStringLiteral
                                          QUOTE_OPEN(""")
                                          lineStringContent
                                            LineStrText("2")
                                          QUOTE_CLOSE(""")
                                  RPAREN(")")
                        semis
                          NL("\n")
                      RCURL("}")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("containsBreakToOuterLoop")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("a")
                        COLON(":")
                        type
                          nullableType
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("String")
                            quest
                              QUEST_NO_WS("?")
                    COMMA(",")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("b")
                        COLON(":")
                        type
                          nullableType
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("String")
                            quest
                              QUEST_NO_WS("?")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          label
                            simpleIdentifier
                              Identifier("loop")
                            AT_POST_WS("@ ")
                          loopStatement
                            whileStatement
                              WHILE("while")
                              LPAREN("(")
                              expression
                                expression
                                  simpleIdentifier
                                    Identifier("b")
                                equalityOperator
                                  EQEQ("==")
                                expression
                                  literalConstant
                                    NullLiteral("null")
                              RPAREN(")")
                              controlStructureBody
                                block
                                  LCURL("{")
                                  NL("\n")
                                  statements
                                    statement
                                      loopStatement
                                        whileStatement
                                          WHILE("while")
                                          LPAREN("(")
                                          expression
                                            expression
                                              simpleIdentifier
                                                Identifier("a")
                                            equalityOperator
                                              EQEQ("==")
                                            expression
                                              literalConstant
                                                NullLiteral("null")
                                          RPAREN(")")
                                          controlStructureBody
                                            block
                                              LCURL("{")
                                              NL("\n")
                                              statements
                                                statement
                                                  expression
                                                    jumpExpression
                                                      BREAK_AT("break@loop")
                                                semis
                                                  NL("\n")
                                              RCURL("}")
                                    semis
                                      NL("\n")
                                    statement
                                      expression
                                        expression
                                          simpleIdentifier
                                            Identifier("a")
                                        unarySuffix
                                          navigationSuffix
                                            memberAccessOperator
                                              DOT(".")
                                            simpleIdentifier
                                              Identifier("compareTo")
                                        unarySuffix
                                          callSuffix
                                            valueArguments
                                              LPAREN("(")
                                              valueArgument
                                                expression
                                                  stringLiteral
                                                    lineStringLiteral
                                                      QUOTE_OPEN(""")
                                                      lineStringContent
                                                        LineStrText("2")
                                                      QUOTE_CLOSE(""")
                                              RPAREN(")")
                                    semis
                                      NL("\n")
                                  RCURL("}")
                        semis
                          NL("\n")
                      RCURL("}")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("containsBreakInsideLoopWithLabel")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("a")
                        COLON(":")
                        type
                          nullableType
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("String")
                            quest
                              QUEST_NO_WS("?")
                    COMMA(",")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("array")
                        COLON(":")
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Array")
                                typeArguments
                                  LANGLE("<")
                                  typeProjection
                                    type
                                      typeReference
                                        userType
                                          simpleUserType
                                            simpleIdentifier
                                              Identifier("Int")
                                  RANGLE(">")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          label
                            simpleIdentifier
                              Identifier("l")
                            AT_POST_WS("@ ")
                          loopStatement
                            whileStatement
                              WHILE("while")
                              LPAREN("(")
                              expression
                                expression
                                  simpleIdentifier
                                    Identifier("a")
                                equalityOperator
                                  EQEQ("==")
                                expression
                                  literalConstant
                                    NullLiteral("null")
                              RPAREN(")")
                              controlStructureBody
                                block
                                  LCURL("{")
                                  NL("\n")
                                  statements
                                    statement
                                      loopStatement
                                        forStatement
                                          FOR("for")
                                          LPAREN("(")
                                          variableDeclaration
                                            simpleIdentifier
                                              Identifier("el")
                                          IN("in")
                                          expression
                                            simpleIdentifier
                                              Identifier("array")
                                          RPAREN(")")
                                          controlStructureBody
                                            block
                                              LCURL("{")
                                              NL("\n")
                                              statements
                                                statement
                                                  expression
                                                    jumpExpression
                                                      BREAK_AT("break@l")
                                                semis
                                                  NL("\n")
                                              RCURL("}")
                                    semis
                                      NL("\n")
                                  RCURL("}")
                        semis
                          NL("\n")
                        statement
                          expression
                            expression
                              simpleIdentifier
                                Identifier("a")
                            unarySuffix
                              navigationSuffix
                                memberAccessOperator
                                  DOT(".")
                                simpleIdentifier
                                  Identifier("compareTo")
                            unarySuffix
                              callSuffix
                                valueArguments
                                  LPAREN("(")
                                  valueArgument
                                    expression
                                      stringLiteral
                                        lineStringLiteral
                                          QUOTE_OPEN(""")
                                          lineStringContent
                                            LineStrText("2")
                                          QUOTE_CLOSE(""")
                                  RPAREN(")")
                        semis
                          NL("\n")
                      RCURL("}")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("unresolvedBreak")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("a")
                        COLON(":")
                        type
                          nullableType
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("String")
                            quest
                              QUEST_NO_WS("?")
                    COMMA(",")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("array")
                        COLON(":")
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Array")
                                typeArguments
                                  LANGLE("<")
                                  typeProjection
                                    type
                                      typeReference
                                        userType
                                          simpleUserType
                                            simpleIdentifier
                                              Identifier("Int")
                                  RANGLE(">")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          loopStatement
                            whileStatement
                              WHILE("while")
                              LPAREN("(")
                              expression
                                expression
                                  simpleIdentifier
                                    Identifier("a")
                                equalityOperator
                                  EQEQ("==")
                                expression
                                  literalConstant
                                    NullLiteral("null")
                              RPAREN(")")
                              controlStructureBody
                                block
                                  LCURL("{")
                                  NL("\n")
                                  statements
                                    statement
                                      label
                                        simpleIdentifier
                                          Identifier("l")
                                        AT_POST_WS("@ ")
                                      loopStatement
                                        forStatement
                                          FOR("for")
                                          LPAREN("(")
                                          variableDeclaration
                                            simpleIdentifier
                                              Identifier("el")
                                          IN("in")
                                          expression
                                            simpleIdentifier
                                              Identifier("array")
                                          RPAREN(")")
                                          controlStructureBody
                                            block
                                              LCURL("{")
                                              NL("\n")
                                              statements
                                                statement
                                                  expression
                                                    jumpExpression
                                                      BREAK("break")
                                                semis
                                                  NL("\n")
                                              RCURL("}")
                                    semis
                                      NL("\n")
                                    statement
                                      expression
                                        ifExpression
                                          IF("if")
                                          LPAREN("(")
                                          expression
                                            literalConstant
                                              BooleanLiteral("true")
                                          RPAREN(")")
                                          controlStructureBody
                                            statement
                                              expression
                                                jumpExpression
                                                  BREAK("break")
                                          ELSE("else")
                                          controlStructureBody
                                            statement
                                              expression
                                                jumpExpression
                                                  BREAK_AT("break@l")
                                    semis
                                      NL("\n")
                                  RCURL("}")
                        semis
                          NL("\n")
                        statement
                          expression
                            expression
                              simpleIdentifier
                                Identifier("a")
                            unarySuffix
                              navigationSuffix
                                memberAccessOperator
                                  DOT(".")
                                simpleIdentifier
                                  Identifier("compareTo")
                            unarySuffix
                              callSuffix
                                valueArguments
                                  LPAREN("(")
                                  valueArgument
                                    expression
                                      stringLiteral
                                        lineStringLiteral
                                          QUOTE_OPEN(""")
                                          lineStringContent
                                            LineStrText("2")
                                          QUOTE_CLOSE(""")
                                  RPAREN(")")
                        semis
                          NL("\n")
                      RCURL("}")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("twoLabelsOnLoop")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          label
                            simpleIdentifier
                              Identifier("label1")
                            AT_POST_WS("@ ")
                          label
                            simpleIdentifier
                              Identifier("label2")
                            AT_POST_WS("@ ")
                          loopStatement
                            forStatement
                              FOR("for")
                              LPAREN("(")
                              variableDeclaration
                                simpleIdentifier
                                  Identifier("i")
                              IN("in")
                              expression
                                expression
                                  literalConstant
                                    IntegerLiteral("1")
                                RANGE("..")
                                expression
                                  literalConstant
                                    IntegerLiteral("100")
                              RPAREN(")")
                              controlStructureBody
                                block
                                  LCURL("{")
                                  NL("\n")
                                  statements
                                    statement
                                      expression
                                        ifExpression
                                          IF("if")
                                          LPAREN("(")
                                          expression
                                            expression
                                              simpleIdentifier
                                                Identifier("i")
                                            comparisonOperator
                                              RANGLE(">")
                                            expression
                                              literalConstant
                                                IntegerLiteral("0")
                                          RPAREN(")")
                                          controlStructureBody
                                            block
                                              LCURL("{")
                                              NL("\n")
                                              statements
                                                statement
                                                  expression
                                                    jumpExpression
                                                      BREAK_AT("break@label1")
                                                semis
                                                  NL("\n")
                                              RCURL("}")
                                          NL("\n")
                                          ELSE("else")
                                          controlStructureBody
                                            block
                                              LCURL("{")
                                              NL("\n")
                                              statements
                                                statement
                                                  expression
                                                    jumpExpression
                                                      BREAK_AT("break@label2")
                                                semis
                                                  NL("\n")
                                              RCURL("}")
                                    semis
                                      NL("\n")
                                  RCURL("}")
                        semis
                          NL("\n")
                      RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
