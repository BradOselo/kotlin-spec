File: assigningSingleElementsInNamedFormAnnDeprecation_before.kt - bf4a168de3e9623799d5d1112f695096
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT("@")
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("JavaAnn")
  LCURL("{")
  NL("\n")
  Identifier("String")
  LSQUARE("[")
  RSQUARE("]")
  Identifier("value")
  LPAREN("(")
  RPAREN(")")
  Identifier("default")
  LCURL("{")
  RCURL("}")
  SEMICOLON(";")
  NL("\n")
  Identifier("String")
  LSQUARE("[")
  RSQUARE("]")
  Identifier("path")
  LPAREN("(")
  RPAREN(")")
  Identifier("default")
  LCURL("{")
  RCURL("}")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            classModifier
              ANNOTATION("annotation")
        CLASS("class")
        simpleIdentifier
          Identifier("Ann")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              modifiers
                modifier
                  parameterModifier
                    VARARG("vararg")
              VAL("val")
              simpleIdentifier
                Identifier("s")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("String")
            RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT("@")
      Identifier("Ann")
      LPAREN("(")
      Identifier("s")
      ASSIGNMENT("=")
      LANGLE("<")
      EXCL_NO_WS("!")
      Identifier("ASSIGNING_SINGLE_ELEMENT_TO_VARARG_IN_NAMED_FORM_ANNOTATION")
      EXCL_NO_WS("!")
      RANGLE(">")
      QUOTE_OPEN(""")
      LineStrText("value")
      QUOTE_CLOSE(""")
      LANGLE("<")
      EXCL_NO_WS("!")
      RANGLE(">")
      RPAREN(")")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test1")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT("@")
      Identifier("Ann")
      LPAREN("(")
      Identifier("s")
      ASSIGNMENT("=")
      MULT("*")
      LANGLE("<")
      EXCL_NO_WS("!")
      Identifier("REDUNDANT_SPREAD_OPERATOR_IN_NAMED_FORM_IN_ANNOTATION")
      EXCL_NO_WS("!")
      RANGLE(">")
      Identifier("arrayOf")
      LPAREN("(")
      QUOTE_OPEN(""")
      LineStrText("value")
      QUOTE_CLOSE(""")
      RPAREN(")")
      LANGLE("<")
      EXCL_NO_WS("!")
      RANGLE(">")
      RPAREN(")")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test2")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT("@")
      Identifier("Ann")
      LPAREN("(")
      Identifier("s")
      ASSIGNMENT("=")
      MULT("*")
      LANGLE("<")
      EXCL_NO_WS("!")
      Identifier("REDUNDANT_SPREAD_OPERATOR_IN_NAMED_FORM_IN_ANNOTATION")
      EXCL_NO_WS("!")
      RANGLE(">")
      LSQUARE("[")
      QUOTE_OPEN(""")
      LineStrText("value")
      QUOTE_CLOSE(""")
      RSQUARE("]")
      LANGLE("<")
      EXCL_NO_WS("!")
      RANGLE(">")
      RPAREN(")")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test3")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT("@")
      Identifier("JavaAnn")
      LPAREN("(")
      Identifier("value")
      ASSIGNMENT("=")
      LANGLE("<")
      EXCL_NO_WS("!")
      Identifier("ASSIGNING_SINGLE_ELEMENT_TO_VARARG_IN_NAMED_FORM_ANNOTATION")
      EXCL_NO_WS("!")
      RANGLE(">")
      QUOTE_OPEN(""")
      LineStrText("value")
      QUOTE_CLOSE(""")
      LANGLE("<")
      EXCL_NO_WS("!")
      RANGLE(">")
      RPAREN(")")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test4")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          annotation
            singleAnnotation
              AT("@")
              unescapedAnnotation
                constructorInvocation
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("JavaAnn")
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    stringLiteral
                                                      lineStringLiteral
                                                        QUOTE_OPEN(""")
                                                        lineStringContent
                                                          LineStrText("value")
                                                        QUOTE_CLOSE(""")
                    COMMA(",")
                    valueArgument
                      simpleIdentifier
                        Identifier("path")
                      ASSIGNMENT("=")
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("arrayOf")
                                                  postfixUnarySuffix
                                                    callSuffix
                                                      valueArguments
                                                        LPAREN("(")
                                                        valueArgument
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    infixOperation
                                                                      elvisExpression
                                                                        infixFunctionCall
                                                                          rangeExpression
                                                                            additiveExpression
                                                                              multiplicativeExpression
                                                                                asExpression
                                                                                  prefixUnaryExpression
                                                                                    postfixUnaryExpression
                                                                                      primaryExpression
                                                                                        stringLiteral
                                                                                          lineStringLiteral
                                                                                            QUOTE_OPEN(""")
                                                                                            lineStringContent
                                                                                              LineStrText("path")
                                                                                            QUOTE_CLOSE(""")
                                                        RPAREN(")")
                    RPAREN(")")
            NL("\n")
        FUN("fun")
        simpleIdentifier
          Identifier("test5")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          annotation
            singleAnnotation
              AT("@")
              unescapedAnnotation
                constructorInvocation
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("JavaAnn")
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    stringLiteral
                                                      lineStringLiteral
                                                        QUOTE_OPEN(""")
                                                        lineStringContent
                                                          LineStrText("value")
                                                        QUOTE_CLOSE(""")
                    COMMA(",")
                    valueArgument
                      simpleIdentifier
                        Identifier("path")
                      ASSIGNMENT("=")
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    collectionLiteral
                                                      LSQUARE("[")
                                                      expression
                                                        disjunction
                                                          conjunction
                                                            equality
                                                              comparison
                                                                infixOperation
                                                                  elvisExpression
                                                                    infixFunctionCall
                                                                      rangeExpression
                                                                        additiveExpression
                                                                          multiplicativeExpression
                                                                            asExpression
                                                                              prefixUnaryExpression
                                                                                postfixUnaryExpression
                                                                                  primaryExpression
                                                                                    stringLiteral
                                                                                      lineStringLiteral
                                                                                        QUOTE_OPEN(""")
                                                                                        lineStringContent
                                                                                          LineStrText("path")
                                                                                        QUOTE_CLOSE(""")
                                                      RSQUARE("]")
                    RPAREN(")")
            NL("\n")
        FUN("fun")
        simpleIdentifier
          Identifier("test6")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
