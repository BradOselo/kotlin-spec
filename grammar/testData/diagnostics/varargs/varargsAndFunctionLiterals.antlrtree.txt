File: varargsAndFunctionLiterals.kt - 5c2aac1c1488b41fa0dc4929de2ea08b
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("f")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameterModifiers
              parameterModifier
                VARARG("vararg")
            parameter
              simpleIdentifier
                Identifier("t")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("f")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Unit")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("f")
                  unarySuffix
                    callSuffix
                      annotatedLambda
                        lambdaLiteral
                          LCURL("{")
                          statements
                          RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("f")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        RPAREN(")")
                      annotatedLambda
                        lambdaLiteral
                          LCURL("{")
                          statements
                          RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("f")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        valueArgument
                          expression
                            literalConstant
                              IntegerLiteral("1")
                        RPAREN(")")
                      annotatedLambda
                        lambdaLiteral
                          LCURL("{")
                          NL("\n")
                          NL("\n")
                          statements
                          RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("f")
                  unarySuffix
                    callSuffix
                      valueArguments
                        LPAREN("(")
                        valueArgument
                          expression
                            literalConstant
                              IntegerLiteral("1")
                        COMMA(",")
                        valueArgument
                          expression
                            literalConstant
                              IntegerLiteral("2")
                        RPAREN(")")
                      annotatedLambda
                        lambdaLiteral
                          LCURL("{")
                          NL("\n")
                          NL("\n")
                          statements
                          RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
