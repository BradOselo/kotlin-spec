File: labeledFunctionLiteral.kt - ed7815e07ce349ed03d657361ee35bfa
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("funLit")
        ASSIGNMENT("=")
        expression
          unaryPrefix
            label
              simpleIdentifier
                Identifier("lambda")
              AT_POST_WS("@ ")
          expression
            functionLiteral
              anonymousFunction
                FUN("fun")
                type
                  typeReference
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("String")
                DOT(".")
                parametersWithOptionalType
                  LPAREN("(")
                  RPAREN(")")
                functionBody
                  block
                    LCURL("{")
                    NL("\n")
                    statements
                      statement
                        declaration
                          propertyDeclaration
                            VAL("val")
                            variableDeclaration
                              simpleIdentifier
                                Identifier("d1")
                            ASSIGNMENT("=")
                            expression
                              thisExpression
                                THIS_AT("this@lambda")
                            NL("\n")
                    RCURL("}")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("funLit")
                    ASSIGNMENT("=")
                    expression
                      unaryPrefix
                        label
                          simpleIdentifier
                            Identifier("lambda")
                          AT_POST_WS("@ ")
                      expression
                        functionLiteral
                          anonymousFunction
                            FUN("fun")
                            type
                              typeReference
                                userType
                                  simpleUserType
                                    simpleIdentifier
                                      Identifier("String")
                            DOT(".")
                            parametersWithOptionalType
                              LPAREN("(")
                              RPAREN(")")
                            COLON(":")
                            type
                              typeReference
                                userType
                                  simpleUserType
                                    simpleIdentifier
                                      Identifier("String")
                            functionBody
                              block
                                LCURL("{")
                                NL("\n")
                                statements
                                  statement
                                    expression
                                      jumpExpression
                                        RETURN("return")
                                        expression
                                          thisExpression
                                            THIS_AT("this@lambda")
                                  semis
                                    NL("\n")
                                RCURL("}")
                    NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("lambda")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("funLit")
                    ASSIGNMENT("=")
                    expression
                      unaryPrefix
                        label
                          simpleIdentifier
                            Identifier("lambda")
                          AT_POST_WS("@ ")
                      expression
                        functionLiteral
                          anonymousFunction
                            FUN("fun")
                            type
                              typeReference
                                userType
                                  simpleUserType
                                    simpleIdentifier
                                      Identifier("String")
                            DOT(".")
                            parametersWithOptionalType
                              LPAREN("(")
                              RPAREN(")")
                            COLON(":")
                            type
                              typeReference
                                userType
                                  simpleUserType
                                    simpleIdentifier
                                      Identifier("String")
                            functionBody
                              block
                                LCURL("{")
                                NL("\n")
                                statements
                                  statement
                                    expression
                                      jumpExpression
                                        RETURN("return")
                                        expression
                                          thisExpression
                                            THIS_AT("this@lambda")
                                  semis
                                    NL("\n")
                                RCURL("}")
                    NL("\n")
            RCURL("}")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
