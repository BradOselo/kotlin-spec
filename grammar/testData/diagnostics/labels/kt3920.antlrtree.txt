File: kt3920.kt - f02b209c0e37f4f187ec463b44f697b7
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  expression
                    simpleIdentifier
                      Identifier("run")
                  unarySuffix
                    callSuffix
                      annotatedLambda
                        label
                          simpleIdentifier
                            Identifier("f")
                          AT_NO_WS("@")
                        lambdaLiteral
                          LCURL("{")
                          NL("\n")
                          statements
                            statement
                              declaration
                                propertyDeclaration
                                  VAL("val")
                                  variableDeclaration
                                    simpleIdentifier
                                      Identifier("x")
                                  ASSIGNMENT("=")
                                  expression
                                    ifExpression
                                      IF("if")
                                      LPAREN("(")
                                      expression
                                        expression
                                          literalConstant
                                            IntegerLiteral("1")
                                        comparisonOperator
                                          RANGLE(">")
                                        expression
                                          literalConstant
                                            IntegerLiteral("2")
                                      RPAREN(")")
                                      controlStructureBody
                                        statement
                                          expression
                                            jumpExpression
                                              RETURN_AT("return@f")
                                              expression
                                                literalConstant
                                                  IntegerLiteral("1")
                                      ELSE("else")
                                      controlStructureBody
                                        statement
                                          expression
                                            literalConstant
                                              IntegerLiteral("2")
                            semis
                              NL("\n")
                            statement
                              expression
                                literalConstant
                                  IntegerLiteral("2")
                            semis
                              NL("\n")
                          RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
