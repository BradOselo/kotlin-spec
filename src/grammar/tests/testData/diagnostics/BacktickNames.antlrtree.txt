File: BacktickNames.kt (WITH_ERRORS)
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        ErrorCharacter("`")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          SEMICOLON(";")
          Identifier("name")
  ErrorCharacter("`")
  NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          ErrorCharacter("`")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          LSQUARE("[")
          Identifier("name")
  Identifier("class")
  Identifier("name")
  Identifier("class")
  Identifier("name")
  Identifier("class")
  Identifier("name")
  Identifier("class")
  Identifier("name")
  Identifier("class")
  Identifier("name")
  Identifier("class")
  Identifier("` `")
  LCURL("{")
  RCURL("}")
  Identifier("class")
  Identifier("`  `")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("X")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("X")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("X")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("X")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("X")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("X")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("X")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        RANGLE(">")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        RSQUARE("]")
        ErrorCharacter("`")
        ASSIGNMENT("=")
        IntegerLiteral("9")
    semis
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        ErrorCharacter("`")
        LSQUARE("[")
    semis
      SEMICOLON(";")
  RSQUARE("]")
  ErrorCharacter("`")
  ASSIGNMENT("=")
  IntegerLiteral("10")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  CLASS("class")
  Identifier("B")
  LPAREN("(")
  VAL("val")
  Identifier("b")
  Identifier("Int")
  COMMA(",")
  VAL("val")
  Identifier("d")
  Identifier("Int")
  RPAREN(")")
  NL("\n")
  NL("\n")
  VAL("val")
  Identifier("ff")
  COLON(":")
  LPAREN("(")
  Identifier("X")
  Identifier("Int")
  RPAREN(")")
  ARROW("->")
  Identifier("Unit")
  ASSIGNMENT("=")
  LCURL("{")
  RCURL("}")
  NL("\n")
  VAL("val")
  Identifier("fg")
  COLON(":")
  LPAREN("(")
  LPAREN("(")
  Identifier("X")
  Identifier("Int")
  RPAREN(")")
  ARROW("->")
  Identifier("Unit")
  RPAREN(")")
  ARROW("->")
  Identifier("Unit")
  ASSIGNMENT("=")
  LCURL("{")
  RCURL("}")
  NL("\n")
  VAL("val")
  Identifier("fh")
  COLON(":")
  LPAREN("(")
  LPAREN("(")
  Identifier("Int")
  RPAREN(")")
  ARROW("->")
  LPAREN("(")
  LPAREN("(")
  Identifier("X")
  Identifier("Int")
  RPAREN(")")
  ARROW("->")
  Identifier("Unit")
  RPAREN(")")
  ARROW("->")
  Identifier("Unit")
  RPAREN(")")
  ASSIGNMENT("=")
  LCURL("{")
  LCURL("{")
  RCURL("}")
  RCURL("}")
  NL("\n")
  NL("\n")
  FUN("fun")
  Identifier("f")
  LPAREN("(")
  Identifier("x")
  COLON(":")
  Identifier("Int")
  COMMA(",")
  Identifier("g")
  COLON(":")
  LPAREN("(")
  Identifier("Int")
  RPAREN(")")
  ARROW("->")
  Identifier("Unit")
  RPAREN(")")
  ASSIGNMENT("=")
  Identifier("g")
  LPAREN("(")
  Identifier("x")
  RPAREN(")")
  NL("\n")
  NL("\n")
  DATA("data")
  CLASS("class")
  Identifier("Data")
  LPAREN("(")
  VAL("val")
  Identifier("x")
  COLON(":")
  Identifier("Int")
  COMMA(",")
  VAL("val")
  Identifier("y")
  COLON(":")
  Identifier("Int")
  RPAREN(")")
  NL("\n")
  NL("\n")
  CLASS("class")
  Identifier("A")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  INIT("init")
  LCURL("{")
  NL("\n")
  VAL("val")
  ErrorCharacter("`")
  Identifier("a")
  COLON(":")
  Identifier("b")
  ErrorCharacter("`")
  ASSIGNMENT("=")
  IntegerLiteral("10")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  FUN("fun")
  Identifier("g")
  LPAREN("(")
  Identifier("y")
  Identifier("Int")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  VAL("val")
  ErrorCharacter("`")
  Identifier("s")
  COLON(":")
  ErrorCharacter("`")
  ASSIGNMENT("=")
  IntegerLiteral("30")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  FUN("fun")
  ErrorCharacter("`")
  Identifier("foo")
  COLON(":")
  Identifier("bar")
  Identifier("`(`")
  ErrorCharacter("\")
  Identifier("arg")
  ErrorCharacter("`")
  COLON(":")
  Identifier("Int")
  RPAREN(")")
  COLON(":")
  Identifier("Int")
  LCURL("{")
  NL("\n")
  VAL("val")
  LPAREN("(")
  Identifier("b")
  VAL("val")
  Identifier("b")
  FUN("fun")
  Identifier("localFun")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  FOR("for")
  LPAREN("(")
  Identifier("y")
  RealLiteral(".10")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  RCURL("}")
  Identifier("f")
  LPAREN("(")
  IntegerLiteral("10")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  ErrorCharacter("`")
  Identifier("x")
  COLON(":")
  Identifier("z")
  ErrorCharacter("`")
  COLON(":")
  Identifier("Int")
  ARROW("->")
  Identifier("localFun")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  Identifier("f")
  LPAREN("(")
  IntegerLiteral("20")
  COMMA(",")
  FUN("fun")
  LPAREN("(")
  Identifier("z")
  Identifier("Int")
  RPAREN(")")
  COLON(":")
  Identifier("Unit")
  LCURL("{")
  RCURL("}")
  RPAREN(")")
  TRY("try")
  LCURL("{")
  NL("\n")
  VAL("val")
  ErrorCharacter("`")
  Identifier("a")
  COLON(":")
  ErrorCharacter("`")
  ASSIGNMENT("=")
  IntegerLiteral("10")
  NL("\n")
  RCURL("}")
  CATCH("catch")
  LPAREN("(")
  Identifier("a")
  Identifier("Exception")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  VAL("val")
  ErrorCharacter("`")
  Identifier("b")
  COLON(":")
  ErrorCharacter("`")
  ASSIGNMENT("=")
  IntegerLiteral("20")
  NL("\n")
  RCURL("}")
  RETURN("return")
  Identifier("arg")
  RCURL("}")
